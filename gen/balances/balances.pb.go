// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: balances/balances.proto

package balances

import (
	common "davensi.com/core/gen/common"
	prices "davensi.com/core/gen/prices"
	recipients "davensi.com/core/gen/recipients"
	uoms "davensi.com/core/gen/uoms"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_TYPE_UNSPECIFIED Type = 0
	Type_TYPE_ACTUAL      Type = 1
	Type_TYPE_UNREALIZED  Type = 2
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_ACTUAL",
		2: "TYPE_UNREALIZED",
	}
	Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_ACTUAL":      1,
		"TYPE_UNREALIZED":  2,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_balances_balances_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_balances_balances_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_balances_balances_proto_rawDescGZIP(), []int{0}
}

type TypeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []Type `protobuf:"varint,1,rep,packed,name=list,proto3,enum=balances.Type" json:"list,omitempty"`
}

func (x *TypeList) Reset() {
	*x = TypeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balances_balances_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeList) ProtoMessage() {}

func (x *TypeList) ProtoReflect() protoreflect.Message {
	mi := &file_balances_balances_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeList.ProtoReflect.Descriptor instead.
func (*TypeList) Descriptor() ([]byte, []int) {
	return file_balances_balances_proto_rawDescGZIP(), []int{0}
}

func (x *TypeList) GetList() []Type {
	if x != nil {
		return x.List
	}
	return nil
}

// Backed by table 'balances' + 'balance_alt'
type Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // System Key: id is generated by the server or the database
	Type           Type                   `protobuf:"varint,2,opt,name=type,proto3,enum=balances.Type" json:"type,omitempty"`
	Recipient      *recipients.Recipient  `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TransactionId  string                 `protobuf:"bytes,5,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	ItemNo         uint32                 `protobuf:"varint,6,opt,name=item_no,json=itemNo,proto3" json:"item_no,omitempty"`
	Amount         *common.Decimal        `protobuf:"bytes,7,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency       *uoms.UoM              `protobuf:"bytes,8,opt,name=currency,proto3" json:"currency,omitempty"`
	LegalCurrency1 *Conversion            `protobuf:"bytes,9,opt,name=legal_currency1,json=legalCurrency1,proto3,oneof" json:"legal_currency1,omitempty"`
	LegalCurrency2 *Conversion            `protobuf:"bytes,10,opt,name=legal_currency2,json=legalCurrency2,proto3,oneof" json:"legal_currency2,omitempty"`
	LegalCurrency3 *Conversion            `protobuf:"bytes,11,opt,name=legal_currency3,json=legalCurrency3,proto3,oneof" json:"legal_currency3,omitempty"`
	AltConversions *AltConversionList     `protobuf:"bytes,12,opt,name=alt_conversions,json=altConversions,proto3,oneof" json:"alt_conversions,omitempty"`
	Status         *common.Status         `protobuf:"varint,13,opt,name=status,proto3,enum=common.Status,oneof" json:"status,omitempty"` // Default: 1
}

func (x *Balance) Reset() {
	*x = Balance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balances_balances_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_balances_balances_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_balances_balances_proto_rawDescGZIP(), []int{1}
}

func (x *Balance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Balance) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *Balance) GetRecipient() *recipients.Recipient {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *Balance) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Balance) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *Balance) GetItemNo() uint32 {
	if x != nil {
		return x.ItemNo
	}
	return 0
}

func (x *Balance) GetAmount() *common.Decimal {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Balance) GetCurrency() *uoms.UoM {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *Balance) GetLegalCurrency1() *Conversion {
	if x != nil {
		return x.LegalCurrency1
	}
	return nil
}

func (x *Balance) GetLegalCurrency2() *Conversion {
	if x != nil {
		return x.LegalCurrency2
	}
	return nil
}

func (x *Balance) GetLegalCurrency3() *Conversion {
	if x != nil {
		return x.LegalCurrency3
	}
	return nil
}

func (x *Balance) GetAltConversions() *AltConversionList {
	if x != nil {
		return x.AltConversions
	}
	return nil
}

func (x *Balance) GetStatus() common.Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return common.Status(0)
}

type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Balance `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balances_balances_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_balances_balances_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_balances_balances_proto_rawDescGZIP(), []int{2}
}

func (x *List) GetList() []*Balance {
	if x != nil {
		return x.List
	}
	return nil
}

type SelectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []string `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SelectList) Reset() {
	*x = SelectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balances_balances_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectList) ProtoMessage() {}

func (x *SelectList) ProtoReflect() protoreflect.Message {
	mi := &file_balances_balances_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectList.ProtoReflect.Descriptor instead.
func (*SelectList) Descriptor() ([]byte, []int) {
	return file_balances_balances_proto_rawDescGZIP(), []int{3}
}

func (x *SelectList) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

type Conversion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount   *common.Decimal `protobuf:"bytes,1,opt,name=amount,proto3,oneof" json:"amount,omitempty"`
	Currency *uoms.UoM       `protobuf:"bytes,2,opt,name=currency,proto3,oneof" json:"currency,omitempty"`
	Rate     *common.Decimal `protobuf:"bytes,3,opt,name=rate,proto3,oneof" json:"rate,omitempty"`
	Price    *prices.Price   `protobuf:"bytes,4,opt,name=price,proto3,oneof" json:"price,omitempty"`
}

func (x *Conversion) Reset() {
	*x = Conversion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balances_balances_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conversion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversion) ProtoMessage() {}

func (x *Conversion) ProtoReflect() protoreflect.Message {
	mi := &file_balances_balances_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversion.ProtoReflect.Descriptor instead.
func (*Conversion) Descriptor() ([]byte, []int) {
	return file_balances_balances_proto_rawDescGZIP(), []int{4}
}

func (x *Conversion) GetAmount() *common.Decimal {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Conversion) GetCurrency() *uoms.UoM {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *Conversion) GetRate() *common.Decimal {
	if x != nil {
		return x.Rate
	}
	return nil
}

func (x *Conversion) GetPrice() *prices.Price {
	if x != nil {
		return x.Price
	}
	return nil
}

type SelectConversion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount   *common.DecimalValueList `protobuf:"bytes,1,opt,name=amount,proto3,oneof" json:"amount,omitempty"`
	Currency *uoms.GetListRequest     `protobuf:"bytes,2,opt,name=currency,proto3,oneof" json:"currency,omitempty"`
	Rate     *common.DecimalValueList `protobuf:"bytes,3,opt,name=rate,proto3,oneof" json:"rate,omitempty"`
	Price    *prices.GetListRequest   `protobuf:"bytes,4,opt,name=price,proto3,oneof" json:"price,omitempty"`
}

func (x *SelectConversion) Reset() {
	*x = SelectConversion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balances_balances_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectConversion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectConversion) ProtoMessage() {}

func (x *SelectConversion) ProtoReflect() protoreflect.Message {
	mi := &file_balances_balances_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectConversion.ProtoReflect.Descriptor instead.
func (*SelectConversion) Descriptor() ([]byte, []int) {
	return file_balances_balances_proto_rawDescGZIP(), []int{5}
}

func (x *SelectConversion) GetAmount() *common.DecimalValueList {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *SelectConversion) GetCurrency() *uoms.GetListRequest {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *SelectConversion) GetRate() *common.DecimalValueList {
	if x != nil {
		return x.Rate
	}
	return nil
}

func (x *SelectConversion) GetPrice() *prices.GetListRequest {
	if x != nil {
		return x.Price
	}
	return nil
}

type AltConversion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alt      uint32          `protobuf:"varint,1,opt,name=alt,proto3" json:"alt,omitempty"`
	Amount   *common.Decimal `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency *uoms.UoM       `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	Rate     *common.Decimal `protobuf:"bytes,4,opt,name=rate,proto3" json:"rate,omitempty"`
	Price    *prices.Price   `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	Status   common.Status   `protobuf:"varint,6,opt,name=status,proto3,enum=common.Status" json:"status,omitempty"`
}

func (x *AltConversion) Reset() {
	*x = AltConversion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balances_balances_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AltConversion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AltConversion) ProtoMessage() {}

func (x *AltConversion) ProtoReflect() protoreflect.Message {
	mi := &file_balances_balances_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AltConversion.ProtoReflect.Descriptor instead.
func (*AltConversion) Descriptor() ([]byte, []int) {
	return file_balances_balances_proto_rawDescGZIP(), []int{6}
}

func (x *AltConversion) GetAlt() uint32 {
	if x != nil {
		return x.Alt
	}
	return 0
}

func (x *AltConversion) GetAmount() *common.Decimal {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *AltConversion) GetCurrency() *uoms.UoM {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *AltConversion) GetRate() *common.Decimal {
	if x != nil {
		return x.Rate
	}
	return nil
}

func (x *AltConversion) GetPrice() *prices.Price {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *AltConversion) GetStatus() common.Status {
	if x != nil {
		return x.Status
	}
	return common.Status(0)
}

type AltConversionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*AltConversion `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AltConversionList) Reset() {
	*x = AltConversionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balances_balances_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AltConversionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AltConversionList) ProtoMessage() {}

func (x *AltConversionList) ProtoReflect() protoreflect.Message {
	mi := &file_balances_balances_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AltConversionList.ProtoReflect.Descriptor instead.
func (*AltConversionList) Descriptor() ([]byte, []int) {
	return file_balances_balances_proto_rawDescGZIP(), []int{7}
}

func (x *AltConversionList) GetList() []*AltConversion {
	if x != nil {
		return x.List
	}
	return nil
}

type RevaluateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is generated by the server or the database
	Recipient *recipients.Select `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
}

func (x *RevaluateRequest) Reset() {
	*x = RevaluateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balances_balances_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevaluateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevaluateRequest) ProtoMessage() {}

func (x *RevaluateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balances_balances_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevaluateRequest.ProtoReflect.Descriptor instead.
func (*RevaluateRequest) Descriptor() ([]byte, []int) {
	return file_balances_balances_proto_rawDescGZIP(), []int{8}
}

func (x *RevaluateRequest) GetRecipient() *recipients.Select {
	if x != nil {
		return x.Recipient
	}
	return nil
}

type RevaluateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*RevaluateResponse_Error
	//	*RevaluateResponse_Balance
	Response isRevaluateResponse_Response `protobuf_oneof:"response"`
}

func (x *RevaluateResponse) Reset() {
	*x = RevaluateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balances_balances_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevaluateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevaluateResponse) ProtoMessage() {}

func (x *RevaluateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balances_balances_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevaluateResponse.ProtoReflect.Descriptor instead.
func (*RevaluateResponse) Descriptor() ([]byte, []int) {
	return file_balances_balances_proto_rawDescGZIP(), []int{9}
}

func (m *RevaluateResponse) GetResponse() isRevaluateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RevaluateResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*RevaluateResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *RevaluateResponse) GetBalance() *Balance {
	if x, ok := x.GetResponse().(*RevaluateResponse_Balance); ok {
		return x.Balance
	}
	return nil
}

type isRevaluateResponse_Response interface {
	isRevaluateResponse_Response()
}

type RevaluateResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type RevaluateResponse_Balance struct {
	Balance *Balance `protobuf:"bytes,2,opt,name=balance,proto3,oneof"`
}

func (*RevaluateResponse_Error) isRevaluateResponse_Response() {}

func (*RevaluateResponse_Balance) isRevaluateResponse_Response() {}

type TimeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Amount         *common.Decimal        `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency       *uoms.UoM              `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	LegalCurrency1 *Conversion            `protobuf:"bytes,4,opt,name=legal_currency1,json=legalCurrency1,proto3,oneof" json:"legal_currency1,omitempty"`
	LegalCurrency2 *Conversion            `protobuf:"bytes,5,opt,name=legal_currency2,json=legalCurrency2,proto3,oneof" json:"legal_currency2,omitempty"`
	LegalCurrency3 *Conversion            `protobuf:"bytes,6,opt,name=legal_currency3,json=legalCurrency3,proto3,oneof" json:"legal_currency3,omitempty"`
	AltConversions *AltConversionList     `protobuf:"bytes,7,opt,name=alt_conversions,json=altConversions,proto3,oneof" json:"alt_conversions,omitempty"`
}

func (x *TimeValue) Reset() {
	*x = TimeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balances_balances_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeValue) ProtoMessage() {}

func (x *TimeValue) ProtoReflect() protoreflect.Message {
	mi := &file_balances_balances_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeValue.ProtoReflect.Descriptor instead.
func (*TimeValue) Descriptor() ([]byte, []int) {
	return file_balances_balances_proto_rawDescGZIP(), []int{10}
}

func (x *TimeValue) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TimeValue) GetAmount() *common.Decimal {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *TimeValue) GetCurrency() *uoms.UoM {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *TimeValue) GetLegalCurrency1() *Conversion {
	if x != nil {
		return x.LegalCurrency1
	}
	return nil
}

func (x *TimeValue) GetLegalCurrency2() *Conversion {
	if x != nil {
		return x.LegalCurrency2
	}
	return nil
}

func (x *TimeValue) GetLegalCurrency3() *Conversion {
	if x != nil {
		return x.LegalCurrency3
	}
	return nil
}

func (x *TimeValue) GetAltConversions() *AltConversionList {
	if x != nil {
		return x.AltConversions
	}
	return nil
}

type TimeSeries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*TimeValue `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TimeSeries) Reset() {
	*x = TimeSeries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balances_balances_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSeries) ProtoMessage() {}

func (x *TimeSeries) ProtoReflect() protoreflect.Message {
	mi := &file_balances_balances_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSeries.ProtoReflect.Descriptor instead.
func (*TimeSeries) Descriptor() ([]byte, []int) {
	return file_balances_balances_proto_rawDescGZIP(), []int{11}
}

func (x *TimeSeries) GetList() []*TimeValue {
	if x != nil {
		return x.List
	}
	return nil
}

type GetTimeSeriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       Type                       `protobuf:"varint,1,opt,name=type,proto3,enum=balances.Type" json:"type,omitempty"`
	Recipients *recipients.SelectList     `protobuf:"bytes,2,opt,name=recipients,proto3" json:"recipients,omitempty"`
	Timescale  *common.Timescale          `protobuf:"varint,3,opt,name=timescale,proto3,enum=common.Timescale,oneof" json:"timescale,omitempty"` // Default: UNSPECIFIED
	Timestamp  *common.TimestampValueList `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *GetTimeSeriesRequest) Reset() {
	*x = GetTimeSeriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balances_balances_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesRequest) ProtoMessage() {}

func (x *GetTimeSeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balances_balances_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesRequest.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesRequest) Descriptor() ([]byte, []int) {
	return file_balances_balances_proto_rawDescGZIP(), []int{12}
}

func (x *GetTimeSeriesRequest) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *GetTimeSeriesRequest) GetRecipients() *recipients.SelectList {
	if x != nil {
		return x.Recipients
	}
	return nil
}

func (x *GetTimeSeriesRequest) GetTimescale() common.Timescale {
	if x != nil && x.Timescale != nil {
		return *x.Timescale
	}
	return common.Timescale(0)
}

func (x *GetTimeSeriesRequest) GetTimestamp() *common.TimestampValueList {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type GetTimeSeriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       Type              `protobuf:"varint,1,opt,name=type,proto3,enum=balances.Type" json:"type,omitempty"`
	Recipients *recipients.List  `protobuf:"bytes,2,opt,name=recipients,proto3" json:"recipients,omitempty"`
	Timescale  *common.Timescale `protobuf:"varint,3,opt,name=timescale,proto3,enum=common.Timescale,oneof" json:"timescale,omitempty"` // Only when UNSPECIFIED
	Values     *TimeSeries       `protobuf:"bytes,4,opt,name=values,proto3" json:"values,omitempty"`
}

func (x *GetTimeSeriesResponse) Reset() {
	*x = GetTimeSeriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balances_balances_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeSeriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeSeriesResponse) ProtoMessage() {}

func (x *GetTimeSeriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balances_balances_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeSeriesResponse.ProtoReflect.Descriptor instead.
func (*GetTimeSeriesResponse) Descriptor() ([]byte, []int) {
	return file_balances_balances_proto_rawDescGZIP(), []int{13}
}

func (x *GetTimeSeriesResponse) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *GetTimeSeriesResponse) GetRecipients() *recipients.List {
	if x != nil {
		return x.Recipients
	}
	return nil
}

func (x *GetTimeSeriesResponse) GetTimescale() common.Timescale {
	if x != nil && x.Timescale != nil {
		return *x.Timescale
	}
	return common.Timescale(0)
}

func (x *GetTimeSeriesResponse) GetValues() *TimeSeries {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_balances_balances_proto protoreflect.FileDescriptor

var file_balances_balances_proto_rawDesc = []byte{
	0x0a, 0x17, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0f, 0x75, 0x6f, 0x6d, 0x73, 0x2f, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xdb, 0x05, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x4e,
	0x6f, 0x12, 0x27, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75,
	0x6f, 0x6d, 0x73, 0x2e, 0x55, 0x6f, 0x4d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x42, 0x0a, 0x0f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x31, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x31, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x0e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x32, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0f, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x33, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x02, 0x52, 0x0e, 0x6c, 0x65, 0x67, 0x61,
	0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x33, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a,
	0x0f, 0x61, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x2e, 0x41, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x03, 0x52, 0x0e, 0x61, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x04, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x31, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x65,
	0x67, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x32, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x33, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x61, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x2d, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x20, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xe5, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x48, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x55, 0x6f, 0x4d, 0x48, 0x01, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x02, 0x52, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x48, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x10, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x35,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x01, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x04,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x02, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x31, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0xe3, 0x01,
	0x0a, 0x0d, 0x41, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x6c,
	0x74, 0x12, 0x27, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75,
	0x6f, 0x6d, 0x73, 0x2e, 0x55, 0x6f, 0x4d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x23, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x40, 0x0a, 0x11, 0x41, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x2e, 0x41, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x10, 0x52, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x75, 0x0a, 0x11, 0x52,
	0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xfc, 0x03, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x27, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x55, 0x6f, 0x4d,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x42, 0x0a, 0x0f, 0x6c, 0x65,
	0x67, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x31, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x31, 0x88, 0x01, 0x01, 0x12, 0x42,
	0x0a, 0x0f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52,
	0x0e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x32, 0x88,
	0x01, 0x01, 0x12, 0x42, 0x0a, 0x0f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x48, 0x02, 0x52, 0x0e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x33, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x0f, 0x61, 0x6c, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x03, 0x52, 0x0e,
	0x61, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01,
	0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x31, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x32, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x65,
	0x67, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x33, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x61, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x35, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xf0, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x34, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x22, 0xdf, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x48, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x2a, 0x42, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x52, 0x45, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10,
	0x02, 0x42, 0x7c, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x42, 0x0d, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x1d, 0x64, 0x61, 0x76, 0x65, 0x6e, 0x73, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0xa2, 0x02, 0x03, 0x42, 0x58, 0x58, 0xaa, 0x02, 0x08, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0xca, 0x02, 0x08, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0xe2, 0x02, 0x14,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_balances_balances_proto_rawDescOnce sync.Once
	file_balances_balances_proto_rawDescData = file_balances_balances_proto_rawDesc
)

func file_balances_balances_proto_rawDescGZIP() []byte {
	file_balances_balances_proto_rawDescOnce.Do(func() {
		file_balances_balances_proto_rawDescData = protoimpl.X.CompressGZIP(file_balances_balances_proto_rawDescData)
	})
	return file_balances_balances_proto_rawDescData
}

var file_balances_balances_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_balances_balances_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_balances_balances_proto_goTypes = []interface{}{
	(Type)(0),                         // 0: balances.Type
	(*TypeList)(nil),                  // 1: balances.TypeList
	(*Balance)(nil),                   // 2: balances.Balance
	(*List)(nil),                      // 3: balances.List
	(*SelectList)(nil),                // 4: balances.SelectList
	(*Conversion)(nil),                // 5: balances.Conversion
	(*SelectConversion)(nil),          // 6: balances.SelectConversion
	(*AltConversion)(nil),             // 7: balances.AltConversion
	(*AltConversionList)(nil),         // 8: balances.AltConversionList
	(*RevaluateRequest)(nil),          // 9: balances.RevaluateRequest
	(*RevaluateResponse)(nil),         // 10: balances.RevaluateResponse
	(*TimeValue)(nil),                 // 11: balances.TimeValue
	(*TimeSeries)(nil),                // 12: balances.TimeSeries
	(*GetTimeSeriesRequest)(nil),      // 13: balances.GetTimeSeriesRequest
	(*GetTimeSeriesResponse)(nil),     // 14: balances.GetTimeSeriesResponse
	(*recipients.Recipient)(nil),      // 15: recipients.Recipient
	(*timestamppb.Timestamp)(nil),     // 16: google.protobuf.Timestamp
	(*common.Decimal)(nil),            // 17: common.Decimal
	(*uoms.UoM)(nil),                  // 18: uoms.UoM
	(common.Status)(0),                // 19: common.Status
	(*prices.Price)(nil),              // 20: prices.Price
	(*common.DecimalValueList)(nil),   // 21: common.DecimalValueList
	(*uoms.GetListRequest)(nil),       // 22: uoms.GetListRequest
	(*prices.GetListRequest)(nil),     // 23: prices.GetListRequest
	(*recipients.Select)(nil),         // 24: recipients.Select
	(*common.Error)(nil),              // 25: common.Error
	(*recipients.SelectList)(nil),     // 26: recipients.SelectList
	(common.Timescale)(0),             // 27: common.Timescale
	(*common.TimestampValueList)(nil), // 28: common.TimestampValueList
	(*recipients.List)(nil),           // 29: recipients.List
}
var file_balances_balances_proto_depIdxs = []int32{
	0,  // 0: balances.TypeList.list:type_name -> balances.Type
	0,  // 1: balances.Balance.type:type_name -> balances.Type
	15, // 2: balances.Balance.recipient:type_name -> recipients.Recipient
	16, // 3: balances.Balance.timestamp:type_name -> google.protobuf.Timestamp
	17, // 4: balances.Balance.amount:type_name -> common.Decimal
	18, // 5: balances.Balance.currency:type_name -> uoms.UoM
	5,  // 6: balances.Balance.legal_currency1:type_name -> balances.Conversion
	5,  // 7: balances.Balance.legal_currency2:type_name -> balances.Conversion
	5,  // 8: balances.Balance.legal_currency3:type_name -> balances.Conversion
	8,  // 9: balances.Balance.alt_conversions:type_name -> balances.AltConversionList
	19, // 10: balances.Balance.status:type_name -> common.Status
	2,  // 11: balances.List.list:type_name -> balances.Balance
	17, // 12: balances.Conversion.amount:type_name -> common.Decimal
	18, // 13: balances.Conversion.currency:type_name -> uoms.UoM
	17, // 14: balances.Conversion.rate:type_name -> common.Decimal
	20, // 15: balances.Conversion.price:type_name -> prices.Price
	21, // 16: balances.SelectConversion.amount:type_name -> common.DecimalValueList
	22, // 17: balances.SelectConversion.currency:type_name -> uoms.GetListRequest
	21, // 18: balances.SelectConversion.rate:type_name -> common.DecimalValueList
	23, // 19: balances.SelectConversion.price:type_name -> prices.GetListRequest
	17, // 20: balances.AltConversion.amount:type_name -> common.Decimal
	18, // 21: balances.AltConversion.currency:type_name -> uoms.UoM
	17, // 22: balances.AltConversion.rate:type_name -> common.Decimal
	20, // 23: balances.AltConversion.price:type_name -> prices.Price
	19, // 24: balances.AltConversion.status:type_name -> common.Status
	7,  // 25: balances.AltConversionList.list:type_name -> balances.AltConversion
	24, // 26: balances.RevaluateRequest.recipient:type_name -> recipients.Select
	25, // 27: balances.RevaluateResponse.error:type_name -> common.Error
	2,  // 28: balances.RevaluateResponse.balance:type_name -> balances.Balance
	16, // 29: balances.TimeValue.timestamp:type_name -> google.protobuf.Timestamp
	17, // 30: balances.TimeValue.amount:type_name -> common.Decimal
	18, // 31: balances.TimeValue.currency:type_name -> uoms.UoM
	5,  // 32: balances.TimeValue.legal_currency1:type_name -> balances.Conversion
	5,  // 33: balances.TimeValue.legal_currency2:type_name -> balances.Conversion
	5,  // 34: balances.TimeValue.legal_currency3:type_name -> balances.Conversion
	8,  // 35: balances.TimeValue.alt_conversions:type_name -> balances.AltConversionList
	11, // 36: balances.TimeSeries.list:type_name -> balances.TimeValue
	0,  // 37: balances.GetTimeSeriesRequest.type:type_name -> balances.Type
	26, // 38: balances.GetTimeSeriesRequest.recipients:type_name -> recipients.SelectList
	27, // 39: balances.GetTimeSeriesRequest.timescale:type_name -> common.Timescale
	28, // 40: balances.GetTimeSeriesRequest.timestamp:type_name -> common.TimestampValueList
	0,  // 41: balances.GetTimeSeriesResponse.type:type_name -> balances.Type
	29, // 42: balances.GetTimeSeriesResponse.recipients:type_name -> recipients.List
	27, // 43: balances.GetTimeSeriesResponse.timescale:type_name -> common.Timescale
	12, // 44: balances.GetTimeSeriesResponse.values:type_name -> balances.TimeSeries
	45, // [45:45] is the sub-list for method output_type
	45, // [45:45] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_balances_balances_proto_init() }
func file_balances_balances_proto_init() {
	if File_balances_balances_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_balances_balances_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balances_balances_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balances_balances_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balances_balances_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balances_balances_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conversion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balances_balances_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectConversion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balances_balances_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AltConversion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balances_balances_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AltConversionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balances_balances_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevaluateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balances_balances_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevaluateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balances_balances_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balances_balances_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSeries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balances_balances_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balances_balances_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeSeriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_balances_balances_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_balances_balances_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_balances_balances_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_balances_balances_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*RevaluateResponse_Error)(nil),
		(*RevaluateResponse_Balance)(nil),
	}
	file_balances_balances_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_balances_balances_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_balances_balances_proto_msgTypes[13].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_balances_balances_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_balances_balances_proto_goTypes,
		DependencyIndexes: file_balances_balances_proto_depIdxs,
		EnumInfos:         file_balances_balances_proto_enumTypes,
		MessageInfos:      file_balances_balances_proto_msgTypes,
	}.Build()
	File_balances_balances_proto = out.File
	file_balances_balances_proto_rawDesc = nil
	file_balances_balances_proto_goTypes = nil
	file_balances_balances_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: bankaccounts/bankaccounts.proto

package bankaccounts

import (
	bankbranches "davensi.com/core/gen/bankbranches"
	common "davensi.com/core/gen/common"
	recipients "davensi.com/core/gen/recipients"
	uoms "davensi.com/core/gen/uoms"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_TYPE_UNSPECIFIED                             Type = 0
	Type_TYPE_CURRENT                                 Type = 1
	Type_TYPE_CASH_PAYMENT                            Type = 2
	Type_TYPE_CHARGES                                 Type = 3
	Type_TYPE_CASH_INCOME                             Type = 4
	Type_TYPE_COMMISSION                              Type = 5
	Type_TYPE_CLEARING_PARTICIPANT_SETTLEMENT_ACCOUNT Type = 6
	Type_TYPE_LIMITED_LIQUIDITY_SAVINGS_ACCOUNT       Type = 7
	Type_TYPE_LOAN                                    Type = 8
	Type_TYPE_MARGINAL_LENDING                        Type = 9
	Type_TYPE_MONEY_MARKET                            Type = 10
	Type_TYPE_NON_RESIDENT_EXTERNAL                   Type = 11
	Type_TYPE_OVERDRAFT                               Type = 12
	Type_TYPE_OVER_NIGHT_DEPOSIT                      Type = 13
	Type_TYPE_OTHER_ACCOUNT                           Type = 14
	Type_TYPE_SETTLEMENT                              Type = 15
	Type_TYPE_SALARY                                  Type = 16
	Type_TYPE_SAVINGS                                 Type = 17
	Type_TYPE_TAX                                     Type = 18
	Type_TYPE_TRANSACTING_ACCOUNT                     Type = 19
	Type_TYPE_CASH_TRADING                            Type = 20
	Type_TYPE_CREDIT_CARD                             Type = 21
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0:  "TYPE_UNSPECIFIED",
		1:  "TYPE_CURRENT",
		2:  "TYPE_CASH_PAYMENT",
		3:  "TYPE_CHARGES",
		4:  "TYPE_CASH_INCOME",
		5:  "TYPE_COMMISSION",
		6:  "TYPE_CLEARING_PARTICIPANT_SETTLEMENT_ACCOUNT",
		7:  "TYPE_LIMITED_LIQUIDITY_SAVINGS_ACCOUNT",
		8:  "TYPE_LOAN",
		9:  "TYPE_MARGINAL_LENDING",
		10: "TYPE_MONEY_MARKET",
		11: "TYPE_NON_RESIDENT_EXTERNAL",
		12: "TYPE_OVERDRAFT",
		13: "TYPE_OVER_NIGHT_DEPOSIT",
		14: "TYPE_OTHER_ACCOUNT",
		15: "TYPE_SETTLEMENT",
		16: "TYPE_SALARY",
		17: "TYPE_SAVINGS",
		18: "TYPE_TAX",
		19: "TYPE_TRANSACTING_ACCOUNT",
		20: "TYPE_CASH_TRADING",
		21: "TYPE_CREDIT_CARD",
	}
	Type_value = map[string]int32{
		"TYPE_UNSPECIFIED":  0,
		"TYPE_CURRENT":      1,
		"TYPE_CASH_PAYMENT": 2,
		"TYPE_CHARGES":      3,
		"TYPE_CASH_INCOME":  4,
		"TYPE_COMMISSION":   5,
		"TYPE_CLEARING_PARTICIPANT_SETTLEMENT_ACCOUNT": 6,
		"TYPE_LIMITED_LIQUIDITY_SAVINGS_ACCOUNT":       7,
		"TYPE_LOAN":                                    8,
		"TYPE_MARGINAL_LENDING":                        9,
		"TYPE_MONEY_MARKET":                            10,
		"TYPE_NON_RESIDENT_EXTERNAL":                   11,
		"TYPE_OVERDRAFT":                               12,
		"TYPE_OVER_NIGHT_DEPOSIT":                      13,
		"TYPE_OTHER_ACCOUNT":                           14,
		"TYPE_SETTLEMENT":                              15,
		"TYPE_SALARY":                                  16,
		"TYPE_SAVINGS":                                 17,
		"TYPE_TAX":                                     18,
		"TYPE_TRANSACTING_ACCOUNT":                     19,
		"TYPE_CASH_TRADING":                            20,
		"TYPE_CREDIT_CARD":                             21,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_bankaccounts_bankaccounts_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_bankaccounts_bankaccounts_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_bankaccounts_bankaccounts_proto_rawDescGZIP(), []int{0}
}

type TypeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []Type `protobuf:"varint,1,rep,packed,name=list,proto3,enum=bankaccounts.Type" json:"list,omitempty"`
}

func (x *TypeList) Reset() {
	*x = TypeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bankaccounts_bankaccounts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeList) ProtoMessage() {}

func (x *TypeList) ProtoReflect() protoreflect.Message {
	mi := &file_bankaccounts_bankaccounts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeList.ProtoReflect.Descriptor instead.
func (*TypeList) Descriptor() ([]byte, []int) {
	return file_bankaccounts_bankaccounts_proto_rawDescGZIP(), []int{0}
}

func (x *TypeList) GetList() []Type {
	if x != nil {
		return x.List
	}
	return nil
}

// Backed by table 'recipients' + 'bankaccounts'
// bankaccounts are recipients of type 16
type BankAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipient *recipients.Recipient `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	// Fields from table 'bankaccounts'
	BankBranch      *bankbranches.BankBranch `protobuf:"bytes,2,opt,name=bank_branch,json=bankBranch,proto3" json:"bank_branch,omitempty"`
	BankAccountType Type                     `protobuf:"varint,3,opt,name=bank_account_type,json=bankAccountType,proto3,enum=bankaccounts.Type" json:"bank_account_type,omitempty"`
	Currency        *uoms.UoM                `protobuf:"bytes,4,opt,name=currency,proto3,oneof" json:"currency,omitempty"` // nil if multi-currency account
	Pan             string                   `protobuf:"bytes,5,opt,name=pan,proto3" json:"pan,omitempty"`
	MaskedPan       *string                  `protobuf:"bytes,6,opt,name=masked_pan,json=maskedPan,proto3,oneof" json:"masked_pan,omitempty"`
	Bban            *string                  `protobuf:"bytes,7,opt,name=bban,proto3,oneof" json:"bban,omitempty"`
	Iban            *string                  `protobuf:"bytes,8,opt,name=iban,proto3,oneof" json:"iban,omitempty"`
	ExternalId      *string                  `protobuf:"bytes,9,opt,name=external_id,json=externalId,proto3,oneof" json:"external_id,omitempty"`
}

func (x *BankAccount) Reset() {
	*x = BankAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bankaccounts_bankaccounts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankAccount) ProtoMessage() {}

func (x *BankAccount) ProtoReflect() protoreflect.Message {
	mi := &file_bankaccounts_bankaccounts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankAccount.ProtoReflect.Descriptor instead.
func (*BankAccount) Descriptor() ([]byte, []int) {
	return file_bankaccounts_bankaccounts_proto_rawDescGZIP(), []int{1}
}

func (x *BankAccount) GetRecipient() *recipients.Recipient {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *BankAccount) GetBankBranch() *bankbranches.BankBranch {
	if x != nil {
		return x.BankBranch
	}
	return nil
}

func (x *BankAccount) GetBankAccountType() Type {
	if x != nil {
		return x.BankAccountType
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *BankAccount) GetCurrency() *uoms.UoM {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *BankAccount) GetPan() string {
	if x != nil {
		return x.Pan
	}
	return ""
}

func (x *BankAccount) GetMaskedPan() string {
	if x != nil && x.MaskedPan != nil {
		return *x.MaskedPan
	}
	return ""
}

func (x *BankAccount) GetBban() string {
	if x != nil && x.Bban != nil {
		return *x.Bban
	}
	return ""
}

func (x *BankAccount) GetIban() string {
	if x != nil && x.Iban != nil {
		return *x.Iban
	}
	return ""
}

func (x *BankAccount) GetExternalId() string {
	if x != nil && x.ExternalId != nil {
		return *x.ExternalId
	}
	return ""
}

type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*BankAccount `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bankaccounts_bankaccounts_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_bankaccounts_bankaccounts_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_bankaccounts_bankaccounts_proto_rawDescGZIP(), []int{2}
}

func (x *List) GetList() []*BankAccount {
	if x != nil {
		return x.List
	}
	return nil
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipient       *recipients.CreateRequest `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	BankBranch      *bankbranches.Select      `protobuf:"bytes,2,opt,name=bank_branch,json=bankBranch,proto3,oneof" json:"bank_branch,omitempty"`
	BankAccountType *Type                     `protobuf:"varint,3,opt,name=bank_account_type,json=bankAccountType,proto3,enum=bankaccounts.Type,oneof" json:"bank_account_type,omitempty"`
	Currency        *uoms.Select              `protobuf:"bytes,4,opt,name=currency,proto3,oneof" json:"currency,omitempty"` // nil if multi-currency account, potentially supports cryptocurrencies
	Pan             *string                   `protobuf:"bytes,5,opt,name=pan,proto3,oneof" json:"pan,omitempty"`
	MaskedPan       *string                   `protobuf:"bytes,6,opt,name=masked_pan,json=maskedPan,proto3,oneof" json:"masked_pan,omitempty"`
	Bban            *string                   `protobuf:"bytes,7,opt,name=bban,proto3,oneof" json:"bban,omitempty"`
	Iban            *string                   `protobuf:"bytes,8,opt,name=iban,proto3,oneof" json:"iban,omitempty"`
	ExternalId      *string                   `protobuf:"bytes,9,opt,name=external_id,json=externalId,proto3,oneof" json:"external_id,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bankaccounts_bankaccounts_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bankaccounts_bankaccounts_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_bankaccounts_bankaccounts_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRequest) GetRecipient() *recipients.CreateRequest {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *CreateRequest) GetBankBranch() *bankbranches.Select {
	if x != nil {
		return x.BankBranch
	}
	return nil
}

func (x *CreateRequest) GetBankAccountType() Type {
	if x != nil && x.BankAccountType != nil {
		return *x.BankAccountType
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *CreateRequest) GetCurrency() *uoms.Select {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *CreateRequest) GetPan() string {
	if x != nil && x.Pan != nil {
		return *x.Pan
	}
	return ""
}

func (x *CreateRequest) GetMaskedPan() string {
	if x != nil && x.MaskedPan != nil {
		return *x.MaskedPan
	}
	return ""
}

func (x *CreateRequest) GetBban() string {
	if x != nil && x.Bban != nil {
		return *x.Bban
	}
	return ""
}

func (x *CreateRequest) GetIban() string {
	if x != nil && x.Iban != nil {
		return *x.Iban
	}
	return ""
}

func (x *CreateRequest) GetExternalId() string {
	if x != nil && x.ExternalId != nil {
		return *x.ExternalId
	}
	return ""
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*CreateResponse_Error
	//	*CreateResponse_BankAccount
	Response isCreateResponse_Response `protobuf_oneof:"response"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bankaccounts_bankaccounts_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bankaccounts_bankaccounts_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_bankaccounts_bankaccounts_proto_rawDescGZIP(), []int{4}
}

func (m *CreateResponse) GetResponse() isCreateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CreateResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*CreateResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CreateResponse) GetBankAccount() *BankAccount {
	if x, ok := x.GetResponse().(*CreateResponse_BankAccount); ok {
		return x.BankAccount
	}
	return nil
}

type isCreateResponse_Response interface {
	isCreateResponse_Response()
}

type CreateResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateResponse_BankAccount struct {
	BankAccount *BankAccount `protobuf:"bytes,2,opt,name=bank_account,json=bankAccount,proto3,oneof"`
}

func (*CreateResponse_Error) isCreateResponse_Response() {}

func (*CreateResponse_BankAccount) isCreateResponse_Response() {}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipient       *recipients.UpdateRequest `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	BankBranch      *bankbranches.Select      `protobuf:"bytes,2,opt,name=bank_branch,json=bankBranch,proto3,oneof" json:"bank_branch,omitempty"`
	BankAccountType *Type                     `protobuf:"varint,3,opt,name=bank_account_type,json=bankAccountType,proto3,enum=bankaccounts.Type,oneof" json:"bank_account_type,omitempty"`
	Currency        *uoms.Select              `protobuf:"bytes,4,opt,name=currency,proto3,oneof" json:"currency,omitempty"`
	Pan             *string                   `protobuf:"bytes,5,opt,name=pan,proto3,oneof" json:"pan,omitempty"`
	MaskedPan       *string                   `protobuf:"bytes,6,opt,name=masked_pan,json=maskedPan,proto3,oneof" json:"masked_pan,omitempty"`
	Bban            *string                   `protobuf:"bytes,7,opt,name=bban,proto3,oneof" json:"bban,omitempty"`
	Iban            *string                   `protobuf:"bytes,8,opt,name=iban,proto3,oneof" json:"iban,omitempty"`
	ExternalId      *string                   `protobuf:"bytes,9,opt,name=external_id,json=externalId,proto3,oneof" json:"external_id,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bankaccounts_bankaccounts_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bankaccounts_bankaccounts_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_bankaccounts_bankaccounts_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateRequest) GetRecipient() *recipients.UpdateRequest {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *UpdateRequest) GetBankBranch() *bankbranches.Select {
	if x != nil {
		return x.BankBranch
	}
	return nil
}

func (x *UpdateRequest) GetBankAccountType() Type {
	if x != nil && x.BankAccountType != nil {
		return *x.BankAccountType
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *UpdateRequest) GetCurrency() *uoms.Select {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *UpdateRequest) GetPan() string {
	if x != nil && x.Pan != nil {
		return *x.Pan
	}
	return ""
}

func (x *UpdateRequest) GetMaskedPan() string {
	if x != nil && x.MaskedPan != nil {
		return *x.MaskedPan
	}
	return ""
}

func (x *UpdateRequest) GetBban() string {
	if x != nil && x.Bban != nil {
		return *x.Bban
	}
	return ""
}

func (x *UpdateRequest) GetIban() string {
	if x != nil && x.Iban != nil {
		return *x.Iban
	}
	return ""
}

func (x *UpdateRequest) GetExternalId() string {
	if x != nil && x.ExternalId != nil {
		return *x.ExternalId
	}
	return ""
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*UpdateResponse_Error
	//	*UpdateResponse_BankAccount
	Response isUpdateResponse_Response `protobuf_oneof:"response"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bankaccounts_bankaccounts_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bankaccounts_bankaccounts_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_bankaccounts_bankaccounts_proto_rawDescGZIP(), []int{6}
}

func (m *UpdateResponse) GetResponse() isUpdateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UpdateResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*UpdateResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *UpdateResponse) GetBankAccount() *BankAccount {
	if x, ok := x.GetResponse().(*UpdateResponse_BankAccount); ok {
		return x.BankAccount
	}
	return nil
}

type isUpdateResponse_Response interface {
	isUpdateResponse_Response()
}

type UpdateResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type UpdateResponse_BankAccount struct {
	BankAccount *BankAccount `protobuf:"bytes,2,opt,name=bank_account,json=bankAccount,proto3,oneof"`
}

func (*UpdateResponse_Error) isUpdateResponse_Response() {}

func (*UpdateResponse_BankAccount) isUpdateResponse_Response() {}

// An error is returned if there is more than one record found.
type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetResponse_Error
	//	*GetResponse_BankAccount
	Response isGetResponse_Response `protobuf_oneof:"response"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bankaccounts_bankaccounts_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bankaccounts_bankaccounts_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_bankaccounts_bankaccounts_proto_rawDescGZIP(), []int{7}
}

func (m *GetResponse) GetResponse() isGetResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetResponse) GetBankAccount() *BankAccount {
	if x, ok := x.GetResponse().(*GetResponse_BankAccount); ok {
		return x.BankAccount
	}
	return nil
}

type isGetResponse_Response interface {
	isGetResponse_Response()
}

type GetResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetResponse_BankAccount struct {
	BankAccount *BankAccount `protobuf:"bytes,2,opt,name=bank_account,json=bankAccount,proto3,oneof"`
}

func (*GetResponse_Error) isGetResponse_Response() {}

func (*GetResponse_BankAccount) isGetResponse_Response() {}

// GetList will use SQL 'LIKE' instead of '=' for string fields
type GetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipient       *recipients.GetListRequest   `protobuf:"bytes,1,opt,name=recipient,proto3,oneof" json:"recipient,omitempty"`
	BankBranch      *bankbranches.GetListRequest `protobuf:"bytes,2,opt,name=bank_branch,json=bankBranch,proto3,oneof" json:"bank_branch,omitempty"`
	BankAccountType *TypeList                    `protobuf:"bytes,3,opt,name=bank_account_type,json=bankAccountType,proto3,oneof" json:"bank_account_type,omitempty"`
	Currency        *uoms.GetListRequest         `protobuf:"bytes,4,opt,name=currency,proto3,oneof" json:"currency,omitempty"`
	Pan             *string                      `protobuf:"bytes,5,opt,name=pan,proto3,oneof" json:"pan,omitempty"`
	MaskedPan       *string                      `protobuf:"bytes,6,opt,name=masked_pan,json=maskedPan,proto3,oneof" json:"masked_pan,omitempty"`
	Bban            *string                      `protobuf:"bytes,7,opt,name=bban,proto3,oneof" json:"bban,omitempty"`
	Iban            *string                      `protobuf:"bytes,8,opt,name=iban,proto3,oneof" json:"iban,omitempty"`
	ExternalId      *string                      `protobuf:"bytes,9,opt,name=external_id,json=externalId,proto3,oneof" json:"external_id,omitempty"`
}

func (x *GetListRequest) Reset() {
	*x = GetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bankaccounts_bankaccounts_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRequest) ProtoMessage() {}

func (x *GetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bankaccounts_bankaccounts_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRequest.ProtoReflect.Descriptor instead.
func (*GetListRequest) Descriptor() ([]byte, []int) {
	return file_bankaccounts_bankaccounts_proto_rawDescGZIP(), []int{8}
}

func (x *GetListRequest) GetRecipient() *recipients.GetListRequest {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *GetListRequest) GetBankBranch() *bankbranches.GetListRequest {
	if x != nil {
		return x.BankBranch
	}
	return nil
}

func (x *GetListRequest) GetBankAccountType() *TypeList {
	if x != nil {
		return x.BankAccountType
	}
	return nil
}

func (x *GetListRequest) GetCurrency() *uoms.GetListRequest {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *GetListRequest) GetPan() string {
	if x != nil && x.Pan != nil {
		return *x.Pan
	}
	return ""
}

func (x *GetListRequest) GetMaskedPan() string {
	if x != nil && x.MaskedPan != nil {
		return *x.MaskedPan
	}
	return ""
}

func (x *GetListRequest) GetBban() string {
	if x != nil && x.Bban != nil {
		return *x.Bban
	}
	return ""
}

func (x *GetListRequest) GetIban() string {
	if x != nil && x.Iban != nil {
		return *x.Iban
	}
	return ""
}

func (x *GetListRequest) GetExternalId() string {
	if x != nil && x.ExternalId != nil {
		return *x.ExternalId
	}
	return ""
}

type GetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetListResponse_Error
	//	*GetListResponse_BankAccount
	Response isGetListResponse_Response `protobuf_oneof:"response"`
}

func (x *GetListResponse) Reset() {
	*x = GetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bankaccounts_bankaccounts_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListResponse) ProtoMessage() {}

func (x *GetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bankaccounts_bankaccounts_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListResponse.ProtoReflect.Descriptor instead.
func (*GetListResponse) Descriptor() ([]byte, []int) {
	return file_bankaccounts_bankaccounts_proto_rawDescGZIP(), []int{9}
}

func (m *GetListResponse) GetResponse() isGetListResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetListResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetListResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetListResponse) GetBankAccount() *BankAccount {
	if x, ok := x.GetResponse().(*GetListResponse_BankAccount); ok {
		return x.BankAccount
	}
	return nil
}

type isGetListResponse_Response interface {
	isGetListResponse_Response()
}

type GetListResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetListResponse_BankAccount struct {
	BankAccount *BankAccount `protobuf:"bytes,2,opt,name=bank_account,json=bankAccount,proto3,oneof"`
}

func (*GetListResponse_Error) isGetListResponse_Response() {}

func (*GetListResponse_BankAccount) isGetListResponse_Response() {}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*DeleteResponse_Error
	//	*DeleteResponse_BankAccount
	Response isDeleteResponse_Response `protobuf_oneof:"response"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bankaccounts_bankaccounts_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bankaccounts_bankaccounts_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_bankaccounts_bankaccounts_proto_rawDescGZIP(), []int{10}
}

func (m *DeleteResponse) GetResponse() isDeleteResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeleteResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*DeleteResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DeleteResponse) GetBankAccount() *BankAccount {
	if x, ok := x.GetResponse().(*DeleteResponse_BankAccount); ok {
		return x.BankAccount
	}
	return nil
}

type isDeleteResponse_Response interface {
	isDeleteResponse_Response()
}

type DeleteResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeleteResponse_BankAccount struct {
	BankAccount *BankAccount `protobuf:"bytes,2,opt,name=bank_account,json=bankAccount,proto3,oneof"`
}

func (*DeleteResponse_Error) isDeleteResponse_Response() {}

func (*DeleteResponse_BankAccount) isDeleteResponse_Response() {}

var File_bankaccounts_bankaccounts_proto protoreflect.FileDescriptor

var file_bankaccounts_bankaccounts_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x62, 0x61, 0x6e, 0x6b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x62,
	0x61, 0x6e, 0x6b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a,
	0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0f, 0x75, 0x6f, 0x6d, 0x73, 0x2f, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x62, 0x61, 0x6e, 0x6b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73,
	0x2f, 0x62, 0x61, 0x6e, 0x6b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x62, 0x61, 0x6e, 0x6b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xb5, 0x03, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0b,
	0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73,
	0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x0a, 0x62, 0x61, 0x6e,
	0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x3e, 0x0a, 0x11, 0x62, 0x61, 0x6e, 0x6b, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75, 0x6f, 0x6d, 0x73,
	0x2e, 0x55, 0x6f, 0x4d, 0x48, 0x00, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x70, 0x61, 0x6e, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x5f,
	0x70, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x73,
	0x6b, 0x65, 0x64, 0x50, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x62, 0x62, 0x61,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x62, 0x62, 0x61, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x6e, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x62, 0x62, 0x61, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x62, 0x61, 0x6e, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x22,
	0x35, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xf7, 0x03, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x62, 0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a,
	0x11, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x01, 0x52, 0x0f,
	0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x48, 0x02, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x15, 0x0a, 0x03, 0x70, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x03, 0x70, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x61, 0x73, 0x6b,
	0x65, 0x64, 0x5f, 0x70, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09,
	0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x62, 0x62, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x04, 0x62, 0x62,
	0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70, 0x61, 0x6e, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x6e, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x62, 0x62, 0x61, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x62, 0x61, 0x6e,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x22, 0x83, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x0c, 0x62, 0x61,
	0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e,
	0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x62,
	0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf7, 0x03, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x62, 0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a,
	0x11, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x01, 0x52, 0x0f,
	0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x48, 0x02, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x15, 0x0a, 0x03, 0x70, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x03, 0x70, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x61, 0x73, 0x6b,
	0x65, 0x64, 0x5f, 0x70, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09,
	0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x62, 0x62, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x04, 0x62, 0x62,
	0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70, 0x61, 0x6e, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x6e, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x62, 0x62, 0x61, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x62, 0x61, 0x6e,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x22, 0x83, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x0c, 0x62, 0x61,
	0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e,
	0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x62,
	0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a,
	0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa0, 0x04, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x09,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0b, 0x62,
	0x61, 0x6e, 0x6b, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x01,
	0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x88, 0x01, 0x01, 0x12,
	0x47, 0x0a, 0x11, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x61, 0x6e,
	0x6b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x02, 0x52, 0x0f, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x6f, 0x6d,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x03, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x70, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x03,
	0x70, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64,
	0x5f, 0x70, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x09, 0x6d, 0x61,
	0x73, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x62, 0x62,
	0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x04, 0x62, 0x62, 0x61, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x07, 0x52, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x08, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70, 0x61, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62,
	0x62, 0x61, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x62, 0x61, 0x6e, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x84, 0x01, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x62, 0x61, 0x6e, 0x6b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x42, 0x61, 0x6e,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a,
	0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x9b, 0x04, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x41, 0x53, 0x48, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10,
	0x02, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45,
	0x53, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x53, 0x48,
	0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4d, 0x45, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x30,
	0x0a, 0x2c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f,
	0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x54,
	0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x06,
	0x12, 0x2a, 0x0a, 0x26, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x44,
	0x5f, 0x4c, 0x49, 0x51, 0x55, 0x49, 0x44, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x41, 0x56, 0x49, 0x4e,
	0x47, 0x53, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x4f, 0x41, 0x4e, 0x10, 0x08, 0x12, 0x19, 0x0a, 0x15, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x52, 0x47, 0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x4c, 0x45, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x10, 0x09, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d,
	0x4f, 0x4e, 0x45, 0x59, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x10, 0x0a, 0x12, 0x1e, 0x0a,
	0x1a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x49, 0x44, 0x45,
	0x4e, 0x54, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x0b, 0x12, 0x12, 0x0a,
	0x0e, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10,
	0x0c, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x4e,
	0x49, 0x47, 0x48, 0x54, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x10, 0x0d, 0x12, 0x16,
	0x0a, 0x12, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x10, 0x0e, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x0f, 0x12, 0x0f, 0x0a, 0x0b, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x4c, 0x41, 0x52, 0x59, 0x10, 0x10, 0x12, 0x10, 0x0a, 0x0c,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x49, 0x4e, 0x47, 0x53, 0x10, 0x11, 0x12, 0x0c,
	0x0a, 0x08, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x58, 0x10, 0x12, 0x12, 0x1c, 0x0a, 0x18,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x13, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x41, 0x53, 0x48, 0x5f, 0x54, 0x52, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x14, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54,
	0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x15, 0x42, 0x98, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e,
	0x62, 0x61, 0x6e, 0x6b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x42, 0x11, 0x42, 0x61,
	0x6e, 0x6b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x21, 0x64, 0x61, 0x76, 0x65, 0x6e, 0x73, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x62, 0x61, 0x6e, 0x6b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0xa2, 0x02, 0x03, 0x42, 0x58, 0x58, 0xaa, 0x02, 0x0c, 0x42, 0x61, 0x6e,
	0x6b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0xca, 0x02, 0x0c, 0x42, 0x61, 0x6e, 0x6b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0xe2, 0x02, 0x18, 0x42, 0x61, 0x6e, 0x6b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x42, 0x61, 0x6e, 0x6b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bankaccounts_bankaccounts_proto_rawDescOnce sync.Once
	file_bankaccounts_bankaccounts_proto_rawDescData = file_bankaccounts_bankaccounts_proto_rawDesc
)

func file_bankaccounts_bankaccounts_proto_rawDescGZIP() []byte {
	file_bankaccounts_bankaccounts_proto_rawDescOnce.Do(func() {
		file_bankaccounts_bankaccounts_proto_rawDescData = protoimpl.X.CompressGZIP(file_bankaccounts_bankaccounts_proto_rawDescData)
	})
	return file_bankaccounts_bankaccounts_proto_rawDescData
}

var file_bankaccounts_bankaccounts_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bankaccounts_bankaccounts_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_bankaccounts_bankaccounts_proto_goTypes = []interface{}{
	(Type)(0),                           // 0: bankaccounts.Type
	(*TypeList)(nil),                    // 1: bankaccounts.TypeList
	(*BankAccount)(nil),                 // 2: bankaccounts.BankAccount
	(*List)(nil),                        // 3: bankaccounts.List
	(*CreateRequest)(nil),               // 4: bankaccounts.CreateRequest
	(*CreateResponse)(nil),              // 5: bankaccounts.CreateResponse
	(*UpdateRequest)(nil),               // 6: bankaccounts.UpdateRequest
	(*UpdateResponse)(nil),              // 7: bankaccounts.UpdateResponse
	(*GetResponse)(nil),                 // 8: bankaccounts.GetResponse
	(*GetListRequest)(nil),              // 9: bankaccounts.GetListRequest
	(*GetListResponse)(nil),             // 10: bankaccounts.GetListResponse
	(*DeleteResponse)(nil),              // 11: bankaccounts.DeleteResponse
	(*recipients.Recipient)(nil),        // 12: recipients.Recipient
	(*bankbranches.BankBranch)(nil),     // 13: bankbranches.BankBranch
	(*uoms.UoM)(nil),                    // 14: uoms.UoM
	(*recipients.CreateRequest)(nil),    // 15: recipients.CreateRequest
	(*bankbranches.Select)(nil),         // 16: bankbranches.Select
	(*uoms.Select)(nil),                 // 17: uoms.Select
	(*common.Error)(nil),                // 18: common.Error
	(*recipients.UpdateRequest)(nil),    // 19: recipients.UpdateRequest
	(*recipients.GetListRequest)(nil),   // 20: recipients.GetListRequest
	(*bankbranches.GetListRequest)(nil), // 21: bankbranches.GetListRequest
	(*uoms.GetListRequest)(nil),         // 22: uoms.GetListRequest
}
var file_bankaccounts_bankaccounts_proto_depIdxs = []int32{
	0,  // 0: bankaccounts.TypeList.list:type_name -> bankaccounts.Type
	12, // 1: bankaccounts.BankAccount.recipient:type_name -> recipients.Recipient
	13, // 2: bankaccounts.BankAccount.bank_branch:type_name -> bankbranches.BankBranch
	0,  // 3: bankaccounts.BankAccount.bank_account_type:type_name -> bankaccounts.Type
	14, // 4: bankaccounts.BankAccount.currency:type_name -> uoms.UoM
	2,  // 5: bankaccounts.List.list:type_name -> bankaccounts.BankAccount
	15, // 6: bankaccounts.CreateRequest.recipient:type_name -> recipients.CreateRequest
	16, // 7: bankaccounts.CreateRequest.bank_branch:type_name -> bankbranches.Select
	0,  // 8: bankaccounts.CreateRequest.bank_account_type:type_name -> bankaccounts.Type
	17, // 9: bankaccounts.CreateRequest.currency:type_name -> uoms.Select
	18, // 10: bankaccounts.CreateResponse.error:type_name -> common.Error
	2,  // 11: bankaccounts.CreateResponse.bank_account:type_name -> bankaccounts.BankAccount
	19, // 12: bankaccounts.UpdateRequest.recipient:type_name -> recipients.UpdateRequest
	16, // 13: bankaccounts.UpdateRequest.bank_branch:type_name -> bankbranches.Select
	0,  // 14: bankaccounts.UpdateRequest.bank_account_type:type_name -> bankaccounts.Type
	17, // 15: bankaccounts.UpdateRequest.currency:type_name -> uoms.Select
	18, // 16: bankaccounts.UpdateResponse.error:type_name -> common.Error
	2,  // 17: bankaccounts.UpdateResponse.bank_account:type_name -> bankaccounts.BankAccount
	18, // 18: bankaccounts.GetResponse.error:type_name -> common.Error
	2,  // 19: bankaccounts.GetResponse.bank_account:type_name -> bankaccounts.BankAccount
	20, // 20: bankaccounts.GetListRequest.recipient:type_name -> recipients.GetListRequest
	21, // 21: bankaccounts.GetListRequest.bank_branch:type_name -> bankbranches.GetListRequest
	1,  // 22: bankaccounts.GetListRequest.bank_account_type:type_name -> bankaccounts.TypeList
	22, // 23: bankaccounts.GetListRequest.currency:type_name -> uoms.GetListRequest
	18, // 24: bankaccounts.GetListResponse.error:type_name -> common.Error
	2,  // 25: bankaccounts.GetListResponse.bank_account:type_name -> bankaccounts.BankAccount
	18, // 26: bankaccounts.DeleteResponse.error:type_name -> common.Error
	2,  // 27: bankaccounts.DeleteResponse.bank_account:type_name -> bankaccounts.BankAccount
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_bankaccounts_bankaccounts_proto_init() }
func file_bankaccounts_bankaccounts_proto_init() {
	if File_bankaccounts_bankaccounts_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bankaccounts_bankaccounts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bankaccounts_bankaccounts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bankaccounts_bankaccounts_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bankaccounts_bankaccounts_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bankaccounts_bankaccounts_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bankaccounts_bankaccounts_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bankaccounts_bankaccounts_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bankaccounts_bankaccounts_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bankaccounts_bankaccounts_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bankaccounts_bankaccounts_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bankaccounts_bankaccounts_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bankaccounts_bankaccounts_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_bankaccounts_bankaccounts_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_bankaccounts_bankaccounts_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*CreateResponse_Error)(nil),
		(*CreateResponse_BankAccount)(nil),
	}
	file_bankaccounts_bankaccounts_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_bankaccounts_bankaccounts_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*UpdateResponse_Error)(nil),
		(*UpdateResponse_BankAccount)(nil),
	}
	file_bankaccounts_bankaccounts_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*GetResponse_Error)(nil),
		(*GetResponse_BankAccount)(nil),
	}
	file_bankaccounts_bankaccounts_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_bankaccounts_bankaccounts_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*GetListResponse_Error)(nil),
		(*GetListResponse_BankAccount)(nil),
	}
	file_bankaccounts_bankaccounts_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*DeleteResponse_Error)(nil),
		(*DeleteResponse_BankAccount)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bankaccounts_bankaccounts_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bankaccounts_bankaccounts_proto_goTypes,
		DependencyIndexes: file_bankaccounts_bankaccounts_proto_depIdxs,
		EnumInfos:         file_bankaccounts_bankaccounts_proto_enumTypes,
		MessageInfos:      file_bankaccounts_bankaccounts_proto_msgTypes,
	}.Build()
	File_bankaccounts_bankaccounts_proto = out.File
	file_bankaccounts_bankaccounts_proto_rawDesc = nil
	file_bankaccounts_bankaccounts_proto_goTypes = nil
	file_bankaccounts_bankaccounts_proto_depIdxs = nil
}

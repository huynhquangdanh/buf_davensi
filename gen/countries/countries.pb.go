// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: countries/countries.proto

package countries

import (
	common "davensi.com/core/gen/common"
	cryptos "davensi.com/core/gen/cryptos"
	fiats "davensi.com/core/gen/fiats"
	markets "davensi.com/core/gen/markets"
	uoms "davensi.com/core/gen/uoms"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Backed by table 'countries'
type Country struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // System Key: id is generated by the server or the database
	Code                   string        `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"` // Human-Readable Key (unique identifier)
	Name                   *string       `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Icon                   *string       `protobuf:"bytes,4,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	Iso3166A3              *string       `protobuf:"bytes,5,opt,name=iso3166_a3,json=iso3166A3,proto3,oneof" json:"iso3166_a3,omitempty"`
	Iso3166Num             *string       `protobuf:"bytes,6,opt,name=iso3166_num,json=iso3166Num,proto3,oneof" json:"iso3166_num,omitempty"`
	InternetCctld          *string       `protobuf:"bytes,7,opt,name=internet_cctld,json=internetCctld,proto3,oneof" json:"internet_cctld,omitempty"`
	Region                 *string       `protobuf:"bytes,8,opt,name=region,proto3,oneof" json:"region,omitempty"`
	SubRegion              *string       `protobuf:"bytes,9,opt,name=sub_region,json=subRegion,proto3,oneof" json:"sub_region,omitempty"`
	IntermediateRegion     *string       `protobuf:"bytes,10,opt,name=intermediate_region,json=intermediateRegion,proto3,oneof" json:"intermediate_region,omitempty"`
	IntermediateRegionCode *string       `protobuf:"bytes,11,opt,name=intermediate_region_code,json=intermediateRegionCode,proto3,oneof" json:"intermediate_region_code,omitempty"`
	RegionCode             *string       `protobuf:"bytes,12,opt,name=region_code,json=regionCode,proto3,oneof" json:"region_code,omitempty"`
	SubRegionCode          *string       `protobuf:"bytes,13,opt,name=sub_region_code,json=subRegionCode,proto3,oneof" json:"sub_region_code,omitempty"`
	Status                 common.Status `protobuf:"varint,14,opt,name=status,proto3,enum=common.Status" json:"status,omitempty"`
	Fiats                  *uoms.List    `protobuf:"bytes,15,opt,name=fiats,proto3,oneof" json:"fiats,omitempty"`
	Cryptos                *uoms.List    `protobuf:"bytes,16,opt,name=cryptos,proto3,oneof" json:"cryptos,omitempty"`
}

func (x *Country) Reset() {
	*x = Country{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Country) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Country) ProtoMessage() {}

func (x *Country) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Country.ProtoReflect.Descriptor instead.
func (*Country) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{0}
}

func (x *Country) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Country) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Country) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Country) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *Country) GetIso3166A3() string {
	if x != nil && x.Iso3166A3 != nil {
		return *x.Iso3166A3
	}
	return ""
}

func (x *Country) GetIso3166Num() string {
	if x != nil && x.Iso3166Num != nil {
		return *x.Iso3166Num
	}
	return ""
}

func (x *Country) GetInternetCctld() string {
	if x != nil && x.InternetCctld != nil {
		return *x.InternetCctld
	}
	return ""
}

func (x *Country) GetRegion() string {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return ""
}

func (x *Country) GetSubRegion() string {
	if x != nil && x.SubRegion != nil {
		return *x.SubRegion
	}
	return ""
}

func (x *Country) GetIntermediateRegion() string {
	if x != nil && x.IntermediateRegion != nil {
		return *x.IntermediateRegion
	}
	return ""
}

func (x *Country) GetIntermediateRegionCode() string {
	if x != nil && x.IntermediateRegionCode != nil {
		return *x.IntermediateRegionCode
	}
	return ""
}

func (x *Country) GetRegionCode() string {
	if x != nil && x.RegionCode != nil {
		return *x.RegionCode
	}
	return ""
}

func (x *Country) GetSubRegionCode() string {
	if x != nil && x.SubRegionCode != nil {
		return *x.SubRegionCode
	}
	return ""
}

func (x *Country) GetStatus() common.Status {
	if x != nil {
		return x.Status
	}
	return common.Status(0)
}

func (x *Country) GetFiats() *uoms.List {
	if x != nil {
		return x.Fiats
	}
	return nil
}

func (x *Country) GetCryptos() *uoms.List {
	if x != nil {
		return x.Cryptos
	}
	return nil
}

type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Country `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{1}
}

func (x *List) GetList() []*Country {
	if x != nil {
		return x.List
	}
	return nil
}

type Select struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Select:
	//
	//	*Select_ById
	//	*Select_ByCode
	Select isSelect_Select `protobuf_oneof:"select"`
}

func (x *Select) Reset() {
	*x = Select{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Select) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Select) ProtoMessage() {}

func (x *Select) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Select.ProtoReflect.Descriptor instead.
func (*Select) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{2}
}

func (m *Select) GetSelect() isSelect_Select {
	if m != nil {
		return m.Select
	}
	return nil
}

func (x *Select) GetById() string {
	if x, ok := x.GetSelect().(*Select_ById); ok {
		return x.ById
	}
	return ""
}

func (x *Select) GetByCode() string {
	if x, ok := x.GetSelect().(*Select_ByCode); ok {
		return x.ByCode
	}
	return ""
}

type isSelect_Select interface {
	isSelect_Select()
}

type Select_ById struct {
	ById string `protobuf:"bytes,1,opt,name=by_id,json=byId,proto3,oneof"`
}

type Select_ByCode struct {
	ByCode string `protobuf:"bytes,2,opt,name=by_code,json=byCode,proto3,oneof"`
}

func (*Select_ById) isSelect_Select() {}

func (*Select_ByCode) isSelect_Select() {}

type SelectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Select `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SelectList) Reset() {
	*x = SelectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectList) ProtoMessage() {}

func (x *SelectList) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectList.ProtoReflect.Descriptor instead.
func (*SelectList) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{3}
}

func (x *SelectList) GetList() []*Select {
	if x != nil {
		return x.List
	}
	return nil
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is generated by the server or the database
	Code                   string           `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                   *string          `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`                                                                      // Default: <TO-DO>
	Icon                   *string          `protobuf:"bytes,3,opt,name=icon,proto3,oneof" json:"icon,omitempty"`                                                                      // Default: <TO-DO>
	Iso3166A3              *string          `protobuf:"bytes,4,opt,name=iso3166_a3,json=iso3166A3,proto3,oneof" json:"iso3166_a3,omitempty"`                                           // Default: <TO-DO>
	Iso3166Num             *string          `protobuf:"bytes,5,opt,name=iso3166_num,json=iso3166Num,proto3,oneof" json:"iso3166_num,omitempty"`                                        // Default: <TO-DO>
	InternetCctld          *string          `protobuf:"bytes,6,opt,name=internet_cctld,json=internetCctld,proto3,oneof" json:"internet_cctld,omitempty"`                               // Default: <TO-DO>
	Region                 *string          `protobuf:"bytes,7,opt,name=region,proto3,oneof" json:"region,omitempty"`                                                                  // Default: <TO-DO>
	SubRegion              *string          `protobuf:"bytes,8,opt,name=sub_region,json=subRegion,proto3,oneof" json:"sub_region,omitempty"`                                           // Default: <TO-DO>
	IntermediateRegion     *string          `protobuf:"bytes,9,opt,name=intermediate_region,json=intermediateRegion,proto3,oneof" json:"intermediate_region,omitempty"`                // Default: <TO-DO>
	IntermediateRegionCode *string          `protobuf:"bytes,10,opt,name=intermediate_region_code,json=intermediateRegionCode,proto3,oneof" json:"intermediate_region_code,omitempty"` // Default: <TO-DO>
	RegionCode             *string          `protobuf:"bytes,11,opt,name=region_code,json=regionCode,proto3,oneof" json:"region_code,omitempty"`                                       // Default: <TO-DO>
	SubRegionCode          *string          `protobuf:"bytes,12,opt,name=sub_region_code,json=subRegionCode,proto3,oneof" json:"sub_region_code,omitempty"`                            // Default: <TO-DO>
	Status                 *common.Status   `protobuf:"varint,13,opt,name=status,proto3,enum=common.Status,oneof" json:"status,omitempty"`                                             // Default: STATUS_UNSPECIFIED, which means Country needs to be activated after creation
	Fiats                  *uoms.SelectList `protobuf:"bytes,14,opt,name=fiats,proto3,oneof" json:"fiats,omitempty"`
	Cryptos                *uoms.SelectList `protobuf:"bytes,15,opt,name=cryptos,proto3,oneof" json:"cryptos,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateRequest) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *CreateRequest) GetIso3166A3() string {
	if x != nil && x.Iso3166A3 != nil {
		return *x.Iso3166A3
	}
	return ""
}

func (x *CreateRequest) GetIso3166Num() string {
	if x != nil && x.Iso3166Num != nil {
		return *x.Iso3166Num
	}
	return ""
}

func (x *CreateRequest) GetInternetCctld() string {
	if x != nil && x.InternetCctld != nil {
		return *x.InternetCctld
	}
	return ""
}

func (x *CreateRequest) GetRegion() string {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return ""
}

func (x *CreateRequest) GetSubRegion() string {
	if x != nil && x.SubRegion != nil {
		return *x.SubRegion
	}
	return ""
}

func (x *CreateRequest) GetIntermediateRegion() string {
	if x != nil && x.IntermediateRegion != nil {
		return *x.IntermediateRegion
	}
	return ""
}

func (x *CreateRequest) GetIntermediateRegionCode() string {
	if x != nil && x.IntermediateRegionCode != nil {
		return *x.IntermediateRegionCode
	}
	return ""
}

func (x *CreateRequest) GetRegionCode() string {
	if x != nil && x.RegionCode != nil {
		return *x.RegionCode
	}
	return ""
}

func (x *CreateRequest) GetSubRegionCode() string {
	if x != nil && x.SubRegionCode != nil {
		return *x.SubRegionCode
	}
	return ""
}

func (x *CreateRequest) GetStatus() common.Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return common.Status(0)
}

func (x *CreateRequest) GetFiats() *uoms.SelectList {
	if x != nil {
		return x.Fiats
	}
	return nil
}

func (x *CreateRequest) GetCryptos() *uoms.SelectList {
	if x != nil {
		return x.Cryptos
	}
	return nil
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*CreateResponse_Error
	//	*CreateResponse_Country
	Response isCreateResponse_Response `protobuf_oneof:"response"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{5}
}

func (m *CreateResponse) GetResponse() isCreateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CreateResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*CreateResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CreateResponse) GetCountry() *Country {
	if x, ok := x.GetResponse().(*CreateResponse_Country); ok {
		return x.Country
	}
	return nil
}

type isCreateResponse_Response interface {
	isCreateResponse_Response()
}

type CreateResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateResponse_Country struct {
	Country *Country `protobuf:"bytes,2,opt,name=country,proto3,oneof"`
}

func (*CreateResponse_Error) isCreateResponse_Response() {}

func (*CreateResponse_Country) isCreateResponse_Response() {}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select                 *Select          `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
	Code                   *string          `protobuf:"bytes,2,opt,name=code,proto3,oneof" json:"code,omitempty"`
	Name                   *string          `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Icon                   *string          `protobuf:"bytes,4,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	Iso3166A3              *string          `protobuf:"bytes,5,opt,name=iso3166_a3,json=iso3166A3,proto3,oneof" json:"iso3166_a3,omitempty"`
	Iso3166Num             *string          `protobuf:"bytes,6,opt,name=iso3166_num,json=iso3166Num,proto3,oneof" json:"iso3166_num,omitempty"`
	InternetCctld          *string          `protobuf:"bytes,7,opt,name=internet_cctld,json=internetCctld,proto3,oneof" json:"internet_cctld,omitempty"`
	Region                 *string          `protobuf:"bytes,8,opt,name=region,proto3,oneof" json:"region,omitempty"`
	SubRegion              *string          `protobuf:"bytes,9,opt,name=sub_region,json=subRegion,proto3,oneof" json:"sub_region,omitempty"`
	IntermediateRegion     *string          `protobuf:"bytes,10,opt,name=intermediate_region,json=intermediateRegion,proto3,oneof" json:"intermediate_region,omitempty"`
	IntermediateRegionCode *string          `protobuf:"bytes,11,opt,name=intermediate_region_code,json=intermediateRegionCode,proto3,oneof" json:"intermediate_region_code,omitempty"`
	RegionCode             *string          `protobuf:"bytes,12,opt,name=region_code,json=regionCode,proto3,oneof" json:"region_code,omitempty"`
	SubRegionCode          *string          `protobuf:"bytes,13,opt,name=sub_region_code,json=subRegionCode,proto3,oneof" json:"sub_region_code,omitempty"`
	Status                 *common.Status   `protobuf:"varint,14,opt,name=status,proto3,enum=common.Status,oneof" json:"status,omitempty"`
	Fiats                  *uoms.SelectList `protobuf:"bytes,15,opt,name=fiats,proto3,oneof" json:"fiats,omitempty"`
	Cryptos                *uoms.SelectList `protobuf:"bytes,16,opt,name=cryptos,proto3,oneof" json:"cryptos,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *UpdateRequest) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *UpdateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateRequest) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *UpdateRequest) GetIso3166A3() string {
	if x != nil && x.Iso3166A3 != nil {
		return *x.Iso3166A3
	}
	return ""
}

func (x *UpdateRequest) GetIso3166Num() string {
	if x != nil && x.Iso3166Num != nil {
		return *x.Iso3166Num
	}
	return ""
}

func (x *UpdateRequest) GetInternetCctld() string {
	if x != nil && x.InternetCctld != nil {
		return *x.InternetCctld
	}
	return ""
}

func (x *UpdateRequest) GetRegion() string {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return ""
}

func (x *UpdateRequest) GetSubRegion() string {
	if x != nil && x.SubRegion != nil {
		return *x.SubRegion
	}
	return ""
}

func (x *UpdateRequest) GetIntermediateRegion() string {
	if x != nil && x.IntermediateRegion != nil {
		return *x.IntermediateRegion
	}
	return ""
}

func (x *UpdateRequest) GetIntermediateRegionCode() string {
	if x != nil && x.IntermediateRegionCode != nil {
		return *x.IntermediateRegionCode
	}
	return ""
}

func (x *UpdateRequest) GetRegionCode() string {
	if x != nil && x.RegionCode != nil {
		return *x.RegionCode
	}
	return ""
}

func (x *UpdateRequest) GetSubRegionCode() string {
	if x != nil && x.SubRegionCode != nil {
		return *x.SubRegionCode
	}
	return ""
}

func (x *UpdateRequest) GetStatus() common.Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return common.Status(0)
}

func (x *UpdateRequest) GetFiats() *uoms.SelectList {
	if x != nil {
		return x.Fiats
	}
	return nil
}

func (x *UpdateRequest) GetCryptos() *uoms.SelectList {
	if x != nil {
		return x.Cryptos
	}
	return nil
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*UpdateResponse_Error
	//	*UpdateResponse_Country
	Response isUpdateResponse_Response `protobuf_oneof:"response"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{7}
}

func (m *UpdateResponse) GetResponse() isUpdateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UpdateResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*UpdateResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *UpdateResponse) GetCountry() *Country {
	if x, ok := x.GetResponse().(*UpdateResponse_Country); ok {
		return x.Country
	}
	return nil
}

type isUpdateResponse_Response interface {
	isUpdateResponse_Response()
}

type UpdateResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type UpdateResponse_Country struct {
	Country *Country `protobuf:"bytes,2,opt,name=country,proto3,oneof"`
}

func (*UpdateResponse_Error) isUpdateResponse_Response() {}

func (*UpdateResponse_Country) isUpdateResponse_Response() {}

// GetRequest is expected to return a single value.
type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select *Select `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{8}
}

func (x *GetRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

// An error is returned if there is more than one record found.
type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetResponse_Error
	//	*GetResponse_Country
	Response isGetResponse_Response `protobuf_oneof:"response"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{9}
}

func (m *GetResponse) GetResponse() isGetResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetResponse) GetCountry() *Country {
	if x, ok := x.GetResponse().(*GetResponse_Country); ok {
		return x.Country
	}
	return nil
}

type isGetResponse_Response interface {
	isGetResponse_Response()
}

type GetResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetResponse_Country struct {
	Country *Country `protobuf:"bytes,2,opt,name=country,proto3,oneof"`
}

func (*GetResponse_Error) isGetResponse_Response() {}

func (*GetResponse_Country) isGetResponse_Response() {}

// GetList will use SQL 'LIKE' instead of '=' for string fields
type GetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                   *string                 `protobuf:"bytes,1,opt,name=code,proto3,oneof" json:"code,omitempty"`
	Name                   *string                 `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Icon                   *string                 `protobuf:"bytes,3,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	Iso3166A3              *string                 `protobuf:"bytes,4,opt,name=iso3166_a3,json=iso3166A3,proto3,oneof" json:"iso3166_a3,omitempty"`
	Iso3166Num             *string                 `protobuf:"bytes,5,opt,name=iso3166_num,json=iso3166Num,proto3,oneof" json:"iso3166_num,omitempty"`
	InternetCctld          *string                 `protobuf:"bytes,6,opt,name=internet_cctld,json=internetCctld,proto3,oneof" json:"internet_cctld,omitempty"`
	Region                 *string                 `protobuf:"bytes,7,opt,name=region,proto3,oneof" json:"region,omitempty"`
	SubRegion              *string                 `protobuf:"bytes,8,opt,name=sub_region,json=subRegion,proto3,oneof" json:"sub_region,omitempty"`
	IntermediateRegion     *string                 `protobuf:"bytes,9,opt,name=intermediate_region,json=intermediateRegion,proto3,oneof" json:"intermediate_region,omitempty"`
	IntermediateRegionCode *string                 `protobuf:"bytes,10,opt,name=intermediate_region_code,json=intermediateRegionCode,proto3,oneof" json:"intermediate_region_code,omitempty"`
	RegionCode             *string                 `protobuf:"bytes,11,opt,name=region_code,json=regionCode,proto3,oneof" json:"region_code,omitempty"`
	SubRegionCode          *string                 `protobuf:"bytes,12,opt,name=sub_region_code,json=subRegionCode,proto3,oneof" json:"sub_region_code,omitempty"`
	Status                 *common.StatusList      `protobuf:"bytes,13,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Fiats                  *fiats.GetListRequest   `protobuf:"bytes,14,opt,name=fiats,proto3,oneof" json:"fiats,omitempty"`
	Cryptos                *cryptos.GetListRequest `protobuf:"bytes,15,opt,name=cryptos,proto3,oneof" json:"cryptos,omitempty"`
}

func (x *GetListRequest) Reset() {
	*x = GetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRequest) ProtoMessage() {}

func (x *GetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRequest.ProtoReflect.Descriptor instead.
func (*GetListRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{10}
}

func (x *GetListRequest) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *GetListRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetListRequest) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *GetListRequest) GetIso3166A3() string {
	if x != nil && x.Iso3166A3 != nil {
		return *x.Iso3166A3
	}
	return ""
}

func (x *GetListRequest) GetIso3166Num() string {
	if x != nil && x.Iso3166Num != nil {
		return *x.Iso3166Num
	}
	return ""
}

func (x *GetListRequest) GetInternetCctld() string {
	if x != nil && x.InternetCctld != nil {
		return *x.InternetCctld
	}
	return ""
}

func (x *GetListRequest) GetRegion() string {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return ""
}

func (x *GetListRequest) GetSubRegion() string {
	if x != nil && x.SubRegion != nil {
		return *x.SubRegion
	}
	return ""
}

func (x *GetListRequest) GetIntermediateRegion() string {
	if x != nil && x.IntermediateRegion != nil {
		return *x.IntermediateRegion
	}
	return ""
}

func (x *GetListRequest) GetIntermediateRegionCode() string {
	if x != nil && x.IntermediateRegionCode != nil {
		return *x.IntermediateRegionCode
	}
	return ""
}

func (x *GetListRequest) GetRegionCode() string {
	if x != nil && x.RegionCode != nil {
		return *x.RegionCode
	}
	return ""
}

func (x *GetListRequest) GetSubRegionCode() string {
	if x != nil && x.SubRegionCode != nil {
		return *x.SubRegionCode
	}
	return ""
}

func (x *GetListRequest) GetStatus() *common.StatusList {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetListRequest) GetFiats() *fiats.GetListRequest {
	if x != nil {
		return x.Fiats
	}
	return nil
}

func (x *GetListRequest) GetCryptos() *cryptos.GetListRequest {
	if x != nil {
		return x.Cryptos
	}
	return nil
}

type GetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetListResponse_Error
	//	*GetListResponse_Country
	Response isGetListResponse_Response `protobuf_oneof:"response"`
}

func (x *GetListResponse) Reset() {
	*x = GetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListResponse) ProtoMessage() {}

func (x *GetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListResponse.ProtoReflect.Descriptor instead.
func (*GetListResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{11}
}

func (m *GetListResponse) GetResponse() isGetListResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetListResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetListResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetListResponse) GetCountry() *Country {
	if x, ok := x.GetResponse().(*GetListResponse_Country); ok {
		return x.Country
	}
	return nil
}

type isGetListResponse_Response interface {
	isGetListResponse_Response()
}

type GetListResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetListResponse_Country struct {
	Country *Country `protobuf:"bytes,2,opt,name=country,proto3,oneof"`
}

func (*GetListResponse_Error) isGetListResponse_Response() {}

func (*GetListResponse_Country) isGetListResponse_Response() {}

// A delete request is just an update request with status set to TERMINATED.
type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select *Select `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*DeleteResponse_Error
	//	*DeleteResponse_Country
	Response isDeleteResponse_Response `protobuf_oneof:"response"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{13}
}

func (m *DeleteResponse) GetResponse() isDeleteResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeleteResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*DeleteResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DeleteResponse) GetCountry() *Country {
	if x, ok := x.GetResponse().(*DeleteResponse_Country); ok {
		return x.Country
	}
	return nil
}

type isDeleteResponse_Response interface {
	isDeleteResponse_Response()
}

type DeleteResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeleteResponse_Country struct {
	Country *Country `protobuf:"bytes,2,opt,name=country,proto3,oneof"`
}

func (*DeleteResponse_Error) isDeleteResponse_Response() {}

func (*DeleteResponse_Country) isDeleteResponse_Response() {}

type Fiat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string      `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Fiat *fiats.Fiat `protobuf:"bytes,3,opt,name=fiat,proto3" json:"fiat,omitempty"`
}

func (x *Fiat) Reset() {
	*x = Fiat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fiat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fiat) ProtoMessage() {}

func (x *Fiat) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fiat.ProtoReflect.Descriptor instead.
func (*Fiat) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{14}
}

func (x *Fiat) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Fiat) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Fiat) GetFiat() *fiats.Fiat {
	if x != nil {
		return x.Fiat
	}
	return nil
}

type FiatList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code  string     `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Fiats *uoms.List `protobuf:"bytes,3,opt,name=fiats,proto3" json:"fiats,omitempty"`
}

func (x *FiatList) Reset() {
	*x = FiatList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FiatList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FiatList) ProtoMessage() {}

func (x *FiatList) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FiatList.ProtoReflect.Descriptor instead.
func (*FiatList) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{15}
}

func (x *FiatList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FiatList) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *FiatList) GetFiats() *uoms.List {
	if x != nil {
		return x.Fiats
	}
	return nil
}

type SetFiatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select *Select          `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
	Fiats  *uoms.SelectList `protobuf:"bytes,2,opt,name=fiats,proto3" json:"fiats,omitempty"`
}

func (x *SetFiatsRequest) Reset() {
	*x = SetFiatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFiatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFiatsRequest) ProtoMessage() {}

func (x *SetFiatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFiatsRequest.ProtoReflect.Descriptor instead.
func (*SetFiatsRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{16}
}

func (x *SetFiatsRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *SetFiatsRequest) GetFiats() *uoms.SelectList {
	if x != nil {
		return x.Fiats
	}
	return nil
}

type SetFiatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*SetFiatsResponse_Error
	//	*SetFiatsResponse_Fiats
	Response isSetFiatsResponse_Response `protobuf_oneof:"response"`
}

func (x *SetFiatsResponse) Reset() {
	*x = SetFiatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFiatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFiatsResponse) ProtoMessage() {}

func (x *SetFiatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFiatsResponse.ProtoReflect.Descriptor instead.
func (*SetFiatsResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{17}
}

func (m *SetFiatsResponse) GetResponse() isSetFiatsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SetFiatsResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*SetFiatsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SetFiatsResponse) GetFiats() *FiatList {
	if x, ok := x.GetResponse().(*SetFiatsResponse_Fiats); ok {
		return x.Fiats
	}
	return nil
}

type isSetFiatsResponse_Response interface {
	isSetFiatsResponse_Response()
}

type SetFiatsResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SetFiatsResponse_Fiats struct {
	Fiats *FiatList `protobuf:"bytes,2,opt,name=fiats,proto3,oneof"`
}

func (*SetFiatsResponse_Error) isSetFiatsResponse_Response() {}

func (*SetFiatsResponse_Fiats) isSetFiatsResponse_Response() {}

type AddFiatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select *Select          `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
	Fiats  *uoms.SelectList `protobuf:"bytes,2,opt,name=fiats,proto3" json:"fiats,omitempty"`
}

func (x *AddFiatsRequest) Reset() {
	*x = AddFiatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFiatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFiatsRequest) ProtoMessage() {}

func (x *AddFiatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFiatsRequest.ProtoReflect.Descriptor instead.
func (*AddFiatsRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{18}
}

func (x *AddFiatsRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *AddFiatsRequest) GetFiats() *uoms.SelectList {
	if x != nil {
		return x.Fiats
	}
	return nil
}

type AddFiatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*AddFiatsResponse_Error
	//	*AddFiatsResponse_Fiats
	Response isAddFiatsResponse_Response `protobuf_oneof:"response"`
}

func (x *AddFiatsResponse) Reset() {
	*x = AddFiatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFiatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFiatsResponse) ProtoMessage() {}

func (x *AddFiatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFiatsResponse.ProtoReflect.Descriptor instead.
func (*AddFiatsResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{19}
}

func (m *AddFiatsResponse) GetResponse() isAddFiatsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *AddFiatsResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*AddFiatsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *AddFiatsResponse) GetFiats() *FiatList {
	if x, ok := x.GetResponse().(*AddFiatsResponse_Fiats); ok {
		return x.Fiats
	}
	return nil
}

type isAddFiatsResponse_Response interface {
	isAddFiatsResponse_Response()
}

type AddFiatsResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type AddFiatsResponse_Fiats struct {
	Fiats *FiatList `protobuf:"bytes,2,opt,name=fiats,proto3,oneof"`
}

func (*AddFiatsResponse_Error) isAddFiatsResponse_Response() {}

func (*AddFiatsResponse_Fiats) isAddFiatsResponse_Response() {}

type GetFiatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select *Select `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
}

func (x *GetFiatsRequest) Reset() {
	*x = GetFiatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFiatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFiatsRequest) ProtoMessage() {}

func (x *GetFiatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFiatsRequest.ProtoReflect.Descriptor instead.
func (*GetFiatsRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{20}
}

func (x *GetFiatsRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

type GetFiatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetFiatsResponse_Error
	//	*GetFiatsResponse_Fiats
	Response isGetFiatsResponse_Response `protobuf_oneof:"response"`
}

func (x *GetFiatsResponse) Reset() {
	*x = GetFiatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFiatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFiatsResponse) ProtoMessage() {}

func (x *GetFiatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFiatsResponse.ProtoReflect.Descriptor instead.
func (*GetFiatsResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{21}
}

func (m *GetFiatsResponse) GetResponse() isGetFiatsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetFiatsResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetFiatsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetFiatsResponse) GetFiats() *FiatList {
	if x, ok := x.GetResponse().(*GetFiatsResponse_Fiats); ok {
		return x.Fiats
	}
	return nil
}

type isGetFiatsResponse_Response interface {
	isGetFiatsResponse_Response()
}

type GetFiatsResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetFiatsResponse_Fiats struct {
	Fiats *FiatList `protobuf:"bytes,2,opt,name=fiats,proto3,oneof"`
}

func (*GetFiatsResponse_Error) isGetFiatsResponse_Response() {}

func (*GetFiatsResponse_Fiats) isGetFiatsResponse_Response() {}

// A remove fiats request is just a fiat update request with status set to TERMINATED in table 'countries_uoms'
type RemoveFiatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select *Select          `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
	Fiats  *uoms.SelectList `protobuf:"bytes,2,opt,name=fiats,proto3,oneof" json:"fiats,omitempty"` // Remove all if no specified list
}

func (x *RemoveFiatsRequest) Reset() {
	*x = RemoveFiatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFiatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFiatsRequest) ProtoMessage() {}

func (x *RemoveFiatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFiatsRequest.ProtoReflect.Descriptor instead.
func (*RemoveFiatsRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{22}
}

func (x *RemoveFiatsRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *RemoveFiatsRequest) GetFiats() *uoms.SelectList {
	if x != nil {
		return x.Fiats
	}
	return nil
}

type RemoveFiatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*RemoveFiatsResponse_Error
	//	*RemoveFiatsResponse_Fiats
	Response isRemoveFiatsResponse_Response `protobuf_oneof:"response"`
}

func (x *RemoveFiatsResponse) Reset() {
	*x = RemoveFiatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFiatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFiatsResponse) ProtoMessage() {}

func (x *RemoveFiatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFiatsResponse.ProtoReflect.Descriptor instead.
func (*RemoveFiatsResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{23}
}

func (m *RemoveFiatsResponse) GetResponse() isRemoveFiatsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RemoveFiatsResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*RemoveFiatsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *RemoveFiatsResponse) GetFiats() *FiatList {
	if x, ok := x.GetResponse().(*RemoveFiatsResponse_Fiats); ok {
		return x.Fiats
	}
	return nil
}

type isRemoveFiatsResponse_Response interface {
	isRemoveFiatsResponse_Response()
}

type RemoveFiatsResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type RemoveFiatsResponse_Fiats struct {
	Fiats *FiatList `protobuf:"bytes,2,opt,name=fiats,proto3,oneof"`
}

func (*RemoveFiatsResponse_Error) isRemoveFiatsResponse_Response() {}

func (*RemoveFiatsResponse_Fiats) isRemoveFiatsResponse_Response() {}

type Crypto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code   string          `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Crypto *cryptos.Crypto `protobuf:"bytes,3,opt,name=crypto,proto3" json:"crypto,omitempty"`
}

func (x *Crypto) Reset() {
	*x = Crypto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Crypto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Crypto) ProtoMessage() {}

func (x *Crypto) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Crypto.ProtoReflect.Descriptor instead.
func (*Crypto) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{24}
}

func (x *Crypto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Crypto) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Crypto) GetCrypto() *cryptos.Crypto {
	if x != nil {
		return x.Crypto
	}
	return nil
}

type CryptoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code    string     `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Cryptos *uoms.List `protobuf:"bytes,3,opt,name=cryptos,proto3" json:"cryptos,omitempty"`
}

func (x *CryptoList) Reset() {
	*x = CryptoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoList) ProtoMessage() {}

func (x *CryptoList) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoList.ProtoReflect.Descriptor instead.
func (*CryptoList) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{25}
}

func (x *CryptoList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CryptoList) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CryptoList) GetCryptos() *uoms.List {
	if x != nil {
		return x.Cryptos
	}
	return nil
}

type SetCryptosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select  *Select          `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
	Cryptos *uoms.SelectList `protobuf:"bytes,2,opt,name=cryptos,proto3" json:"cryptos,omitempty"`
}

func (x *SetCryptosRequest) Reset() {
	*x = SetCryptosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCryptosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCryptosRequest) ProtoMessage() {}

func (x *SetCryptosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCryptosRequest.ProtoReflect.Descriptor instead.
func (*SetCryptosRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{26}
}

func (x *SetCryptosRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *SetCryptosRequest) GetCryptos() *uoms.SelectList {
	if x != nil {
		return x.Cryptos
	}
	return nil
}

type SetCryptosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*SetCryptosResponse_Error
	//	*SetCryptosResponse_Cryptos
	Response isSetCryptosResponse_Response `protobuf_oneof:"response"`
}

func (x *SetCryptosResponse) Reset() {
	*x = SetCryptosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCryptosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCryptosResponse) ProtoMessage() {}

func (x *SetCryptosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCryptosResponse.ProtoReflect.Descriptor instead.
func (*SetCryptosResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{27}
}

func (m *SetCryptosResponse) GetResponse() isSetCryptosResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SetCryptosResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*SetCryptosResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SetCryptosResponse) GetCryptos() *CryptoList {
	if x, ok := x.GetResponse().(*SetCryptosResponse_Cryptos); ok {
		return x.Cryptos
	}
	return nil
}

type isSetCryptosResponse_Response interface {
	isSetCryptosResponse_Response()
}

type SetCryptosResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SetCryptosResponse_Cryptos struct {
	Cryptos *CryptoList `protobuf:"bytes,2,opt,name=cryptos,proto3,oneof"`
}

func (*SetCryptosResponse_Error) isSetCryptosResponse_Response() {}

func (*SetCryptosResponse_Cryptos) isSetCryptosResponse_Response() {}

type AddCryptosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select  *Select          `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
	Cryptos *uoms.SelectList `protobuf:"bytes,2,opt,name=cryptos,proto3" json:"cryptos,omitempty"`
}

func (x *AddCryptosRequest) Reset() {
	*x = AddCryptosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCryptosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCryptosRequest) ProtoMessage() {}

func (x *AddCryptosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCryptosRequest.ProtoReflect.Descriptor instead.
func (*AddCryptosRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{28}
}

func (x *AddCryptosRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *AddCryptosRequest) GetCryptos() *uoms.SelectList {
	if x != nil {
		return x.Cryptos
	}
	return nil
}

type AddCryptosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*AddCryptosResponse_Error
	//	*AddCryptosResponse_Cryptos
	Response isAddCryptosResponse_Response `protobuf_oneof:"response"`
}

func (x *AddCryptosResponse) Reset() {
	*x = AddCryptosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCryptosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCryptosResponse) ProtoMessage() {}

func (x *AddCryptosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCryptosResponse.ProtoReflect.Descriptor instead.
func (*AddCryptosResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{29}
}

func (m *AddCryptosResponse) GetResponse() isAddCryptosResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *AddCryptosResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*AddCryptosResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *AddCryptosResponse) GetCryptos() *CryptoList {
	if x, ok := x.GetResponse().(*AddCryptosResponse_Cryptos); ok {
		return x.Cryptos
	}
	return nil
}

type isAddCryptosResponse_Response interface {
	isAddCryptosResponse_Response()
}

type AddCryptosResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type AddCryptosResponse_Cryptos struct {
	Cryptos *CryptoList `protobuf:"bytes,2,opt,name=cryptos,proto3,oneof"`
}

func (*AddCryptosResponse_Error) isAddCryptosResponse_Response() {}

func (*AddCryptosResponse_Cryptos) isAddCryptosResponse_Response() {}

type GetCryptosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select *Select `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
}

func (x *GetCryptosRequest) Reset() {
	*x = GetCryptosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCryptosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCryptosRequest) ProtoMessage() {}

func (x *GetCryptosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCryptosRequest.ProtoReflect.Descriptor instead.
func (*GetCryptosRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{30}
}

func (x *GetCryptosRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

type GetCryptosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetCryptosResponse_Error
	//	*GetCryptosResponse_Cryptos
	Response isGetCryptosResponse_Response `protobuf_oneof:"response"`
}

func (x *GetCryptosResponse) Reset() {
	*x = GetCryptosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCryptosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCryptosResponse) ProtoMessage() {}

func (x *GetCryptosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCryptosResponse.ProtoReflect.Descriptor instead.
func (*GetCryptosResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{31}
}

func (m *GetCryptosResponse) GetResponse() isGetCryptosResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetCryptosResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetCryptosResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetCryptosResponse) GetCryptos() *CryptoList {
	if x, ok := x.GetResponse().(*GetCryptosResponse_Cryptos); ok {
		return x.Cryptos
	}
	return nil
}

type isGetCryptosResponse_Response interface {
	isGetCryptosResponse_Response()
}

type GetCryptosResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetCryptosResponse_Cryptos struct {
	Cryptos *CryptoList `protobuf:"bytes,2,opt,name=cryptos,proto3,oneof"`
}

func (*GetCryptosResponse_Error) isGetCryptosResponse_Response() {}

func (*GetCryptosResponse_Cryptos) isGetCryptosResponse_Response() {}

// A remove cryptos request is just a crypto update request with status set to TERMINATED in table 'countries_uoms'
type RemoveCryptosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select  *Select          `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
	Cryptos *uoms.SelectList `protobuf:"bytes,2,opt,name=cryptos,proto3,oneof" json:"cryptos,omitempty"` // Remove all if no specified list
}

func (x *RemoveCryptosRequest) Reset() {
	*x = RemoveCryptosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCryptosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCryptosRequest) ProtoMessage() {}

func (x *RemoveCryptosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCryptosRequest.ProtoReflect.Descriptor instead.
func (*RemoveCryptosRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{32}
}

func (x *RemoveCryptosRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *RemoveCryptosRequest) GetCryptos() *uoms.SelectList {
	if x != nil {
		return x.Cryptos
	}
	return nil
}

type RemoveCryptosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*RemoveCryptosResponse_Error
	//	*RemoveCryptosResponse_Cryptos
	Response isRemoveCryptosResponse_Response `protobuf_oneof:"response"`
}

func (x *RemoveCryptosResponse) Reset() {
	*x = RemoveCryptosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCryptosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCryptosResponse) ProtoMessage() {}

func (x *RemoveCryptosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCryptosResponse.ProtoReflect.Descriptor instead.
func (*RemoveCryptosResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{33}
}

func (m *RemoveCryptosResponse) GetResponse() isRemoveCryptosResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RemoveCryptosResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*RemoveCryptosResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *RemoveCryptosResponse) GetCryptos() *CryptoList {
	if x, ok := x.GetResponse().(*RemoveCryptosResponse_Cryptos); ok {
		return x.Cryptos
	}
	return nil
}

type isRemoveCryptosResponse_Response interface {
	isRemoveCryptosResponse_Response()
}

type RemoveCryptosResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type RemoveCryptosResponse_Cryptos struct {
	Cryptos *CryptoList `protobuf:"bytes,2,opt,name=cryptos,proto3,oneof"`
}

func (*RemoveCryptosResponse_Error) isRemoveCryptosResponse_Response() {}

func (*RemoveCryptosResponse_Cryptos) isRemoveCryptosResponse_Response() {}

type Market struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code   string          `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Market *markets.Market `protobuf:"bytes,3,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *Market) Reset() {
	*x = Market{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Market) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Market) ProtoMessage() {}

func (x *Market) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Market.ProtoReflect.Descriptor instead.
func (*Market) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{34}
}

func (x *Market) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Market) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Market) GetMarket() *markets.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type MarketList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code    string     `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Markets *uoms.List `protobuf:"bytes,3,opt,name=markets,proto3" json:"markets,omitempty"`
}

func (x *MarketList) Reset() {
	*x = MarketList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketList) ProtoMessage() {}

func (x *MarketList) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketList.ProtoReflect.Descriptor instead.
func (*MarketList) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{35}
}

func (x *MarketList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MarketList) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *MarketList) GetMarkets() *uoms.List {
	if x != nil {
		return x.Markets
	}
	return nil
}

type SetMarketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select  *Select          `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
	Markets *uoms.SelectList `protobuf:"bytes,2,opt,name=markets,proto3" json:"markets,omitempty"`
}

func (x *SetMarketsRequest) Reset() {
	*x = SetMarketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMarketsRequest) ProtoMessage() {}

func (x *SetMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMarketsRequest.ProtoReflect.Descriptor instead.
func (*SetMarketsRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{36}
}

func (x *SetMarketsRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *SetMarketsRequest) GetMarkets() *uoms.SelectList {
	if x != nil {
		return x.Markets
	}
	return nil
}

type SetMarketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*SetMarketsResponse_Error
	//	*SetMarketsResponse_Markets
	Response isSetMarketsResponse_Response `protobuf_oneof:"response"`
}

func (x *SetMarketsResponse) Reset() {
	*x = SetMarketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMarketsResponse) ProtoMessage() {}

func (x *SetMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMarketsResponse.ProtoReflect.Descriptor instead.
func (*SetMarketsResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{37}
}

func (m *SetMarketsResponse) GetResponse() isSetMarketsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SetMarketsResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*SetMarketsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SetMarketsResponse) GetMarkets() *MarketList {
	if x, ok := x.GetResponse().(*SetMarketsResponse_Markets); ok {
		return x.Markets
	}
	return nil
}

type isSetMarketsResponse_Response interface {
	isSetMarketsResponse_Response()
}

type SetMarketsResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SetMarketsResponse_Markets struct {
	Markets *MarketList `protobuf:"bytes,2,opt,name=markets,proto3,oneof"`
}

func (*SetMarketsResponse_Error) isSetMarketsResponse_Response() {}

func (*SetMarketsResponse_Markets) isSetMarketsResponse_Response() {}

type AddMarketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select  *Select          `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
	Markets *uoms.SelectList `protobuf:"bytes,2,opt,name=markets,proto3" json:"markets,omitempty"`
}

func (x *AddMarketsRequest) Reset() {
	*x = AddMarketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMarketsRequest) ProtoMessage() {}

func (x *AddMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMarketsRequest.ProtoReflect.Descriptor instead.
func (*AddMarketsRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{38}
}

func (x *AddMarketsRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *AddMarketsRequest) GetMarkets() *uoms.SelectList {
	if x != nil {
		return x.Markets
	}
	return nil
}

type AddMarketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*AddMarketsResponse_Error
	//	*AddMarketsResponse_Markets
	Response isAddMarketsResponse_Response `protobuf_oneof:"response"`
}

func (x *AddMarketsResponse) Reset() {
	*x = AddMarketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMarketsResponse) ProtoMessage() {}

func (x *AddMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMarketsResponse.ProtoReflect.Descriptor instead.
func (*AddMarketsResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{39}
}

func (m *AddMarketsResponse) GetResponse() isAddMarketsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *AddMarketsResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*AddMarketsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *AddMarketsResponse) GetMarkets() *MarketList {
	if x, ok := x.GetResponse().(*AddMarketsResponse_Markets); ok {
		return x.Markets
	}
	return nil
}

type isAddMarketsResponse_Response interface {
	isAddMarketsResponse_Response()
}

type AddMarketsResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type AddMarketsResponse_Markets struct {
	Markets *MarketList `protobuf:"bytes,2,opt,name=markets,proto3,oneof"`
}

func (*AddMarketsResponse_Error) isAddMarketsResponse_Response() {}

func (*AddMarketsResponse_Markets) isAddMarketsResponse_Response() {}

type GetMarketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select *Select `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
}

func (x *GetMarketsRequest) Reset() {
	*x = GetMarketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketsRequest) ProtoMessage() {}

func (x *GetMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketsRequest.ProtoReflect.Descriptor instead.
func (*GetMarketsRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{40}
}

func (x *GetMarketsRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

type GetMarketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetMarketsResponse_Error
	//	*GetMarketsResponse_Markets
	Response isGetMarketsResponse_Response `protobuf_oneof:"response"`
}

func (x *GetMarketsResponse) Reset() {
	*x = GetMarketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketsResponse) ProtoMessage() {}

func (x *GetMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketsResponse.ProtoReflect.Descriptor instead.
func (*GetMarketsResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{41}
}

func (m *GetMarketsResponse) GetResponse() isGetMarketsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetMarketsResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetMarketsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetMarketsResponse) GetMarkets() *MarketList {
	if x, ok := x.GetResponse().(*GetMarketsResponse_Markets); ok {
		return x.Markets
	}
	return nil
}

type isGetMarketsResponse_Response interface {
	isGetMarketsResponse_Response()
}

type GetMarketsResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetMarketsResponse_Markets struct {
	Markets *MarketList `protobuf:"bytes,2,opt,name=markets,proto3,oneof"`
}

func (*GetMarketsResponse_Error) isGetMarketsResponse_Response() {}

func (*GetMarketsResponse_Markets) isGetMarketsResponse_Response() {}

// A remove markets request is just a market update request with status set to TERMINATED in table 'countries_markets'
type RemoveMarketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select  *Select          `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
	Markets *uoms.SelectList `protobuf:"bytes,2,opt,name=markets,proto3,oneof" json:"markets,omitempty"` // Remove all if no specified list
}

func (x *RemoveMarketsRequest) Reset() {
	*x = RemoveMarketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMarketsRequest) ProtoMessage() {}

func (x *RemoveMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMarketsRequest.ProtoReflect.Descriptor instead.
func (*RemoveMarketsRequest) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{42}
}

func (x *RemoveMarketsRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *RemoveMarketsRequest) GetMarkets() *uoms.SelectList {
	if x != nil {
		return x.Markets
	}
	return nil
}

type RemoveMarketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*RemoveMarketsResponse_Error
	//	*RemoveMarketsResponse_Markets
	Response isRemoveMarketsResponse_Response `protobuf_oneof:"response"`
}

func (x *RemoveMarketsResponse) Reset() {
	*x = RemoveMarketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_countries_countries_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMarketsResponse) ProtoMessage() {}

func (x *RemoveMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_countries_countries_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMarketsResponse.ProtoReflect.Descriptor instead.
func (*RemoveMarketsResponse) Descriptor() ([]byte, []int) {
	return file_countries_countries_proto_rawDescGZIP(), []int{43}
}

func (m *RemoveMarketsResponse) GetResponse() isRemoveMarketsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RemoveMarketsResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*RemoveMarketsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *RemoveMarketsResponse) GetMarkets() *MarketList {
	if x, ok := x.GetResponse().(*RemoveMarketsResponse_Markets); ok {
		return x.Markets
	}
	return nil
}

type isRemoveMarketsResponse_Response interface {
	isRemoveMarketsResponse_Response()
}

type RemoveMarketsResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type RemoveMarketsResponse_Markets struct {
	Markets *MarketList `protobuf:"bytes,2,opt,name=markets,proto3,oneof"`
}

func (*RemoveMarketsResponse_Error) isRemoveMarketsResponse_Response() {}

func (*RemoveMarketsResponse_Markets) isRemoveMarketsResponse_Response() {}

var File_countries_countries_proto protoreflect.FileDescriptor

var file_countries_countries_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0f, 0x75, 0x6f, 0x6d, 0x73, 0x2f, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x66, 0x69, 0x61, 0x74,
	0x73, 0x2f, 0x66, 0x69, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x06, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x69, 0x73, 0x6f, 0x33, 0x31, 0x36,
	0x36, 0x5f, 0x61, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x69, 0x73,
	0x6f, 0x33, 0x31, 0x36, 0x36, 0x41, 0x33, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x69, 0x73,
	0x6f, 0x33, 0x31, 0x36, 0x36, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x0a, 0x69, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x4e, 0x75, 0x6d, 0x88, 0x01, 0x01,
	0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x63, 0x63, 0x74,
	0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x43, 0x63, 0x74, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x75, 0x62,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x09, 0x73, 0x75, 0x62, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a,
	0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x12, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0a, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a,
	0x05, 0x66, 0x69, 0x61, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75,
	0x6f, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x0b, 0x52, 0x05, 0x66, 0x69, 0x61, 0x74,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x0c, 0x52, 0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x5f, 0x61, 0x33,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x5f, 0x6e, 0x75, 0x6d,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x63, 0x63,
	0x74, 0x6c, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x42, 0x16, 0x0a,
	0x14, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x66, 0x69, 0x61, 0x74, 0x73,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x22, 0x2e, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x06,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x15, 0x0a, 0x05, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x62, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x07, 0x62, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x62, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x22, 0x33, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xb7, 0x06, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x69, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x5f, 0x61, 0x33, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x69, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x41, 0x33,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x69, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x6f, 0x33,
	0x31, 0x36, 0x36, 0x4e, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x63, 0x63, 0x74, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x43, 0x63, 0x74,
	0x6c, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x09, 0x73, 0x75, 0x62, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x18,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08,
	0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0d, 0x73, 0x75,
	0x62, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x0b,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x05, 0x66,
	0x69, 0x61, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x6f, 0x6d,
	0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x0c, 0x52, 0x05,
	0x66, 0x69, 0x61, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x6f, 0x6d, 0x73,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x0d, 0x52, 0x07, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x69, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x5f, 0x61, 0x33, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69,
	0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x5f, 0x6e, 0x75, 0x6d, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x63, 0x63, 0x74, 0x6c, 0x64, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x75, 0x62,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x42,
	0x1b, 0x0a, 0x19, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x12, 0x0a, 0x10,
	0x5f, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x66, 0x69, 0x61, 0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x73, 0x22, 0x73, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x48,
	0x00, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf0, 0x06, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x69, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x5f, 0x61, 0x33, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x69, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x41, 0x33, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x69, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a, 0x69, 0x73, 0x6f, 0x33, 0x31,
	0x36, 0x36, 0x4e, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x5f, 0x63, 0x63, 0x74, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x05, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x43, 0x63, 0x74, 0x6c,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x73, 0x75, 0x62, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x08, 0x52, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x18, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52,
	0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0a, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2b, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x0d, 0x73, 0x75, 0x62,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x0c, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x05, 0x66, 0x69,
	0x61, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x6f, 0x6d, 0x73,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x0d, 0x52, 0x05, 0x66,
	0x69, 0x61, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x0e, 0x52, 0x07, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x73, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69,
	0x63, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x5f,
	0x61, 0x33, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x5f, 0x6e,
	0x75, 0x6d, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f,
	0x63, 0x63, 0x74, 0x6c, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x42,
	0x16, 0x0a, 0x14, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x66, 0x69, 0x61, 0x74, 0x73, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x22, 0x73, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x70, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd6, 0x06, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x69, 0x73, 0x6f, 0x33, 0x31,
	0x36, 0x36, 0x5f, 0x61, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x69,
	0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x41, 0x33, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x69,
	0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x0a, 0x69, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x4e, 0x75, 0x6d, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x63, 0x63,
	0x74, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x43, 0x63, 0x74, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x75,
	0x62, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x34,
	0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x12, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x73, 0x75, 0x62,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0b, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x0c, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x05, 0x66, 0x69, 0x61, 0x74, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x69, 0x61, 0x74, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x0d, 0x52,
	0x05, 0x66, 0x69, 0x61, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x07, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x0e, 0x52, 0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x69, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x5f, 0x61, 0x33, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x69, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x5f, 0x6e, 0x75, 0x6d, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x63, 0x63, 0x74, 0x6c, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x75,
	0x62, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74,
	0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x66, 0x69, 0x61, 0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x73, 0x22, 0x74, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x22, 0x73, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x04, 0x46, 0x69, 0x61,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x66, 0x69, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x69, 0x61, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x61, 0x74,
	0x52, 0x04, 0x66, 0x69, 0x61, 0x74, 0x22, 0x50, 0x0a, 0x08, 0x46, 0x69, 0x61, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x66, 0x69, 0x61, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x05, 0x66, 0x69, 0x61, 0x74, 0x73, 0x22, 0x64, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x46,
	0x69, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x66, 0x69, 0x61, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x66, 0x69, 0x61, 0x74, 0x73, 0x22, 0x72,
	0x0a, 0x10, 0x53, 0x65, 0x74, 0x46, 0x69, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x05, 0x66, 0x69, 0x61,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x05, 0x66, 0x69, 0x61, 0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x64, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x46, 0x69, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x12, 0x26, 0x0a, 0x05, 0x66, 0x69, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x05, 0x66, 0x69, 0x61, 0x74, 0x73, 0x22, 0x72, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x46,
	0x69, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x05, 0x66, 0x69, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x46,
	0x69, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x66, 0x69, 0x61, 0x74, 0x73,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x72, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x05, 0x66, 0x69, 0x61, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x2e, 0x46, 0x69, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x66, 0x69, 0x61,
	0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76,
	0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12,
	0x2b, 0x0a, 0x05, 0x66, 0x69, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x05, 0x66, 0x69, 0x61, 0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x66, 0x69, 0x61, 0x74, 0x73, 0x22, 0x75, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x46, 0x69, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x05, 0x66, 0x69, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e,
	0x46, 0x69, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x66, 0x69, 0x61, 0x74,
	0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a,
	0x06, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x06, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x0a, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x22, 0x6a, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x07,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x22, 0x7a, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6a, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73,
	0x22, 0x7a, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x31, 0x0a,
	0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x7a, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7e, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75,
	0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x22, 0x7d, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x06, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x56,
	0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x24, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x6a, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x73, 0x22, 0x7a, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x31, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6a,
	0x0a, 0x11, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x2a,
	0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x7a, 0x0a, 0x12, 0x41, 0x64,
	0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x7a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x7e, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x73, 0x22, 0x7d, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x83, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x42, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1e, 0x64, 0x61, 0x76, 0x65, 0x6e, 0x73, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0xca, 0x02, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0xe2, 0x02, 0x15, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_countries_countries_proto_rawDescOnce sync.Once
	file_countries_countries_proto_rawDescData = file_countries_countries_proto_rawDesc
)

func file_countries_countries_proto_rawDescGZIP() []byte {
	file_countries_countries_proto_rawDescOnce.Do(func() {
		file_countries_countries_proto_rawDescData = protoimpl.X.CompressGZIP(file_countries_countries_proto_rawDescData)
	})
	return file_countries_countries_proto_rawDescData
}

var file_countries_countries_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_countries_countries_proto_goTypes = []interface{}{
	(*Country)(nil),                // 0: countries.Country
	(*List)(nil),                   // 1: countries.List
	(*Select)(nil),                 // 2: countries.Select
	(*SelectList)(nil),             // 3: countries.SelectList
	(*CreateRequest)(nil),          // 4: countries.CreateRequest
	(*CreateResponse)(nil),         // 5: countries.CreateResponse
	(*UpdateRequest)(nil),          // 6: countries.UpdateRequest
	(*UpdateResponse)(nil),         // 7: countries.UpdateResponse
	(*GetRequest)(nil),             // 8: countries.GetRequest
	(*GetResponse)(nil),            // 9: countries.GetResponse
	(*GetListRequest)(nil),         // 10: countries.GetListRequest
	(*GetListResponse)(nil),        // 11: countries.GetListResponse
	(*DeleteRequest)(nil),          // 12: countries.DeleteRequest
	(*DeleteResponse)(nil),         // 13: countries.DeleteResponse
	(*Fiat)(nil),                   // 14: countries.Fiat
	(*FiatList)(nil),               // 15: countries.FiatList
	(*SetFiatsRequest)(nil),        // 16: countries.SetFiatsRequest
	(*SetFiatsResponse)(nil),       // 17: countries.SetFiatsResponse
	(*AddFiatsRequest)(nil),        // 18: countries.AddFiatsRequest
	(*AddFiatsResponse)(nil),       // 19: countries.AddFiatsResponse
	(*GetFiatsRequest)(nil),        // 20: countries.GetFiatsRequest
	(*GetFiatsResponse)(nil),       // 21: countries.GetFiatsResponse
	(*RemoveFiatsRequest)(nil),     // 22: countries.RemoveFiatsRequest
	(*RemoveFiatsResponse)(nil),    // 23: countries.RemoveFiatsResponse
	(*Crypto)(nil),                 // 24: countries.Crypto
	(*CryptoList)(nil),             // 25: countries.CryptoList
	(*SetCryptosRequest)(nil),      // 26: countries.SetCryptosRequest
	(*SetCryptosResponse)(nil),     // 27: countries.SetCryptosResponse
	(*AddCryptosRequest)(nil),      // 28: countries.AddCryptosRequest
	(*AddCryptosResponse)(nil),     // 29: countries.AddCryptosResponse
	(*GetCryptosRequest)(nil),      // 30: countries.GetCryptosRequest
	(*GetCryptosResponse)(nil),     // 31: countries.GetCryptosResponse
	(*RemoveCryptosRequest)(nil),   // 32: countries.RemoveCryptosRequest
	(*RemoveCryptosResponse)(nil),  // 33: countries.RemoveCryptosResponse
	(*Market)(nil),                 // 34: countries.Market
	(*MarketList)(nil),             // 35: countries.MarketList
	(*SetMarketsRequest)(nil),      // 36: countries.SetMarketsRequest
	(*SetMarketsResponse)(nil),     // 37: countries.SetMarketsResponse
	(*AddMarketsRequest)(nil),      // 38: countries.AddMarketsRequest
	(*AddMarketsResponse)(nil),     // 39: countries.AddMarketsResponse
	(*GetMarketsRequest)(nil),      // 40: countries.GetMarketsRequest
	(*GetMarketsResponse)(nil),     // 41: countries.GetMarketsResponse
	(*RemoveMarketsRequest)(nil),   // 42: countries.RemoveMarketsRequest
	(*RemoveMarketsResponse)(nil),  // 43: countries.RemoveMarketsResponse
	(common.Status)(0),             // 44: common.Status
	(*uoms.List)(nil),              // 45: uoms.List
	(*uoms.SelectList)(nil),        // 46: uoms.SelectList
	(*common.Error)(nil),           // 47: common.Error
	(*common.StatusList)(nil),      // 48: common.StatusList
	(*fiats.GetListRequest)(nil),   // 49: fiats.GetListRequest
	(*cryptos.GetListRequest)(nil), // 50: cryptos.GetListRequest
	(*fiats.Fiat)(nil),             // 51: fiats.Fiat
	(*cryptos.Crypto)(nil),         // 52: cryptos.Crypto
	(*markets.Market)(nil),         // 53: markets.Market
}
var file_countries_countries_proto_depIdxs = []int32{
	44, // 0: countries.Country.status:type_name -> common.Status
	45, // 1: countries.Country.fiats:type_name -> uoms.List
	45, // 2: countries.Country.cryptos:type_name -> uoms.List
	0,  // 3: countries.List.list:type_name -> countries.Country
	2,  // 4: countries.SelectList.list:type_name -> countries.Select
	44, // 5: countries.CreateRequest.status:type_name -> common.Status
	46, // 6: countries.CreateRequest.fiats:type_name -> uoms.SelectList
	46, // 7: countries.CreateRequest.cryptos:type_name -> uoms.SelectList
	47, // 8: countries.CreateResponse.error:type_name -> common.Error
	0,  // 9: countries.CreateResponse.country:type_name -> countries.Country
	2,  // 10: countries.UpdateRequest.select:type_name -> countries.Select
	44, // 11: countries.UpdateRequest.status:type_name -> common.Status
	46, // 12: countries.UpdateRequest.fiats:type_name -> uoms.SelectList
	46, // 13: countries.UpdateRequest.cryptos:type_name -> uoms.SelectList
	47, // 14: countries.UpdateResponse.error:type_name -> common.Error
	0,  // 15: countries.UpdateResponse.country:type_name -> countries.Country
	2,  // 16: countries.GetRequest.select:type_name -> countries.Select
	47, // 17: countries.GetResponse.error:type_name -> common.Error
	0,  // 18: countries.GetResponse.country:type_name -> countries.Country
	48, // 19: countries.GetListRequest.status:type_name -> common.StatusList
	49, // 20: countries.GetListRequest.fiats:type_name -> fiats.GetListRequest
	50, // 21: countries.GetListRequest.cryptos:type_name -> cryptos.GetListRequest
	47, // 22: countries.GetListResponse.error:type_name -> common.Error
	0,  // 23: countries.GetListResponse.country:type_name -> countries.Country
	2,  // 24: countries.DeleteRequest.select:type_name -> countries.Select
	47, // 25: countries.DeleteResponse.error:type_name -> common.Error
	0,  // 26: countries.DeleteResponse.country:type_name -> countries.Country
	51, // 27: countries.Fiat.fiat:type_name -> fiats.Fiat
	45, // 28: countries.FiatList.fiats:type_name -> uoms.List
	2,  // 29: countries.SetFiatsRequest.select:type_name -> countries.Select
	46, // 30: countries.SetFiatsRequest.fiats:type_name -> uoms.SelectList
	47, // 31: countries.SetFiatsResponse.error:type_name -> common.Error
	15, // 32: countries.SetFiatsResponse.fiats:type_name -> countries.FiatList
	2,  // 33: countries.AddFiatsRequest.select:type_name -> countries.Select
	46, // 34: countries.AddFiatsRequest.fiats:type_name -> uoms.SelectList
	47, // 35: countries.AddFiatsResponse.error:type_name -> common.Error
	15, // 36: countries.AddFiatsResponse.fiats:type_name -> countries.FiatList
	2,  // 37: countries.GetFiatsRequest.select:type_name -> countries.Select
	47, // 38: countries.GetFiatsResponse.error:type_name -> common.Error
	15, // 39: countries.GetFiatsResponse.fiats:type_name -> countries.FiatList
	2,  // 40: countries.RemoveFiatsRequest.select:type_name -> countries.Select
	46, // 41: countries.RemoveFiatsRequest.fiats:type_name -> uoms.SelectList
	47, // 42: countries.RemoveFiatsResponse.error:type_name -> common.Error
	15, // 43: countries.RemoveFiatsResponse.fiats:type_name -> countries.FiatList
	52, // 44: countries.Crypto.crypto:type_name -> cryptos.Crypto
	45, // 45: countries.CryptoList.cryptos:type_name -> uoms.List
	2,  // 46: countries.SetCryptosRequest.select:type_name -> countries.Select
	46, // 47: countries.SetCryptosRequest.cryptos:type_name -> uoms.SelectList
	47, // 48: countries.SetCryptosResponse.error:type_name -> common.Error
	25, // 49: countries.SetCryptosResponse.cryptos:type_name -> countries.CryptoList
	2,  // 50: countries.AddCryptosRequest.select:type_name -> countries.Select
	46, // 51: countries.AddCryptosRequest.cryptos:type_name -> uoms.SelectList
	47, // 52: countries.AddCryptosResponse.error:type_name -> common.Error
	25, // 53: countries.AddCryptosResponse.cryptos:type_name -> countries.CryptoList
	2,  // 54: countries.GetCryptosRequest.select:type_name -> countries.Select
	47, // 55: countries.GetCryptosResponse.error:type_name -> common.Error
	25, // 56: countries.GetCryptosResponse.cryptos:type_name -> countries.CryptoList
	2,  // 57: countries.RemoveCryptosRequest.select:type_name -> countries.Select
	46, // 58: countries.RemoveCryptosRequest.cryptos:type_name -> uoms.SelectList
	47, // 59: countries.RemoveCryptosResponse.error:type_name -> common.Error
	25, // 60: countries.RemoveCryptosResponse.cryptos:type_name -> countries.CryptoList
	53, // 61: countries.Market.market:type_name -> markets.Market
	45, // 62: countries.MarketList.markets:type_name -> uoms.List
	2,  // 63: countries.SetMarketsRequest.select:type_name -> countries.Select
	46, // 64: countries.SetMarketsRequest.markets:type_name -> uoms.SelectList
	47, // 65: countries.SetMarketsResponse.error:type_name -> common.Error
	35, // 66: countries.SetMarketsResponse.markets:type_name -> countries.MarketList
	2,  // 67: countries.AddMarketsRequest.select:type_name -> countries.Select
	46, // 68: countries.AddMarketsRequest.markets:type_name -> uoms.SelectList
	47, // 69: countries.AddMarketsResponse.error:type_name -> common.Error
	35, // 70: countries.AddMarketsResponse.markets:type_name -> countries.MarketList
	2,  // 71: countries.GetMarketsRequest.select:type_name -> countries.Select
	47, // 72: countries.GetMarketsResponse.error:type_name -> common.Error
	35, // 73: countries.GetMarketsResponse.markets:type_name -> countries.MarketList
	2,  // 74: countries.RemoveMarketsRequest.select:type_name -> countries.Select
	46, // 75: countries.RemoveMarketsRequest.markets:type_name -> uoms.SelectList
	47, // 76: countries.RemoveMarketsResponse.error:type_name -> common.Error
	35, // 77: countries.RemoveMarketsResponse.markets:type_name -> countries.MarketList
	78, // [78:78] is the sub-list for method output_type
	78, // [78:78] is the sub-list for method input_type
	78, // [78:78] is the sub-list for extension type_name
	78, // [78:78] is the sub-list for extension extendee
	0,  // [0:78] is the sub-list for field type_name
}

func init() { file_countries_countries_proto_init() }
func file_countries_countries_proto_init() {
	if File_countries_countries_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_countries_countries_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Country); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Select); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fiat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FiatList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFiatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFiatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFiatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFiatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFiatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFiatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFiatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFiatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Crypto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCryptosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCryptosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCryptosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCryptosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCryptosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCryptosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCryptosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCryptosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Market); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMarketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMarketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMarketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMarketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMarketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_countries_countries_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMarketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_countries_countries_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_countries_countries_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Select_ById)(nil),
		(*Select_ByCode)(nil),
	}
	file_countries_countries_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_countries_countries_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*CreateResponse_Error)(nil),
		(*CreateResponse_Country)(nil),
	}
	file_countries_countries_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_countries_countries_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*UpdateResponse_Error)(nil),
		(*UpdateResponse_Country)(nil),
	}
	file_countries_countries_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*GetResponse_Error)(nil),
		(*GetResponse_Country)(nil),
	}
	file_countries_countries_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_countries_countries_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*GetListResponse_Error)(nil),
		(*GetListResponse_Country)(nil),
	}
	file_countries_countries_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*DeleteResponse_Error)(nil),
		(*DeleteResponse_Country)(nil),
	}
	file_countries_countries_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*SetFiatsResponse_Error)(nil),
		(*SetFiatsResponse_Fiats)(nil),
	}
	file_countries_countries_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*AddFiatsResponse_Error)(nil),
		(*AddFiatsResponse_Fiats)(nil),
	}
	file_countries_countries_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*GetFiatsResponse_Error)(nil),
		(*GetFiatsResponse_Fiats)(nil),
	}
	file_countries_countries_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_countries_countries_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*RemoveFiatsResponse_Error)(nil),
		(*RemoveFiatsResponse_Fiats)(nil),
	}
	file_countries_countries_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*SetCryptosResponse_Error)(nil),
		(*SetCryptosResponse_Cryptos)(nil),
	}
	file_countries_countries_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*AddCryptosResponse_Error)(nil),
		(*AddCryptosResponse_Cryptos)(nil),
	}
	file_countries_countries_proto_msgTypes[31].OneofWrappers = []interface{}{
		(*GetCryptosResponse_Error)(nil),
		(*GetCryptosResponse_Cryptos)(nil),
	}
	file_countries_countries_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_countries_countries_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*RemoveCryptosResponse_Error)(nil),
		(*RemoveCryptosResponse_Cryptos)(nil),
	}
	file_countries_countries_proto_msgTypes[37].OneofWrappers = []interface{}{
		(*SetMarketsResponse_Error)(nil),
		(*SetMarketsResponse_Markets)(nil),
	}
	file_countries_countries_proto_msgTypes[39].OneofWrappers = []interface{}{
		(*AddMarketsResponse_Error)(nil),
		(*AddMarketsResponse_Markets)(nil),
	}
	file_countries_countries_proto_msgTypes[41].OneofWrappers = []interface{}{
		(*GetMarketsResponse_Error)(nil),
		(*GetMarketsResponse_Markets)(nil),
	}
	file_countries_countries_proto_msgTypes[42].OneofWrappers = []interface{}{}
	file_countries_countries_proto_msgTypes[43].OneofWrappers = []interface{}{
		(*RemoveMarketsResponse_Error)(nil),
		(*RemoveMarketsResponse_Markets)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_countries_countries_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_countries_countries_proto_goTypes,
		DependencyIndexes: file_countries_countries_proto_depIdxs,
		MessageInfos:      file_countries_countries_proto_msgTypes,
	}.Build()
	File_countries_countries_proto = out.File
	file_countries_countries_proto_rawDesc = nil
	file_countries_countries_proto_goTypes = nil
	file_countries_countries_proto_depIdxs = nil
}

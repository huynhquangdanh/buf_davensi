// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: cryptocategories/cryptocategories_service.proto

package cryptocategories

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_cryptocategories_cryptocategories_service_proto protoreflect.FileDescriptor

var file_cryptocategories_cryptocategories_service_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x10, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x1a, 0x27, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x93, 0x06, 0x0a,
	0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x1f, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1c, 0x2e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x4d, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5b, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x12, 0x23, 0x2e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5b, 0x0a, 0x0a,
	0x41, 0x64, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x41, 0x64,
	0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x61, 0x0a, 0x0c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x25, 0x2e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x64, 0x0a, 0x0d,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x12, 0x26, 0x2e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x42, 0xbb, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x1c, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x25, 0x64, 0x61, 0x76,
	0x65, 0x6e, 0x73, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x10, 0x43, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0xca, 0x02, 0x10, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0xe2, 0x02,
	0x1c, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_cryptocategories_cryptocategories_service_proto_goTypes = []interface{}{
	(*CreateRequest)(nil),         // 0: cryptocategories.CreateRequest
	(*UpdateRequest)(nil),         // 1: cryptocategories.UpdateRequest
	(*GetRequest)(nil),            // 2: cryptocategories.GetRequest
	(*GetListRequest)(nil),        // 3: cryptocategories.GetListRequest
	(*DeleteRequest)(nil),         // 4: cryptocategories.DeleteRequest
	(*SetCryptosRequest)(nil),     // 5: cryptocategories.SetCryptosRequest
	(*AddCryptosRequest)(nil),     // 6: cryptocategories.AddCryptosRequest
	(*UpdateCryptoRequest)(nil),   // 7: cryptocategories.UpdateCryptoRequest
	(*RemoveCryptosRequest)(nil),  // 8: cryptocategories.RemoveCryptosRequest
	(*CreateResponse)(nil),        // 9: cryptocategories.CreateResponse
	(*UpdateResponse)(nil),        // 10: cryptocategories.UpdateResponse
	(*GetResponse)(nil),           // 11: cryptocategories.GetResponse
	(*GetListResponse)(nil),       // 12: cryptocategories.GetListResponse
	(*DeleteResponse)(nil),        // 13: cryptocategories.DeleteResponse
	(*SetCryptosResponse)(nil),    // 14: cryptocategories.SetCryptosResponse
	(*AddCryptosResponse)(nil),    // 15: cryptocategories.AddCryptosResponse
	(*UpdateCryptoResponse)(nil),  // 16: cryptocategories.UpdateCryptoResponse
	(*RemoveCryptosResponse)(nil), // 17: cryptocategories.RemoveCryptosResponse
}
var file_cryptocategories_cryptocategories_service_proto_depIdxs = []int32{
	0,  // 0: cryptocategories.Service.Create:input_type -> cryptocategories.CreateRequest
	1,  // 1: cryptocategories.Service.Update:input_type -> cryptocategories.UpdateRequest
	2,  // 2: cryptocategories.Service.Get:input_type -> cryptocategories.GetRequest
	3,  // 3: cryptocategories.Service.GetList:input_type -> cryptocategories.GetListRequest
	4,  // 4: cryptocategories.Service.Delete:input_type -> cryptocategories.DeleteRequest
	5,  // 5: cryptocategories.Service.SetCryptos:input_type -> cryptocategories.SetCryptosRequest
	6,  // 6: cryptocategories.Service.AddCryptos:input_type -> cryptocategories.AddCryptosRequest
	7,  // 7: cryptocategories.Service.UpdateCrypto:input_type -> cryptocategories.UpdateCryptoRequest
	8,  // 8: cryptocategories.Service.RemoveCryptos:input_type -> cryptocategories.RemoveCryptosRequest
	9,  // 9: cryptocategories.Service.Create:output_type -> cryptocategories.CreateResponse
	10, // 10: cryptocategories.Service.Update:output_type -> cryptocategories.UpdateResponse
	11, // 11: cryptocategories.Service.Get:output_type -> cryptocategories.GetResponse
	12, // 12: cryptocategories.Service.GetList:output_type -> cryptocategories.GetListResponse
	13, // 13: cryptocategories.Service.Delete:output_type -> cryptocategories.DeleteResponse
	14, // 14: cryptocategories.Service.SetCryptos:output_type -> cryptocategories.SetCryptosResponse
	15, // 15: cryptocategories.Service.AddCryptos:output_type -> cryptocategories.AddCryptosResponse
	16, // 16: cryptocategories.Service.UpdateCrypto:output_type -> cryptocategories.UpdateCryptoResponse
	17, // 17: cryptocategories.Service.RemoveCryptos:output_type -> cryptocategories.RemoveCryptosResponse
	9,  // [9:18] is the sub-list for method output_type
	0,  // [0:9] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_cryptocategories_cryptocategories_service_proto_init() }
func file_cryptocategories_cryptocategories_service_proto_init() {
	if File_cryptocategories_cryptocategories_service_proto != nil {
		return
	}
	file_cryptocategories_cryptocategories_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cryptocategories_cryptocategories_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cryptocategories_cryptocategories_service_proto_goTypes,
		DependencyIndexes: file_cryptocategories_cryptocategories_service_proto_depIdxs,
	}.Build()
	File_cryptocategories_cryptocategories_service_proto = out.File
	file_cryptocategories_cryptocategories_service_proto_rawDesc = nil
	file_cryptocategories_cryptocategories_service_proto_goTypes = nil
	file_cryptocategories_cryptocategories_service_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: ibans/ibans.proto

package ibans

import (
	common "davensi.com/core/gen/common"
	countries "davensi.com/core/gen/countries"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Algorithm int32

const (
	Algorithm_ALGORITHM_UNSPECIFIED          Algorithm = 0
	Algorithm_ALGORITHM_ISO_7064_MOD_97_10   Algorithm = 1
	Algorithm_ALGORITHM_ISO_7064_MOD_97_10_V Algorithm = 2
	Algorithm_ALGORITHM_ISO_7064_MOD_11_10   Algorithm = 3
	Algorithm_ALGORITHM_WEIGHTED             Algorithm = 4
	Algorithm_ALGORITHM_LUHN                 Algorithm = 5
	Algorithm_ALGORITHM_CONVERSION_SUM       Algorithm = 6
)

// Enum value maps for Algorithm.
var (
	Algorithm_name = map[int32]string{
		0: "ALGORITHM_UNSPECIFIED",
		1: "ALGORITHM_ISO_7064_MOD_97_10",
		2: "ALGORITHM_ISO_7064_MOD_97_10_V",
		3: "ALGORITHM_ISO_7064_MOD_11_10",
		4: "ALGORITHM_WEIGHTED",
		5: "ALGORITHM_LUHN",
		6: "ALGORITHM_CONVERSION_SUM",
	}
	Algorithm_value = map[string]int32{
		"ALGORITHM_UNSPECIFIED":          0,
		"ALGORITHM_ISO_7064_MOD_97_10":   1,
		"ALGORITHM_ISO_7064_MOD_97_10_V": 2,
		"ALGORITHM_ISO_7064_MOD_11_10":   3,
		"ALGORITHM_WEIGHTED":             4,
		"ALGORITHM_LUHN":                 5,
		"ALGORITHM_CONVERSION_SUM":       6,
	}
)

func (x Algorithm) Enum() *Algorithm {
	p := new(Algorithm)
	*p = x
	return p
}

func (x Algorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Algorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_ibans_ibans_proto_enumTypes[0].Descriptor()
}

func (Algorithm) Type() protoreflect.EnumType {
	return &file_ibans_ibans_proto_enumTypes[0]
}

func (x Algorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Algorithm.Descriptor instead.
func (Algorithm) EnumDescriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{0}
}

type AlgorithmList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []Algorithm `protobuf:"varint,1,rep,packed,name=list,proto3,enum=ibans.Algorithm" json:"list,omitempty"`
}

func (x *AlgorithmList) Reset() {
	*x = AlgorithmList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibans_ibans_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlgorithmList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlgorithmList) ProtoMessage() {}

func (x *AlgorithmList) ProtoReflect() protoreflect.Message {
	mi := &file_ibans_ibans_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlgorithmList.ProtoReflect.Descriptor instead.
func (*AlgorithmList) Descriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{0}
}

func (x *AlgorithmList) GetList() []Algorithm {
	if x != nil {
		return x.List
	}
	return nil
}

// Backed by table 'ibans'
type IBAN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                // System Key: id is generated by the server or the database
	Country    *countries.Country     `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`                      // country + valid_from form the Human-Readable Key (unique identifier)
	ValidFrom  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"` // country + valid_from form the Human-Readable Key (unique identifier)
	Algorithm  Algorithm              `protobuf:"varint,4,opt,name=algorithm,proto3,enum=ibans.Algorithm" json:"algorithm,omitempty"`
	Format     string                 `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	Weights    *string                `protobuf:"bytes,6,opt,name=weights,proto3,oneof" json:"weights,omitempty"`
	Modulo     *string                `protobuf:"bytes,7,opt,name=modulo,proto3,oneof" json:"modulo,omitempty"`
	Complement *string                `protobuf:"bytes,8,opt,name=complement,proto3,oneof" json:"complement,omitempty"`
	Method     *string                `protobuf:"bytes,9,opt,name=method,proto3,oneof" json:"method,omitempty"`
	Status     common.Status          `protobuf:"varint,10,opt,name=status,proto3,enum=common.Status" json:"status,omitempty"`
}

func (x *IBAN) Reset() {
	*x = IBAN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibans_ibans_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IBAN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IBAN) ProtoMessage() {}

func (x *IBAN) ProtoReflect() protoreflect.Message {
	mi := &file_ibans_ibans_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IBAN.ProtoReflect.Descriptor instead.
func (*IBAN) Descriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{1}
}

func (x *IBAN) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IBAN) GetCountry() *countries.Country {
	if x != nil {
		return x.Country
	}
	return nil
}

func (x *IBAN) GetValidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidFrom
	}
	return nil
}

func (x *IBAN) GetAlgorithm() Algorithm {
	if x != nil {
		return x.Algorithm
	}
	return Algorithm_ALGORITHM_UNSPECIFIED
}

func (x *IBAN) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *IBAN) GetWeights() string {
	if x != nil && x.Weights != nil {
		return *x.Weights
	}
	return ""
}

func (x *IBAN) GetModulo() string {
	if x != nil && x.Modulo != nil {
		return *x.Modulo
	}
	return ""
}

func (x *IBAN) GetComplement() string {
	if x != nil && x.Complement != nil {
		return *x.Complement
	}
	return ""
}

func (x *IBAN) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *IBAN) GetStatus() common.Status {
	if x != nil {
		return x.Status
	}
	return common.Status(0)
}

type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*IBAN `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibans_ibans_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_ibans_ibans_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{2}
}

func (x *List) GetList() []*IBAN {
	if x != nil {
		return x.List
	}
	return nil
}

type CountryValidity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country   *countries.Select      `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	ValidFrom *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
}

func (x *CountryValidity) Reset() {
	*x = CountryValidity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibans_ibans_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryValidity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryValidity) ProtoMessage() {}

func (x *CountryValidity) ProtoReflect() protoreflect.Message {
	mi := &file_ibans_ibans_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryValidity.ProtoReflect.Descriptor instead.
func (*CountryValidity) Descriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{3}
}

func (x *CountryValidity) GetCountry() *countries.Select {
	if x != nil {
		return x.Country
	}
	return nil
}

func (x *CountryValidity) GetValidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidFrom
	}
	return nil
}

type Select struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Select:
	//
	//	*Select_ById
	//	*Select_ByCountryValidity
	Select isSelect_Select `protobuf_oneof:"select"`
}

func (x *Select) Reset() {
	*x = Select{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibans_ibans_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Select) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Select) ProtoMessage() {}

func (x *Select) ProtoReflect() protoreflect.Message {
	mi := &file_ibans_ibans_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Select.ProtoReflect.Descriptor instead.
func (*Select) Descriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{4}
}

func (m *Select) GetSelect() isSelect_Select {
	if m != nil {
		return m.Select
	}
	return nil
}

func (x *Select) GetById() string {
	if x, ok := x.GetSelect().(*Select_ById); ok {
		return x.ById
	}
	return ""
}

func (x *Select) GetByCountryValidity() *CountryValidity {
	if x, ok := x.GetSelect().(*Select_ByCountryValidity); ok {
		return x.ByCountryValidity
	}
	return nil
}

type isSelect_Select interface {
	isSelect_Select()
}

type Select_ById struct {
	ById string `protobuf:"bytes,1,opt,name=by_id,json=byId,proto3,oneof"`
}

type Select_ByCountryValidity struct {
	ByCountryValidity *CountryValidity `protobuf:"bytes,2,opt,name=by_country_validity,json=byCountryValidity,proto3,oneof"`
}

func (*Select_ById) isSelect_Select() {}

func (*Select_ByCountryValidity) isSelect_Select() {}

type SelectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Select `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SelectList) Reset() {
	*x = SelectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibans_ibans_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectList) ProtoMessage() {}

func (x *SelectList) ProtoReflect() protoreflect.Message {
	mi := &file_ibans_ibans_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectList.ProtoReflect.Descriptor instead.
func (*SelectList) Descriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{5}
}

func (x *SelectList) GetList() []*Select {
	if x != nil {
		return x.List
	}
	return nil
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country    *countries.Select      `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	Validity   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=validity,proto3,oneof" json:"validity,omitempty"`
	Algorithm  Algorithm              `protobuf:"varint,3,opt,name=algorithm,proto3,enum=ibans.Algorithm" json:"algorithm,omitempty"`
	Format     string                 `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`
	Weights    *string                `protobuf:"bytes,5,opt,name=weights,proto3,oneof" json:"weights,omitempty"`
	Modulo     *string                `protobuf:"bytes,6,opt,name=modulo,proto3,oneof" json:"modulo,omitempty"`
	Complement *string                `protobuf:"bytes,7,opt,name=complement,proto3,oneof" json:"complement,omitempty"`
	Method     *string                `protobuf:"bytes,8,opt,name=method,proto3,oneof" json:"method,omitempty"`
	Status     *common.Status         `protobuf:"varint,9,opt,name=status,proto3,enum=common.Status,oneof" json:"status,omitempty"` // Default: 0 (STATUS_UNSPECIFIED)
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibans_ibans_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ibans_ibans_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{6}
}

func (x *CreateRequest) GetCountry() *countries.Select {
	if x != nil {
		return x.Country
	}
	return nil
}

func (x *CreateRequest) GetValidity() *timestamppb.Timestamp {
	if x != nil {
		return x.Validity
	}
	return nil
}

func (x *CreateRequest) GetAlgorithm() Algorithm {
	if x != nil {
		return x.Algorithm
	}
	return Algorithm_ALGORITHM_UNSPECIFIED
}

func (x *CreateRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *CreateRequest) GetWeights() string {
	if x != nil && x.Weights != nil {
		return *x.Weights
	}
	return ""
}

func (x *CreateRequest) GetModulo() string {
	if x != nil && x.Modulo != nil {
		return *x.Modulo
	}
	return ""
}

func (x *CreateRequest) GetComplement() string {
	if x != nil && x.Complement != nil {
		return *x.Complement
	}
	return ""
}

func (x *CreateRequest) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *CreateRequest) GetStatus() common.Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return common.Status(0)
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*CreateResponse_Error
	//	*CreateResponse_Iban
	Response isCreateResponse_Response `protobuf_oneof:"response"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibans_ibans_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ibans_ibans_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{7}
}

func (m *CreateResponse) GetResponse() isCreateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CreateResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*CreateResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CreateResponse) GetIban() *IBAN {
	if x, ok := x.GetResponse().(*CreateResponse_Iban); ok {
		return x.Iban
	}
	return nil
}

type isCreateResponse_Response interface {
	isCreateResponse_Response()
}

type CreateResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateResponse_Iban struct {
	Iban *IBAN `protobuf:"bytes,2,opt,name=iban,proto3,oneof"`
}

func (*CreateResponse_Error) isCreateResponse_Response() {}

func (*CreateResponse_Iban) isCreateResponse_Response() {}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Select:
	//
	//	*UpdateRequest_ById
	//	*UpdateRequest_ByCountryValidity
	Select     isUpdateRequest_Select `protobuf_oneof:"select"`
	Country    *countries.Select      `protobuf:"bytes,3,opt,name=country,proto3,oneof" json:"country,omitempty"`
	Validity   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=validity,proto3,oneof" json:"validity,omitempty"`
	Algorithm  *Algorithm             `protobuf:"varint,5,opt,name=algorithm,proto3,enum=ibans.Algorithm,oneof" json:"algorithm,omitempty"`
	Format     *string                `protobuf:"bytes,6,opt,name=format,proto3,oneof" json:"format,omitempty"`
	Weights    *string                `protobuf:"bytes,7,opt,name=weights,proto3,oneof" json:"weights,omitempty"`
	Modulo     *string                `protobuf:"bytes,8,opt,name=modulo,proto3,oneof" json:"modulo,omitempty"`
	Complement *string                `protobuf:"bytes,9,opt,name=complement,proto3,oneof" json:"complement,omitempty"`
	Method     *string                `protobuf:"bytes,10,opt,name=method,proto3,oneof" json:"method,omitempty"`
	Status     *common.Status         `protobuf:"varint,11,opt,name=status,proto3,enum=common.Status,oneof" json:"status,omitempty"` // Default: 0 (STATUS_UNSPECIFIED)
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibans_ibans_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ibans_ibans_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{8}
}

func (m *UpdateRequest) GetSelect() isUpdateRequest_Select {
	if m != nil {
		return m.Select
	}
	return nil
}

func (x *UpdateRequest) GetById() string {
	if x, ok := x.GetSelect().(*UpdateRequest_ById); ok {
		return x.ById
	}
	return ""
}

func (x *UpdateRequest) GetByCountryValidity() *CountryValidity {
	if x, ok := x.GetSelect().(*UpdateRequest_ByCountryValidity); ok {
		return x.ByCountryValidity
	}
	return nil
}

func (x *UpdateRequest) GetCountry() *countries.Select {
	if x != nil {
		return x.Country
	}
	return nil
}

func (x *UpdateRequest) GetValidity() *timestamppb.Timestamp {
	if x != nil {
		return x.Validity
	}
	return nil
}

func (x *UpdateRequest) GetAlgorithm() Algorithm {
	if x != nil && x.Algorithm != nil {
		return *x.Algorithm
	}
	return Algorithm_ALGORITHM_UNSPECIFIED
}

func (x *UpdateRequest) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *UpdateRequest) GetWeights() string {
	if x != nil && x.Weights != nil {
		return *x.Weights
	}
	return ""
}

func (x *UpdateRequest) GetModulo() string {
	if x != nil && x.Modulo != nil {
		return *x.Modulo
	}
	return ""
}

func (x *UpdateRequest) GetComplement() string {
	if x != nil && x.Complement != nil {
		return *x.Complement
	}
	return ""
}

func (x *UpdateRequest) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *UpdateRequest) GetStatus() common.Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return common.Status(0)
}

type isUpdateRequest_Select interface {
	isUpdateRequest_Select()
}

type UpdateRequest_ById struct {
	ById string `protobuf:"bytes,1,opt,name=by_id,json=byId,proto3,oneof"`
}

type UpdateRequest_ByCountryValidity struct {
	ByCountryValidity *CountryValidity `protobuf:"bytes,2,opt,name=by_country_validity,json=byCountryValidity,proto3,oneof"`
}

func (*UpdateRequest_ById) isUpdateRequest_Select() {}

func (*UpdateRequest_ByCountryValidity) isUpdateRequest_Select() {}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*UpdateResponse_Error
	//	*UpdateResponse_Iban
	Response isUpdateResponse_Response `protobuf_oneof:"response"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibans_ibans_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ibans_ibans_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{9}
}

func (m *UpdateResponse) GetResponse() isUpdateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UpdateResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*UpdateResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *UpdateResponse) GetIban() *IBAN {
	if x, ok := x.GetResponse().(*UpdateResponse_Iban); ok {
		return x.Iban
	}
	return nil
}

type isUpdateResponse_Response interface {
	isUpdateResponse_Response()
}

type UpdateResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type UpdateResponse_Iban struct {
	Iban *IBAN `protobuf:"bytes,2,opt,name=iban,proto3,oneof"`
}

func (*UpdateResponse_Error) isUpdateResponse_Response() {}

func (*UpdateResponse_Iban) isUpdateResponse_Response() {}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select *Select `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibans_ibans_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ibans_ibans_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{10}
}

func (x *GetRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetResponse_Error
	//	*GetResponse_Iban
	Response isGetResponse_Response `protobuf_oneof:"response"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibans_ibans_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ibans_ibans_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{11}
}

func (m *GetResponse) GetResponse() isGetResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetResponse) GetIban() *IBAN {
	if x, ok := x.GetResponse().(*GetResponse_Iban); ok {
		return x.Iban
	}
	return nil
}

type isGetResponse_Response interface {
	isGetResponse_Response()
}

type GetResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetResponse_Iban struct {
	Iban *IBAN `protobuf:"bytes,2,opt,name=iban,proto3,oneof"`
}

func (*GetResponse_Error) isGetResponse_Response() {}

func (*GetResponse_Iban) isGetResponse_Response() {}

// GetList will use SQL 'LIKE' instead of '=' for string fields
type GetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country    *countries.GetListRequest  `protobuf:"bytes,1,opt,name=country,proto3,oneof" json:"country,omitempty"`
	Validity   *common.TimestampValueList `protobuf:"bytes,2,opt,name=validity,proto3,oneof" json:"validity,omitempty"`
	Algorithm  *AlgorithmList             `protobuf:"bytes,3,opt,name=algorithm,proto3,oneof" json:"algorithm,omitempty"`
	Format     *string                    `protobuf:"bytes,4,opt,name=format,proto3,oneof" json:"format,omitempty"`
	Weights    *string                    `protobuf:"bytes,5,opt,name=weights,proto3,oneof" json:"weights,omitempty"`
	Modulo     *string                    `protobuf:"bytes,6,opt,name=modulo,proto3,oneof" json:"modulo,omitempty"`
	Complement *string                    `protobuf:"bytes,7,opt,name=complement,proto3,oneof" json:"complement,omitempty"`
	Method     *string                    `protobuf:"bytes,8,opt,name=method,proto3,oneof" json:"method,omitempty"`
	Status     *common.StatusList         `protobuf:"bytes,9,opt,name=status,proto3,oneof" json:"status,omitempty"`
}

func (x *GetListRequest) Reset() {
	*x = GetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibans_ibans_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRequest) ProtoMessage() {}

func (x *GetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ibans_ibans_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRequest.ProtoReflect.Descriptor instead.
func (*GetListRequest) Descriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{12}
}

func (x *GetListRequest) GetCountry() *countries.GetListRequest {
	if x != nil {
		return x.Country
	}
	return nil
}

func (x *GetListRequest) GetValidity() *common.TimestampValueList {
	if x != nil {
		return x.Validity
	}
	return nil
}

func (x *GetListRequest) GetAlgorithm() *AlgorithmList {
	if x != nil {
		return x.Algorithm
	}
	return nil
}

func (x *GetListRequest) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *GetListRequest) GetWeights() string {
	if x != nil && x.Weights != nil {
		return *x.Weights
	}
	return ""
}

func (x *GetListRequest) GetModulo() string {
	if x != nil && x.Modulo != nil {
		return *x.Modulo
	}
	return ""
}

func (x *GetListRequest) GetComplement() string {
	if x != nil && x.Complement != nil {
		return *x.Complement
	}
	return ""
}

func (x *GetListRequest) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *GetListRequest) GetStatus() *common.StatusList {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetListResponse_Error
	//	*GetListResponse_Iban
	Response isGetListResponse_Response `protobuf_oneof:"response"`
}

func (x *GetListResponse) Reset() {
	*x = GetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibans_ibans_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListResponse) ProtoMessage() {}

func (x *GetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ibans_ibans_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListResponse.ProtoReflect.Descriptor instead.
func (*GetListResponse) Descriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{13}
}

func (m *GetListResponse) GetResponse() isGetListResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetListResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetListResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetListResponse) GetIban() *IBAN {
	if x, ok := x.GetResponse().(*GetListResponse_Iban); ok {
		return x.Iban
	}
	return nil
}

type isGetListResponse_Response interface {
	isGetListResponse_Response()
}

type GetListResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetListResponse_Iban struct {
	Iban *IBAN `protobuf:"bytes,2,opt,name=iban,proto3,oneof"`
}

func (*GetListResponse_Error) isGetListResponse_Response() {}

func (*GetListResponse_Iban) isGetListResponse_Response() {}

// A delete request is just an update request with status set to TERMINATED.
type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Select:
	//
	//	*DeleteRequest_ById
	//	*DeleteRequest_ByCountryValidity
	Select isDeleteRequest_Select `protobuf_oneof:"select"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibans_ibans_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ibans_ibans_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{14}
}

func (m *DeleteRequest) GetSelect() isDeleteRequest_Select {
	if m != nil {
		return m.Select
	}
	return nil
}

func (x *DeleteRequest) GetById() string {
	if x, ok := x.GetSelect().(*DeleteRequest_ById); ok {
		return x.ById
	}
	return ""
}

func (x *DeleteRequest) GetByCountryValidity() *CountryValidity {
	if x, ok := x.GetSelect().(*DeleteRequest_ByCountryValidity); ok {
		return x.ByCountryValidity
	}
	return nil
}

type isDeleteRequest_Select interface {
	isDeleteRequest_Select()
}

type DeleteRequest_ById struct {
	ById string `protobuf:"bytes,1,opt,name=by_id,json=byId,proto3,oneof"`
}

type DeleteRequest_ByCountryValidity struct {
	ByCountryValidity *CountryValidity `protobuf:"bytes,2,opt,name=by_country_validity,json=byCountryValidity,proto3,oneof"`
}

func (*DeleteRequest_ById) isDeleteRequest_Select() {}

func (*DeleteRequest_ByCountryValidity) isDeleteRequest_Select() {}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*DeleteResponse_Error
	//	*DeleteResponse_Iban
	Response isDeleteResponse_Response `protobuf_oneof:"response"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibans_ibans_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ibans_ibans_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_ibans_ibans_proto_rawDescGZIP(), []int{15}
}

func (m *DeleteResponse) GetResponse() isDeleteResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeleteResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*DeleteResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DeleteResponse) GetIban() *IBAN {
	if x, ok := x.GetResponse().(*DeleteResponse_Iban); ok {
		return x.Iban
	}
	return nil
}

type isDeleteResponse_Response interface {
	isDeleteResponse_Response()
}

type DeleteResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeleteResponse_Iban struct {
	Iban *IBAN `protobuf:"bytes,2,opt,name=iban,proto3,oneof"`
}

func (*DeleteResponse_Error) isDeleteResponse_Response() {}

func (*DeleteResponse_Iban) isDeleteResponse_Response() {}

var File_ibans_ibans_proto protoreflect.FileDescriptor

var file_ibans_ibans_proto_rawDesc = []byte{
	0x0a, 0x11, 0x69, 0x62, 0x61, 0x6e, 0x73, 0x2f, 0x69, 0x62, 0x61, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x69, 0x62, 0x61, 0x6e, 0x73, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x0d, 0x41, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x69, 0x62, 0x61, 0x6e, 0x73, 0x2e,
	0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x9e, 0x03, 0x0a, 0x04, 0x49, 0x42, 0x41, 0x4e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x2e, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x69, 0x62, 0x61, 0x6e, 0x73, 0x2e, 0x41, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x6f, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x22, 0x27, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x69, 0x62, 0x61, 0x6e, 0x73, 0x2e, 0x49,
	0x42, 0x41, 0x4e, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x79, 0x0a, 0x0f, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x46, 0x72, 0x6f, 0x6d, 0x22, 0x73, 0x0a, 0x06, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x15,
	0x0a, 0x05, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x62, 0x79, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x13, 0x62, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x62, 0x61, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x11, 0x62, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x42,
	0x08, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x2f, 0x0a, 0x0a, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x62, 0x61, 0x6e, 0x73, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xb5, 0x03, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x08, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x69, 0x62, 0x61, 0x6e,
	0x73, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x09, 0x61, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1d,
	0x0a, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x6f, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x66, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x04, 0x69,
	0x62, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x69, 0x62, 0x61, 0x6e,
	0x73, 0x2e, 0x49, 0x42, 0x41, 0x4e, 0x48, 0x00, 0x52, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x42, 0x0a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd4, 0x04, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x05,
	0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x62,
	0x79, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x13, 0x62, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x69, 0x62, 0x61, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x11, 0x62, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x48, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x3b, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52,
	0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x09,
	0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x69, 0x62, 0x61, 0x6e, 0x73, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x48, 0x03, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x08, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x6f, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x66, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x04, 0x69, 0x62,
	0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x69, 0x62, 0x61, 0x6e, 0x73,
	0x2e, 0x49, 0x42, 0x41, 0x4e, 0x48, 0x00, 0x52, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x62, 0x61, 0x6e, 0x73, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x63,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x69, 0x62, 0x61, 0x6e, 0x73, 0x2e, 0x49, 0x42, 0x41, 0x4e, 0x48,
	0x00, 0x52, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xfa, 0x03, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x3b, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x01,
	0x52, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a,
	0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x69, 0x62, 0x61, 0x6e, 0x73, 0x2e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x02, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x6f, 0x88, 0x01, 0x01, 0x12,
	0x23, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88,
	0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x6f, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x67, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x04, 0x69, 0x62,
	0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x69, 0x62, 0x61, 0x6e, 0x73,
	0x2e, 0x49, 0x42, 0x41, 0x4e, 0x48, 0x00, 0x52, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7a, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x05, 0x62, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x62, 0x79, 0x49,
	0x64, 0x12, 0x48, 0x0a, 0x13, 0x62, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x69, 0x62, 0x61, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x11, 0x62, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x66, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21,
	0x0a, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x69,
	0x62, 0x61, 0x6e, 0x73, 0x2e, 0x49, 0x42, 0x41, 0x4e, 0x48, 0x00, 0x52, 0x04, 0x69, 0x62, 0x61,
	0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0xd8, 0x01,
	0x0a, 0x09, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x19, 0x0a, 0x15, 0x41,
	0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49,
	0x54, 0x48, 0x4d, 0x5f, 0x49, 0x53, 0x4f, 0x5f, 0x37, 0x30, 0x36, 0x34, 0x5f, 0x4d, 0x4f, 0x44,
	0x5f, 0x39, 0x37, 0x5f, 0x31, 0x30, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x4c, 0x47, 0x4f,
	0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x49, 0x53, 0x4f, 0x5f, 0x37, 0x30, 0x36, 0x34, 0x5f, 0x4d,
	0x4f, 0x44, 0x5f, 0x39, 0x37, 0x5f, 0x31, 0x30, 0x5f, 0x56, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c,
	0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x49, 0x53, 0x4f, 0x5f, 0x37, 0x30,
	0x36, 0x34, 0x5f, 0x4d, 0x4f, 0x44, 0x5f, 0x31, 0x31, 0x5f, 0x31, 0x30, 0x10, 0x03, 0x12, 0x16,
	0x0a, 0x12, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x57, 0x45, 0x49, 0x47,
	0x48, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49,
	0x54, 0x48, 0x4d, 0x5f, 0x4c, 0x55, 0x48, 0x4e, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x4c,
	0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x4d, 0x10, 0x06, 0x42, 0x67, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x2e,
	0x69, 0x62, 0x61, 0x6e, 0x73, 0x42, 0x0a, 0x49, 0x62, 0x61, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x1a, 0x64, 0x61, 0x76, 0x65, 0x6e, 0x73, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x69, 0x62, 0x61, 0x6e, 0x73, 0xa2,
	0x02, 0x03, 0x49, 0x58, 0x58, 0xaa, 0x02, 0x05, 0x49, 0x62, 0x61, 0x6e, 0x73, 0xca, 0x02, 0x05,
	0x49, 0x62, 0x61, 0x6e, 0x73, 0xe2, 0x02, 0x11, 0x49, 0x62, 0x61, 0x6e, 0x73, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x05, 0x49, 0x62, 0x61, 0x6e,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ibans_ibans_proto_rawDescOnce sync.Once
	file_ibans_ibans_proto_rawDescData = file_ibans_ibans_proto_rawDesc
)

func file_ibans_ibans_proto_rawDescGZIP() []byte {
	file_ibans_ibans_proto_rawDescOnce.Do(func() {
		file_ibans_ibans_proto_rawDescData = protoimpl.X.CompressGZIP(file_ibans_ibans_proto_rawDescData)
	})
	return file_ibans_ibans_proto_rawDescData
}

var file_ibans_ibans_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ibans_ibans_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_ibans_ibans_proto_goTypes = []interface{}{
	(Algorithm)(0),                    // 0: ibans.Algorithm
	(*AlgorithmList)(nil),             // 1: ibans.AlgorithmList
	(*IBAN)(nil),                      // 2: ibans.IBAN
	(*List)(nil),                      // 3: ibans.List
	(*CountryValidity)(nil),           // 4: ibans.CountryValidity
	(*Select)(nil),                    // 5: ibans.Select
	(*SelectList)(nil),                // 6: ibans.SelectList
	(*CreateRequest)(nil),             // 7: ibans.CreateRequest
	(*CreateResponse)(nil),            // 8: ibans.CreateResponse
	(*UpdateRequest)(nil),             // 9: ibans.UpdateRequest
	(*UpdateResponse)(nil),            // 10: ibans.UpdateResponse
	(*GetRequest)(nil),                // 11: ibans.GetRequest
	(*GetResponse)(nil),               // 12: ibans.GetResponse
	(*GetListRequest)(nil),            // 13: ibans.GetListRequest
	(*GetListResponse)(nil),           // 14: ibans.GetListResponse
	(*DeleteRequest)(nil),             // 15: ibans.DeleteRequest
	(*DeleteResponse)(nil),            // 16: ibans.DeleteResponse
	(*countries.Country)(nil),         // 17: countries.Country
	(*timestamppb.Timestamp)(nil),     // 18: google.protobuf.Timestamp
	(common.Status)(0),                // 19: common.Status
	(*countries.Select)(nil),          // 20: countries.Select
	(*common.Error)(nil),              // 21: common.Error
	(*countries.GetListRequest)(nil),  // 22: countries.GetListRequest
	(*common.TimestampValueList)(nil), // 23: common.TimestampValueList
	(*common.StatusList)(nil),         // 24: common.StatusList
}
var file_ibans_ibans_proto_depIdxs = []int32{
	0,  // 0: ibans.AlgorithmList.list:type_name -> ibans.Algorithm
	17, // 1: ibans.IBAN.country:type_name -> countries.Country
	18, // 2: ibans.IBAN.valid_from:type_name -> google.protobuf.Timestamp
	0,  // 3: ibans.IBAN.algorithm:type_name -> ibans.Algorithm
	19, // 4: ibans.IBAN.status:type_name -> common.Status
	2,  // 5: ibans.List.list:type_name -> ibans.IBAN
	20, // 6: ibans.CountryValidity.country:type_name -> countries.Select
	18, // 7: ibans.CountryValidity.valid_from:type_name -> google.protobuf.Timestamp
	4,  // 8: ibans.Select.by_country_validity:type_name -> ibans.CountryValidity
	5,  // 9: ibans.SelectList.list:type_name -> ibans.Select
	20, // 10: ibans.CreateRequest.country:type_name -> countries.Select
	18, // 11: ibans.CreateRequest.validity:type_name -> google.protobuf.Timestamp
	0,  // 12: ibans.CreateRequest.algorithm:type_name -> ibans.Algorithm
	19, // 13: ibans.CreateRequest.status:type_name -> common.Status
	21, // 14: ibans.CreateResponse.error:type_name -> common.Error
	2,  // 15: ibans.CreateResponse.iban:type_name -> ibans.IBAN
	4,  // 16: ibans.UpdateRequest.by_country_validity:type_name -> ibans.CountryValidity
	20, // 17: ibans.UpdateRequest.country:type_name -> countries.Select
	18, // 18: ibans.UpdateRequest.validity:type_name -> google.protobuf.Timestamp
	0,  // 19: ibans.UpdateRequest.algorithm:type_name -> ibans.Algorithm
	19, // 20: ibans.UpdateRequest.status:type_name -> common.Status
	21, // 21: ibans.UpdateResponse.error:type_name -> common.Error
	2,  // 22: ibans.UpdateResponse.iban:type_name -> ibans.IBAN
	5,  // 23: ibans.GetRequest.select:type_name -> ibans.Select
	21, // 24: ibans.GetResponse.error:type_name -> common.Error
	2,  // 25: ibans.GetResponse.iban:type_name -> ibans.IBAN
	22, // 26: ibans.GetListRequest.country:type_name -> countries.GetListRequest
	23, // 27: ibans.GetListRequest.validity:type_name -> common.TimestampValueList
	1,  // 28: ibans.GetListRequest.algorithm:type_name -> ibans.AlgorithmList
	24, // 29: ibans.GetListRequest.status:type_name -> common.StatusList
	21, // 30: ibans.GetListResponse.error:type_name -> common.Error
	2,  // 31: ibans.GetListResponse.iban:type_name -> ibans.IBAN
	4,  // 32: ibans.DeleteRequest.by_country_validity:type_name -> ibans.CountryValidity
	21, // 33: ibans.DeleteResponse.error:type_name -> common.Error
	2,  // 34: ibans.DeleteResponse.iban:type_name -> ibans.IBAN
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_ibans_ibans_proto_init() }
func file_ibans_ibans_proto_init() {
	if File_ibans_ibans_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ibans_ibans_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlgorithmList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibans_ibans_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IBAN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibans_ibans_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibans_ibans_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountryValidity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibans_ibans_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Select); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibans_ibans_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibans_ibans_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibans_ibans_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibans_ibans_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibans_ibans_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibans_ibans_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibans_ibans_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibans_ibans_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibans_ibans_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibans_ibans_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibans_ibans_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ibans_ibans_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_ibans_ibans_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Select_ById)(nil),
		(*Select_ByCountryValidity)(nil),
	}
	file_ibans_ibans_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_ibans_ibans_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*CreateResponse_Error)(nil),
		(*CreateResponse_Iban)(nil),
	}
	file_ibans_ibans_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*UpdateRequest_ById)(nil),
		(*UpdateRequest_ByCountryValidity)(nil),
	}
	file_ibans_ibans_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*UpdateResponse_Error)(nil),
		(*UpdateResponse_Iban)(nil),
	}
	file_ibans_ibans_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*GetResponse_Error)(nil),
		(*GetResponse_Iban)(nil),
	}
	file_ibans_ibans_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_ibans_ibans_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*GetListResponse_Error)(nil),
		(*GetListResponse_Iban)(nil),
	}
	file_ibans_ibans_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*DeleteRequest_ById)(nil),
		(*DeleteRequest_ByCountryValidity)(nil),
	}
	file_ibans_ibans_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*DeleteResponse_Error)(nil),
		(*DeleteResponse_Iban)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ibans_ibans_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ibans_ibans_proto_goTypes,
		DependencyIndexes: file_ibans_ibans_proto_depIdxs,
		EnumInfos:         file_ibans_ibans_proto_enumTypes,
		MessageInfos:      file_ibans_ibans_proto_msgTypes,
	}.Build()
	File_ibans_ibans_proto = out.File
	file_ibans_ibans_proto_rawDesc = nil
	file_ibans_ibans_proto_goTypes = nil
	file_ibans_ibans_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: legalentities/legalentities.proto

package legalentities

import (
	addresses "davensi.com/core/gen/addresses"
	common "davensi.com/core/gen/common"
	contacts "davensi.com/core/gen/contacts"
	countries "davensi.com/core/gen/countries"
	uoms "davensi.com/core/gen/uoms"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_TYPE_UNSPECIFIED Type = 0
	Type_TYPE_DAVENSI     Type = 1
	Type_TYPE_CUSTOMER    Type = 64
	Type_TYPE_PARTNER     Type = 128
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0:   "TYPE_UNSPECIFIED",
		1:   "TYPE_DAVENSI",
		64:  "TYPE_CUSTOMER",
		128: "TYPE_PARTNER",
	}
	Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_DAVENSI":     1,
		"TYPE_CUSTOMER":    64,
		"TYPE_PARTNER":     128,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_legalentities_legalentities_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_legalentities_legalentities_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{0}
}

type TypeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []Type `protobuf:"varint,1,rep,packed,name=list,proto3,enum=legalentities.Type" json:"list,omitempty"`
}

func (x *TypeList) Reset() {
	*x = TypeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeList) ProtoMessage() {}

func (x *TypeList) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeList.ProtoReflect.Descriptor instead.
func (*TypeList) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{0}
}

func (x *TypeList) GetList() []Type {
	if x != nil {
		return x.List
	}
	return nil
}

// Backed by table 'legalentities'
type LegalEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // System Key: id is generated by the server or the database
	Name                      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // Human-Readable Key (unique identifier)
	Type                      Type                   `protobuf:"varint,3,opt,name=type,proto3,enum=legalentities.Type" json:"type,omitempty"`
	IncorporationCountry      *countries.Country     `protobuf:"bytes,4,opt,name=incorporation_country,json=incorporationCountry,proto3" json:"incorporation_country,omitempty"`
	IncorporationLocality     *string                `protobuf:"bytes,5,opt,name=incorporation_locality,json=incorporationLocality,proto3,oneof" json:"incorporation_locality,omitempty"`
	BusinessRegistrationNo    *string                `protobuf:"bytes,6,opt,name=business_registration_no,json=businessRegistrationNo,proto3,oneof" json:"business_registration_no,omitempty"`
	BusinessRegistrationAltNo *string                `protobuf:"bytes,7,opt,name=business_registration_alt_no,json=businessRegistrationAltNo,proto3,oneof" json:"business_registration_alt_no,omitempty"`
	ValidUntil                *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=valid_until,json=validUntil,proto3,oneof" json:"valid_until,omitempty"`
	TaxId                     *string                `protobuf:"bytes,9,opt,name=tax_id,json=taxId,proto3,oneof" json:"tax_id,omitempty"`
	Currency1                 *uoms.UoM              `protobuf:"bytes,10,opt,name=currency1,proto3" json:"currency1,omitempty"`
	Currency2                 *uoms.UoM              `protobuf:"bytes,11,opt,name=currency2,proto3,oneof" json:"currency2,omitempty"`
	Currency3                 *uoms.UoM              `protobuf:"bytes,12,opt,name=currency3,proto3,oneof" json:"currency3,omitempty"`
	// TO-DO: add more fields from table 'legalentities'
	Status    common.Status                 `protobuf:"varint,13,opt,name=status,proto3,enum=common.Status" json:"status,omitempty"`
	Addresses *addresses.LabeledAddressList `protobuf:"bytes,14,opt,name=addresses,proto3,oneof" json:"addresses,omitempty"` // backed by table 'legalentities_addresses'
	Contacts  *contacts.LabeledContactList  `protobuf:"bytes,15,opt,name=contacts,proto3,oneof" json:"contacts,omitempty"`   // backed by table 'legalentities_contacts'
}

func (x *LegalEntity) Reset() {
	*x = LegalEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegalEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegalEntity) ProtoMessage() {}

func (x *LegalEntity) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegalEntity.ProtoReflect.Descriptor instead.
func (*LegalEntity) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{1}
}

func (x *LegalEntity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LegalEntity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LegalEntity) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *LegalEntity) GetIncorporationCountry() *countries.Country {
	if x != nil {
		return x.IncorporationCountry
	}
	return nil
}

func (x *LegalEntity) GetIncorporationLocality() string {
	if x != nil && x.IncorporationLocality != nil {
		return *x.IncorporationLocality
	}
	return ""
}

func (x *LegalEntity) GetBusinessRegistrationNo() string {
	if x != nil && x.BusinessRegistrationNo != nil {
		return *x.BusinessRegistrationNo
	}
	return ""
}

func (x *LegalEntity) GetBusinessRegistrationAltNo() string {
	if x != nil && x.BusinessRegistrationAltNo != nil {
		return *x.BusinessRegistrationAltNo
	}
	return ""
}

func (x *LegalEntity) GetValidUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidUntil
	}
	return nil
}

func (x *LegalEntity) GetTaxId() string {
	if x != nil && x.TaxId != nil {
		return *x.TaxId
	}
	return ""
}

func (x *LegalEntity) GetCurrency1() *uoms.UoM {
	if x != nil {
		return x.Currency1
	}
	return nil
}

func (x *LegalEntity) GetCurrency2() *uoms.UoM {
	if x != nil {
		return x.Currency2
	}
	return nil
}

func (x *LegalEntity) GetCurrency3() *uoms.UoM {
	if x != nil {
		return x.Currency3
	}
	return nil
}

func (x *LegalEntity) GetStatus() common.Status {
	if x != nil {
		return x.Status
	}
	return common.Status(0)
}

func (x *LegalEntity) GetAddresses() *addresses.LabeledAddressList {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *LegalEntity) GetContacts() *contacts.LabeledContactList {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*LegalEntity `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{2}
}

func (x *List) GetList() []*LegalEntity {
	if x != nil {
		return x.List
	}
	return nil
}

type Select struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Select:
	//
	//	*Select_ById
	//	*Select_ByName
	Select isSelect_Select `protobuf_oneof:"select"`
}

func (x *Select) Reset() {
	*x = Select{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Select) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Select) ProtoMessage() {}

func (x *Select) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Select.ProtoReflect.Descriptor instead.
func (*Select) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{3}
}

func (m *Select) GetSelect() isSelect_Select {
	if m != nil {
		return m.Select
	}
	return nil
}

func (x *Select) GetById() string {
	if x, ok := x.GetSelect().(*Select_ById); ok {
		return x.ById
	}
	return ""
}

func (x *Select) GetByName() string {
	if x, ok := x.GetSelect().(*Select_ByName); ok {
		return x.ByName
	}
	return ""
}

type isSelect_Select interface {
	isSelect_Select()
}

type Select_ById struct {
	ById string `protobuf:"bytes,1,opt,name=by_id,json=byId,proto3,oneof"`
}

type Select_ByName struct {
	ByName string `protobuf:"bytes,2,opt,name=by_name,json=byName,proto3,oneof"`
}

func (*Select_ById) isSelect_Select() {}

func (*Select_ByName) isSelect_Select() {}

type SelectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Select `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SelectList) Reset() {
	*x = SelectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectList) ProtoMessage() {}

func (x *SelectList) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectList.ProtoReflect.Descriptor instead.
func (*SelectList) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{4}
}

func (x *SelectList) GetList() []*Select {
	if x != nil {
		return x.List
	}
	return nil
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is generated by the server or the database
	Name                      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                      Type                   `protobuf:"varint,2,opt,name=type,proto3,enum=legalentities.Type" json:"type,omitempty"`
	IncorporationCountry      *countries.Select      `protobuf:"bytes,3,opt,name=incorporation_country,json=incorporationCountry,proto3" json:"incorporation_country,omitempty"` // Country is required
	IncorporationLocality     *string                `protobuf:"bytes,4,opt,name=incorporation_locality,json=incorporationLocality,proto3,oneof" json:"incorporation_locality,omitempty"`
	BusinessRegistrationNo    *string                `protobuf:"bytes,5,opt,name=business_registration_no,json=businessRegistrationNo,proto3,oneof" json:"business_registration_no,omitempty"`
	BusinessRegistrationAltNo *string                `protobuf:"bytes,6,opt,name=business_registration_alt_no,json=businessRegistrationAltNo,proto3,oneof" json:"business_registration_alt_no,omitempty"`
	ValidUntil                *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=valid_until,json=validUntil,proto3,oneof" json:"valid_until,omitempty"`
	TaxId                     *string                `protobuf:"bytes,8,opt,name=tax_id,json=taxId,proto3,oneof" json:"tax_id,omitempty"`
	Currency1                 *uoms.Select           `protobuf:"bytes,9,opt,name=currency1,proto3" json:"currency1,omitempty"` // At least one currency must be specified
	Currency2                 *uoms.Select           `protobuf:"bytes,10,opt,name=currency2,proto3,oneof" json:"currency2,omitempty"`
	Currency3                 *uoms.Select           `protobuf:"bytes,11,opt,name=currency3,proto3,oneof" json:"currency3,omitempty"`
	Status                    *common.Status         `protobuf:"varint,12,opt,name=status,proto3,enum=common.Status,oneof" json:"status,omitempty"` // Default: STATUS_UNSPECIFIED, which means  needs to be activated after creation
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{5}
}

func (x *CreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRequest) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *CreateRequest) GetIncorporationCountry() *countries.Select {
	if x != nil {
		return x.IncorporationCountry
	}
	return nil
}

func (x *CreateRequest) GetIncorporationLocality() string {
	if x != nil && x.IncorporationLocality != nil {
		return *x.IncorporationLocality
	}
	return ""
}

func (x *CreateRequest) GetBusinessRegistrationNo() string {
	if x != nil && x.BusinessRegistrationNo != nil {
		return *x.BusinessRegistrationNo
	}
	return ""
}

func (x *CreateRequest) GetBusinessRegistrationAltNo() string {
	if x != nil && x.BusinessRegistrationAltNo != nil {
		return *x.BusinessRegistrationAltNo
	}
	return ""
}

func (x *CreateRequest) GetValidUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidUntil
	}
	return nil
}

func (x *CreateRequest) GetTaxId() string {
	if x != nil && x.TaxId != nil {
		return *x.TaxId
	}
	return ""
}

func (x *CreateRequest) GetCurrency1() *uoms.Select {
	if x != nil {
		return x.Currency1
	}
	return nil
}

func (x *CreateRequest) GetCurrency2() *uoms.Select {
	if x != nil {
		return x.Currency2
	}
	return nil
}

func (x *CreateRequest) GetCurrency3() *uoms.Select {
	if x != nil {
		return x.Currency3
	}
	return nil
}

func (x *CreateRequest) GetStatus() common.Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return common.Status(0)
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*CreateResponse_Error
	//	*CreateResponse_LegalEntity
	Response isCreateResponse_Response `protobuf_oneof:"response"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{6}
}

func (m *CreateResponse) GetResponse() isCreateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CreateResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*CreateResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CreateResponse) GetLegalEntity() *LegalEntity {
	if x, ok := x.GetResponse().(*CreateResponse_LegalEntity); ok {
		return x.LegalEntity
	}
	return nil
}

type isCreateResponse_Response interface {
	isCreateResponse_Response()
}

type CreateResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateResponse_LegalEntity struct {
	LegalEntity *LegalEntity `protobuf:"bytes,2,opt,name=legal_entity,json=legalEntity,proto3,oneof"`
}

func (*CreateResponse_Error) isCreateResponse_Response() {}

func (*CreateResponse_LegalEntity) isCreateResponse_Response() {}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select                    *Select                `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
	Name                      *string                `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Type                      *Type                  `protobuf:"varint,4,opt,name=type,proto3,enum=legalentities.Type,oneof" json:"type,omitempty"`
	IncorporationCountry      *countries.Select      `protobuf:"bytes,5,opt,name=incorporation_country,json=incorporationCountry,proto3,oneof" json:"incorporation_country,omitempty"`
	IncorporationLocality     *string                `protobuf:"bytes,6,opt,name=incorporation_locality,json=incorporationLocality,proto3,oneof" json:"incorporation_locality,omitempty"`
	BusinessRegistrationNo    *string                `protobuf:"bytes,7,opt,name=business_registration_no,json=businessRegistrationNo,proto3,oneof" json:"business_registration_no,omitempty"`
	BusinessRegistrationAltNo *string                `protobuf:"bytes,8,opt,name=business_registration_alt_no,json=businessRegistrationAltNo,proto3,oneof" json:"business_registration_alt_no,omitempty"`
	ValidUntil                *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=valid_until,json=validUntil,proto3,oneof" json:"valid_until,omitempty"`
	TaxId                     *string                `protobuf:"bytes,10,opt,name=tax_id,json=taxId,proto3,oneof" json:"tax_id,omitempty"`
	Currency1                 *uoms.Select           `protobuf:"bytes,11,opt,name=currency1,proto3,oneof" json:"currency1,omitempty"`
	Currency2                 *uoms.Select           `protobuf:"bytes,12,opt,name=currency2,proto3,oneof" json:"currency2,omitempty"`
	Currency3                 *uoms.Select           `protobuf:"bytes,13,opt,name=currency3,proto3,oneof" json:"currency3,omitempty"`
	Status                    *common.Status         `protobuf:"varint,14,opt,name=status,proto3,enum=common.Status,oneof" json:"status,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *UpdateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateRequest) GetType() Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *UpdateRequest) GetIncorporationCountry() *countries.Select {
	if x != nil {
		return x.IncorporationCountry
	}
	return nil
}

func (x *UpdateRequest) GetIncorporationLocality() string {
	if x != nil && x.IncorporationLocality != nil {
		return *x.IncorporationLocality
	}
	return ""
}

func (x *UpdateRequest) GetBusinessRegistrationNo() string {
	if x != nil && x.BusinessRegistrationNo != nil {
		return *x.BusinessRegistrationNo
	}
	return ""
}

func (x *UpdateRequest) GetBusinessRegistrationAltNo() string {
	if x != nil && x.BusinessRegistrationAltNo != nil {
		return *x.BusinessRegistrationAltNo
	}
	return ""
}

func (x *UpdateRequest) GetValidUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidUntil
	}
	return nil
}

func (x *UpdateRequest) GetTaxId() string {
	if x != nil && x.TaxId != nil {
		return *x.TaxId
	}
	return ""
}

func (x *UpdateRequest) GetCurrency1() *uoms.Select {
	if x != nil {
		return x.Currency1
	}
	return nil
}

func (x *UpdateRequest) GetCurrency2() *uoms.Select {
	if x != nil {
		return x.Currency2
	}
	return nil
}

func (x *UpdateRequest) GetCurrency3() *uoms.Select {
	if x != nil {
		return x.Currency3
	}
	return nil
}

func (x *UpdateRequest) GetStatus() common.Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return common.Status(0)
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*UpdateResponse_Error
	//	*UpdateResponse_LegalEntity
	Response isUpdateResponse_Response `protobuf_oneof:"response"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{8}
}

func (m *UpdateResponse) GetResponse() isUpdateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UpdateResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*UpdateResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *UpdateResponse) GetLegalEntity() *LegalEntity {
	if x, ok := x.GetResponse().(*UpdateResponse_LegalEntity); ok {
		return x.LegalEntity
	}
	return nil
}

type isUpdateResponse_Response interface {
	isUpdateResponse_Response()
}

type UpdateResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type UpdateResponse_LegalEntity struct {
	LegalEntity *LegalEntity `protobuf:"bytes,2,opt,name=legal_entity,json=legalEntity,proto3,oneof"`
}

func (*UpdateResponse_Error) isUpdateResponse_Response() {}

func (*UpdateResponse_LegalEntity) isUpdateResponse_Response() {}

// GetRequest is expected to return a single value.
type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select        *Select `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
	WithAddresses *bool   `protobuf:"varint,3,opt,name=with_addresses,json=withAddresses,proto3,oneof" json:"with_addresses,omitempty"`
	WithContacts  *bool   `protobuf:"varint,4,opt,name=with_contacts,json=withContacts,proto3,oneof" json:"with_contacts,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{9}
}

func (x *GetRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *GetRequest) GetWithAddresses() bool {
	if x != nil && x.WithAddresses != nil {
		return *x.WithAddresses
	}
	return false
}

func (x *GetRequest) GetWithContacts() bool {
	if x != nil && x.WithContacts != nil {
		return *x.WithContacts
	}
	return false
}

// An error is returned if there is more than one record found.
type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetResponse_Error
	//	*GetResponse_LegalEntity
	Response isGetResponse_Response `protobuf_oneof:"response"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{10}
}

func (m *GetResponse) GetResponse() isGetResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetResponse) GetLegalEntity() *LegalEntity {
	if x, ok := x.GetResponse().(*GetResponse_LegalEntity); ok {
		return x.LegalEntity
	}
	return nil
}

type isGetResponse_Response interface {
	isGetResponse_Response()
}

type GetResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetResponse_LegalEntity struct {
	LegalEntity *LegalEntity `protobuf:"bytes,2,opt,name=legal_entity,json=legalEntity,proto3,oneof"`
}

func (*GetResponse_Error) isGetResponse_Response() {}

func (*GetResponse_LegalEntity) isGetResponse_Response() {}

// GetList will use SQL 'LIKE' instead of '=' for string fields
type GetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                      *string                    `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Type                      *TypeList                  `protobuf:"bytes,2,opt,name=type,proto3,oneof" json:"type,omitempty"`
	IncorporationCountry      *countries.GetListRequest  `protobuf:"bytes,3,opt,name=incorporation_country,json=incorporationCountry,proto3,oneof" json:"incorporation_country,omitempty"`
	IncorporationLocality     *string                    `protobuf:"bytes,4,opt,name=incorporation_locality,json=incorporationLocality,proto3,oneof" json:"incorporation_locality,omitempty"`
	BusinessRegistrationNo    *string                    `protobuf:"bytes,5,opt,name=business_registration_no,json=businessRegistrationNo,proto3,oneof" json:"business_registration_no,omitempty"`
	BusinessRegistrationAltNo *string                    `protobuf:"bytes,6,opt,name=business_registration_alt_no,json=businessRegistrationAltNo,proto3,oneof" json:"business_registration_alt_no,omitempty"`
	ValidUntilFrom            *common.TimestampValueList `protobuf:"bytes,7,opt,name=valid_until_from,json=validUntilFrom,proto3,oneof" json:"valid_until_from,omitempty"`
	ValidUntilTo              *common.TimestampValueList `protobuf:"bytes,8,opt,name=valid_until_to,json=validUntilTo,proto3,oneof" json:"valid_until_to,omitempty"`
	TaxId                     *string                    `protobuf:"bytes,9,opt,name=tax_id,json=taxId,proto3,oneof" json:"tax_id,omitempty"`
	Currency1                 *uoms.GetListRequest       `protobuf:"bytes,10,opt,name=currency1,proto3,oneof" json:"currency1,omitempty"`
	Currency2                 *uoms.GetListRequest       `protobuf:"bytes,11,opt,name=currency2,proto3,oneof" json:"currency2,omitempty"`
	Currency3                 *uoms.GetListRequest       `protobuf:"bytes,12,opt,name=currency3,proto3,oneof" json:"currency3,omitempty"`
	Status                    *common.StatusList         `protobuf:"bytes,13,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Addresses                 *addresses.GetListRequest  `protobuf:"bytes,14,opt,name=addresses,proto3,oneof" json:"addresses,omitempty"` // "with_addresses" is implicit when specifying address search criteria
	Contacts                  *contacts.GetListRequest   `protobuf:"bytes,15,opt,name=contacts,proto3,oneof" json:"contacts,omitempty"`   // "with_contacts" is implicit when specifying contact search criteria
}

func (x *GetListRequest) Reset() {
	*x = GetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRequest) ProtoMessage() {}

func (x *GetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRequest.ProtoReflect.Descriptor instead.
func (*GetListRequest) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{11}
}

func (x *GetListRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetListRequest) GetType() *TypeList {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *GetListRequest) GetIncorporationCountry() *countries.GetListRequest {
	if x != nil {
		return x.IncorporationCountry
	}
	return nil
}

func (x *GetListRequest) GetIncorporationLocality() string {
	if x != nil && x.IncorporationLocality != nil {
		return *x.IncorporationLocality
	}
	return ""
}

func (x *GetListRequest) GetBusinessRegistrationNo() string {
	if x != nil && x.BusinessRegistrationNo != nil {
		return *x.BusinessRegistrationNo
	}
	return ""
}

func (x *GetListRequest) GetBusinessRegistrationAltNo() string {
	if x != nil && x.BusinessRegistrationAltNo != nil {
		return *x.BusinessRegistrationAltNo
	}
	return ""
}

func (x *GetListRequest) GetValidUntilFrom() *common.TimestampValueList {
	if x != nil {
		return x.ValidUntilFrom
	}
	return nil
}

func (x *GetListRequest) GetValidUntilTo() *common.TimestampValueList {
	if x != nil {
		return x.ValidUntilTo
	}
	return nil
}

func (x *GetListRequest) GetTaxId() string {
	if x != nil && x.TaxId != nil {
		return *x.TaxId
	}
	return ""
}

func (x *GetListRequest) GetCurrency1() *uoms.GetListRequest {
	if x != nil {
		return x.Currency1
	}
	return nil
}

func (x *GetListRequest) GetCurrency2() *uoms.GetListRequest {
	if x != nil {
		return x.Currency2
	}
	return nil
}

func (x *GetListRequest) GetCurrency3() *uoms.GetListRequest {
	if x != nil {
		return x.Currency3
	}
	return nil
}

func (x *GetListRequest) GetStatus() *common.StatusList {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetListRequest) GetAddresses() *addresses.GetListRequest {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *GetListRequest) GetContacts() *contacts.GetListRequest {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type GetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetListResponse_Error
	//	*GetListResponse_LegalEntity
	Response isGetListResponse_Response `protobuf_oneof:"response"`
}

func (x *GetListResponse) Reset() {
	*x = GetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListResponse) ProtoMessage() {}

func (x *GetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListResponse.ProtoReflect.Descriptor instead.
func (*GetListResponse) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{12}
}

func (m *GetListResponse) GetResponse() isGetListResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetListResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetListResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetListResponse) GetLegalEntity() *LegalEntity {
	if x, ok := x.GetResponse().(*GetListResponse_LegalEntity); ok {
		return x.LegalEntity
	}
	return nil
}

type isGetListResponse_Response interface {
	isGetListResponse_Response()
}

type GetListResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetListResponse_LegalEntity struct {
	LegalEntity *LegalEntity `protobuf:"bytes,2,opt,name=legal_entity,json=legalEntity,proto3,oneof"`
}

func (*GetListResponse_Error) isGetListResponse_Response() {}

func (*GetListResponse_LegalEntity) isGetListResponse_Response() {}

// A delete request is just an update request with status set to TERMINATED
type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select *Select `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*DeleteResponse_Error
	//	*DeleteResponse_LegalEntity
	Response isDeleteResponse_Response `protobuf_oneof:"response"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{14}
}

func (m *DeleteResponse) GetResponse() isDeleteResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeleteResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*DeleteResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DeleteResponse) GetLegalEntity() *LegalEntity {
	if x, ok := x.GetResponse().(*DeleteResponse_LegalEntity); ok {
		return x.LegalEntity
	}
	return nil
}

type isDeleteResponse_Response interface {
	isDeleteResponse_Response()
}

type DeleteResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeleteResponse_LegalEntity struct {
	LegalEntity *LegalEntity `protobuf:"bytes,2,opt,name=legal_entity,json=legalEntity,proto3,oneof"`
}

func (*DeleteResponse_Error) isDeleteResponse_Response() {}

func (*DeleteResponse_LegalEntity) isDeleteResponse_Response() {}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address *addresses.LabeledAddress `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{15}
}

func (x *Address) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Address) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Address) GetAddress() *addresses.LabeledAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

type AddressList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Addresses *addresses.LabeledAddressList `protobuf:"bytes,3,opt,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *AddressList) Reset() {
	*x = AddressList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressList) ProtoMessage() {}

func (x *AddressList) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressList.ProtoReflect.Descriptor instead.
func (*AddressList) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{16}
}

func (x *AddressList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddressList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddressList) GetAddresses() *addresses.LabeledAddressList {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type SetAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegalEntity *Select                          `protobuf:"bytes,1,opt,name=legal_entity,json=legalEntity,proto3" json:"legal_entity,omitempty"`
	Addresses   *addresses.SetLabeledAddressList `protobuf:"bytes,2,opt,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *SetAddressesRequest) Reset() {
	*x = SetAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAddressesRequest) ProtoMessage() {}

func (x *SetAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAddressesRequest.ProtoReflect.Descriptor instead.
func (*SetAddressesRequest) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{17}
}

func (x *SetAddressesRequest) GetLegalEntity() *Select {
	if x != nil {
		return x.LegalEntity
	}
	return nil
}

func (x *SetAddressesRequest) GetAddresses() *addresses.SetLabeledAddressList {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type SetAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*SetAddressesResponse_Error
	//	*SetAddressesResponse_Addresses
	Response isSetAddressesResponse_Response `protobuf_oneof:"response"`
}

func (x *SetAddressesResponse) Reset() {
	*x = SetAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAddressesResponse) ProtoMessage() {}

func (x *SetAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAddressesResponse.ProtoReflect.Descriptor instead.
func (*SetAddressesResponse) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{18}
}

func (m *SetAddressesResponse) GetResponse() isSetAddressesResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SetAddressesResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*SetAddressesResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SetAddressesResponse) GetAddresses() *AddressList {
	if x, ok := x.GetResponse().(*SetAddressesResponse_Addresses); ok {
		return x.Addresses
	}
	return nil
}

type isSetAddressesResponse_Response interface {
	isSetAddressesResponse_Response()
}

type SetAddressesResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SetAddressesResponse_Addresses struct {
	Addresses *AddressList `protobuf:"bytes,2,opt,name=addresses,proto3,oneof"`
}

func (*SetAddressesResponse_Error) isSetAddressesResponse_Response() {}

func (*SetAddressesResponse_Addresses) isSetAddressesResponse_Response() {}

type AddAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegalEntity *Select                          `protobuf:"bytes,1,opt,name=legal_entity,json=legalEntity,proto3" json:"legal_entity,omitempty"`
	Addresses   *addresses.SetLabeledAddressList `protobuf:"bytes,2,opt,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *AddAddressesRequest) Reset() {
	*x = AddAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAddressesRequest) ProtoMessage() {}

func (x *AddAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAddressesRequest.ProtoReflect.Descriptor instead.
func (*AddAddressesRequest) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{19}
}

func (x *AddAddressesRequest) GetLegalEntity() *Select {
	if x != nil {
		return x.LegalEntity
	}
	return nil
}

func (x *AddAddressesRequest) GetAddresses() *addresses.SetLabeledAddressList {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type AddAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*AddAddressesResponse_Error
	//	*AddAddressesResponse_Addresses
	Response isAddAddressesResponse_Response `protobuf_oneof:"response"`
}

func (x *AddAddressesResponse) Reset() {
	*x = AddAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAddressesResponse) ProtoMessage() {}

func (x *AddAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAddressesResponse.ProtoReflect.Descriptor instead.
func (*AddAddressesResponse) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{20}
}

func (m *AddAddressesResponse) GetResponse() isAddAddressesResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *AddAddressesResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*AddAddressesResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *AddAddressesResponse) GetAddresses() *AddressList {
	if x, ok := x.GetResponse().(*AddAddressesResponse_Addresses); ok {
		return x.Addresses
	}
	return nil
}

type isAddAddressesResponse_Response interface {
	isAddAddressesResponse_Response()
}

type AddAddressesResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type AddAddressesResponse_Addresses struct {
	Addresses *AddressList `protobuf:"bytes,2,opt,name=addresses,proto3,oneof"`
}

func (*AddAddressesResponse_Error) isAddAddressesResponse_Response() {}

func (*AddAddressesResponse_Addresses) isAddAddressesResponse_Response() {}

type UpdateAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegalEntity *Select                                `protobuf:"bytes,1,opt,name=legal_entity,json=legalEntity,proto3" json:"legal_entity,omitempty"`
	Address     *addresses.UpdateLabeledAddressRequest `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *UpdateAddressRequest) Reset() {
	*x = UpdateAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddressRequest) ProtoMessage() {}

func (x *UpdateAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddressRequest.ProtoReflect.Descriptor instead.
func (*UpdateAddressRequest) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateAddressRequest) GetLegalEntity() *Select {
	if x != nil {
		return x.LegalEntity
	}
	return nil
}

func (x *UpdateAddressRequest) GetAddress() *addresses.UpdateLabeledAddressRequest {
	if x != nil {
		return x.Address
	}
	return nil
}

type UpdateAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*UpdateAddressResponse_Error
	//	*UpdateAddressResponse_Address
	Response isUpdateAddressResponse_Response `protobuf_oneof:"response"`
}

func (x *UpdateAddressResponse) Reset() {
	*x = UpdateAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddressResponse) ProtoMessage() {}

func (x *UpdateAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddressResponse.ProtoReflect.Descriptor instead.
func (*UpdateAddressResponse) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{22}
}

func (m *UpdateAddressResponse) GetResponse() isUpdateAddressResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UpdateAddressResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*UpdateAddressResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *UpdateAddressResponse) GetAddress() *Address {
	if x, ok := x.GetResponse().(*UpdateAddressResponse_Address); ok {
		return x.Address
	}
	return nil
}

type isUpdateAddressResponse_Response interface {
	isUpdateAddressResponse_Response()
}

type UpdateAddressResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type UpdateAddressResponse_Address struct {
	Address *Address `protobuf:"bytes,2,opt,name=address,proto3,oneof"`
}

func (*UpdateAddressResponse_Error) isUpdateAddressResponse_Response() {}

func (*UpdateAddressResponse_Address) isUpdateAddressResponse_Response() {}

type LabelList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []string `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *LabelList) Reset() {
	*x = LabelList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelList) ProtoMessage() {}

func (x *LabelList) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelList.ProtoReflect.Descriptor instead.
func (*LabelList) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{23}
}

func (x *LabelList) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

// A remove addresses request is just an address update request with status set to TERMINATED in table 'legalentities_addresses'
type RemoveAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegalEntity *Select    `protobuf:"bytes,1,opt,name=legal_entity,json=legalEntity,proto3" json:"legal_entity,omitempty"`
	Labels      *LabelList `protobuf:"bytes,2,opt,name=labels,proto3" json:"labels,omitempty"`
}

func (x *RemoveAddressesRequest) Reset() {
	*x = RemoveAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAddressesRequest) ProtoMessage() {}

func (x *RemoveAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAddressesRequest.ProtoReflect.Descriptor instead.
func (*RemoveAddressesRequest) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{24}
}

func (x *RemoveAddressesRequest) GetLegalEntity() *Select {
	if x != nil {
		return x.LegalEntity
	}
	return nil
}

func (x *RemoveAddressesRequest) GetLabels() *LabelList {
	if x != nil {
		return x.Labels
	}
	return nil
}

type RemoveAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*RemoveAddressesResponse_Error
	//	*RemoveAddressesResponse_Addresses
	Response isRemoveAddressesResponse_Response `protobuf_oneof:"response"`
}

func (x *RemoveAddressesResponse) Reset() {
	*x = RemoveAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAddressesResponse) ProtoMessage() {}

func (x *RemoveAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAddressesResponse.ProtoReflect.Descriptor instead.
func (*RemoveAddressesResponse) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{25}
}

func (m *RemoveAddressesResponse) GetResponse() isRemoveAddressesResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RemoveAddressesResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*RemoveAddressesResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *RemoveAddressesResponse) GetAddresses() *AddressList {
	if x, ok := x.GetResponse().(*RemoveAddressesResponse_Addresses); ok {
		return x.Addresses
	}
	return nil
}

type isRemoveAddressesResponse_Response interface {
	isRemoveAddressesResponse_Response()
}

type RemoveAddressesResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type RemoveAddressesResponse_Addresses struct {
	Addresses *AddressList `protobuf:"bytes,2,opt,name=addresses,proto3,oneof"`
}

func (*RemoveAddressesResponse_Error) isRemoveAddressesResponse_Response() {}

func (*RemoveAddressesResponse_Addresses) isRemoveAddressesResponse_Response() {}

type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Contact *contacts.LabeledContact `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{26}
}

func (x *Contact) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Contact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Contact) GetContact() *contacts.LabeledContact {
	if x != nil {
		return x.Contact
	}
	return nil
}

type ContactList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Contacts *contacts.LabeledContactList `protobuf:"bytes,3,opt,name=contacts,proto3" json:"contacts,omitempty"`
}

func (x *ContactList) Reset() {
	*x = ContactList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactList) ProtoMessage() {}

func (x *ContactList) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactList.ProtoReflect.Descriptor instead.
func (*ContactList) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{27}
}

func (x *ContactList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContactList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContactList) GetContacts() *contacts.LabeledContactList {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type SetContactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegalEntity *Select                         `protobuf:"bytes,1,opt,name=legal_entity,json=legalEntity,proto3" json:"legal_entity,omitempty"`
	Contacts    *contacts.SetLabeledContactList `protobuf:"bytes,2,opt,name=contacts,proto3" json:"contacts,omitempty"`
}

func (x *SetContactsRequest) Reset() {
	*x = SetContactsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetContactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetContactsRequest) ProtoMessage() {}

func (x *SetContactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetContactsRequest.ProtoReflect.Descriptor instead.
func (*SetContactsRequest) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{28}
}

func (x *SetContactsRequest) GetLegalEntity() *Select {
	if x != nil {
		return x.LegalEntity
	}
	return nil
}

func (x *SetContactsRequest) GetContacts() *contacts.SetLabeledContactList {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type SetContactsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*SetContactsResponse_Error
	//	*SetContactsResponse_Contacts
	Response isSetContactsResponse_Response `protobuf_oneof:"response"`
}

func (x *SetContactsResponse) Reset() {
	*x = SetContactsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetContactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetContactsResponse) ProtoMessage() {}

func (x *SetContactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetContactsResponse.ProtoReflect.Descriptor instead.
func (*SetContactsResponse) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{29}
}

func (m *SetContactsResponse) GetResponse() isSetContactsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SetContactsResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*SetContactsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SetContactsResponse) GetContacts() *ContactList {
	if x, ok := x.GetResponse().(*SetContactsResponse_Contacts); ok {
		return x.Contacts
	}
	return nil
}

type isSetContactsResponse_Response interface {
	isSetContactsResponse_Response()
}

type SetContactsResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SetContactsResponse_Contacts struct {
	Contacts *ContactList `protobuf:"bytes,2,opt,name=contacts,proto3,oneof"`
}

func (*SetContactsResponse_Error) isSetContactsResponse_Response() {}

func (*SetContactsResponse_Contacts) isSetContactsResponse_Response() {}

type AddContactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegalEntity *Select                         `protobuf:"bytes,1,opt,name=legal_entity,json=legalEntity,proto3" json:"legal_entity,omitempty"`
	Contacts    *contacts.SetLabeledContactList `protobuf:"bytes,2,opt,name=contacts,proto3" json:"contacts,omitempty"`
}

func (x *AddContactsRequest) Reset() {
	*x = AddContactsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddContactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContactsRequest) ProtoMessage() {}

func (x *AddContactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContactsRequest.ProtoReflect.Descriptor instead.
func (*AddContactsRequest) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{30}
}

func (x *AddContactsRequest) GetLegalEntity() *Select {
	if x != nil {
		return x.LegalEntity
	}
	return nil
}

func (x *AddContactsRequest) GetContacts() *contacts.SetLabeledContactList {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type AddContactsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*AddContactsResponse_Error
	//	*AddContactsResponse_Contacts
	Response isAddContactsResponse_Response `protobuf_oneof:"response"`
}

func (x *AddContactsResponse) Reset() {
	*x = AddContactsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddContactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContactsResponse) ProtoMessage() {}

func (x *AddContactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContactsResponse.ProtoReflect.Descriptor instead.
func (*AddContactsResponse) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{31}
}

func (m *AddContactsResponse) GetResponse() isAddContactsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *AddContactsResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*AddContactsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *AddContactsResponse) GetContacts() *ContactList {
	if x, ok := x.GetResponse().(*AddContactsResponse_Contacts); ok {
		return x.Contacts
	}
	return nil
}

type isAddContactsResponse_Response interface {
	isAddContactsResponse_Response()
}

type AddContactsResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type AddContactsResponse_Contacts struct {
	Contacts *ContactList `protobuf:"bytes,2,opt,name=contacts,proto3,oneof"`
}

func (*AddContactsResponse_Error) isAddContactsResponse_Response() {}

func (*AddContactsResponse_Contacts) isAddContactsResponse_Response() {}

type UpdateContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegalEntity *Select                               `protobuf:"bytes,1,opt,name=legal_entity,json=legalEntity,proto3" json:"legal_entity,omitempty"`
	Contact     *contacts.UpdateLabeledContactRequest `protobuf:"bytes,2,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *UpdateContactRequest) Reset() {
	*x = UpdateContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContactRequest) ProtoMessage() {}

func (x *UpdateContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContactRequest.ProtoReflect.Descriptor instead.
func (*UpdateContactRequest) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateContactRequest) GetLegalEntity() *Select {
	if x != nil {
		return x.LegalEntity
	}
	return nil
}

func (x *UpdateContactRequest) GetContact() *contacts.UpdateLabeledContactRequest {
	if x != nil {
		return x.Contact
	}
	return nil
}

type UpdateContactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*UpdateContactResponse_Error
	//	*UpdateContactResponse_Contact
	Response isUpdateContactResponse_Response `protobuf_oneof:"response"`
}

func (x *UpdateContactResponse) Reset() {
	*x = UpdateContactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateContactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContactResponse) ProtoMessage() {}

func (x *UpdateContactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContactResponse.ProtoReflect.Descriptor instead.
func (*UpdateContactResponse) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{33}
}

func (m *UpdateContactResponse) GetResponse() isUpdateContactResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UpdateContactResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*UpdateContactResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *UpdateContactResponse) GetContact() *Contact {
	if x, ok := x.GetResponse().(*UpdateContactResponse_Contact); ok {
		return x.Contact
	}
	return nil
}

type isUpdateContactResponse_Response interface {
	isUpdateContactResponse_Response()
}

type UpdateContactResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type UpdateContactResponse_Contact struct {
	Contact *Contact `protobuf:"bytes,2,opt,name=contact,proto3,oneof"`
}

func (*UpdateContactResponse_Error) isUpdateContactResponse_Response() {}

func (*UpdateContactResponse_Contact) isUpdateContactResponse_Response() {}

// A remove contacts request is just a contact update request with status set to TERMINATED in table 'legalentities_contacts'
type RemoveContactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegalEntity *Select    `protobuf:"bytes,1,opt,name=legal_entity,json=legalEntity,proto3" json:"legal_entity,omitempty"`
	Labels      *LabelList `protobuf:"bytes,2,opt,name=labels,proto3" json:"labels,omitempty"`
}

func (x *RemoveContactsRequest) Reset() {
	*x = RemoveContactsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveContactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveContactsRequest) ProtoMessage() {}

func (x *RemoveContactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveContactsRequest.ProtoReflect.Descriptor instead.
func (*RemoveContactsRequest) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{34}
}

func (x *RemoveContactsRequest) GetLegalEntity() *Select {
	if x != nil {
		return x.LegalEntity
	}
	return nil
}

func (x *RemoveContactsRequest) GetLabels() *LabelList {
	if x != nil {
		return x.Labels
	}
	return nil
}

type RemoveContactsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*RemoveContactsResponse_Error
	//	*RemoveContactsResponse_Contacts
	Response isRemoveContactsResponse_Response `protobuf_oneof:"response"`
}

func (x *RemoveContactsResponse) Reset() {
	*x = RemoveContactsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legalentities_legalentities_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveContactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveContactsResponse) ProtoMessage() {}

func (x *RemoveContactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_legalentities_legalentities_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveContactsResponse.ProtoReflect.Descriptor instead.
func (*RemoveContactsResponse) Descriptor() ([]byte, []int) {
	return file_legalentities_legalentities_proto_rawDescGZIP(), []int{35}
}

func (m *RemoveContactsResponse) GetResponse() isRemoveContactsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RemoveContactsResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*RemoveContactsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *RemoveContactsResponse) GetContacts() *ContactList {
	if x, ok := x.GetResponse().(*RemoveContactsResponse_Contacts); ok {
		return x.Contacts
	}
	return nil
}

type isRemoveContactsResponse_Response interface {
	isRemoveContactsResponse_Response()
}

type RemoveContactsResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type RemoveContactsResponse_Contacts struct {
	Contacts *ContactList `protobuf:"bytes,2,opt,name=contacts,proto3,oneof"`
}

func (*RemoveContactsResponse_Error) isRemoveContactsResponse_Response() {}

func (*RemoveContactsResponse_Contacts) isRemoveContactsResponse_Response() {}

var File_legalentities_legalentities_proto protoreflect.FileDescriptor

var file_legalentities_legalentities_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f,
	0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x1a, 0x19, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x75, 0x6f, 0x6d, 0x73, 0x2f, 0x75, 0x6f, 0x6d, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x9b, 0x07, 0x0a, 0x0b, 0x4c,
	0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6c,
	0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6f, 0x72,
	0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x69, 0x6e, 0x63, 0x6f,
	0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x3a, 0x0a, 0x16, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x15, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x18,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x16, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x1c, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x19, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x74, 0x4e, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x40, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x48, 0x03, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x74, 0x61, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x05, 0x74, 0x61, 0x78, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x27, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x31, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x55, 0x6f, 0x4d, 0x52, 0x09, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x31, 0x12, 0x2c, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75, 0x6f,
	0x6d, 0x73, 0x2e, 0x55, 0x6f, 0x4d, 0x48, 0x05, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x32, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x33, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75, 0x6f, 0x6d, 0x73,
	0x2e, 0x55, 0x6f, 0x4d, 0x48, 0x06, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x33, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x07,
	0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3d,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x08,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x19, 0x0a,
	0x17, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x6c, 0x74, 0x5f, 0x6e, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x61, 0x78, 0x5f, 0x69,
	0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x32, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x33, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0x36, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x4c,
	0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x44, 0x0a, 0x06, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x15, 0x0a, 0x05, 0x62, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x62, 0x79, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x62, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x37, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x89, 0x06, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x46,
	0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x14, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x3a, 0x0a, 0x16, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x70,
	0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x15, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x70,
	0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x3d, 0x0a, 0x18, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x16, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x44, 0x0a, 0x1c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x74, 0x5f, 0x6e,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x19, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6c, 0x74, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x03, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x74, 0x61, 0x78,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x05, 0x74, 0x61, 0x78,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x31, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x31, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x32, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x48, 0x05, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x32, 0x88,
	0x01, 0x01, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x33, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x48, 0x06, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x33,
	0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x48, 0x07, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x19, 0x0a, 0x17, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x1b, 0x0a, 0x19, 0x5f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x74, 0x5f, 0x6e, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x61,
	0x78, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x32, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x33,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x65,
	0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x67, 0x61,
	0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x86, 0x07, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x48,
	0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x15, 0x69, 0x6e,
	0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x02, 0x52, 0x14,
	0x69, 0x6e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x16, 0x69, 0x6e, 0x63, 0x6f, 0x72,
	0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x15, 0x69, 0x6e, 0x63, 0x6f, 0x72,
	0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x18, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x16, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x88,
	0x01, 0x01, 0x12, 0x44, 0x0a, 0x1c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x74, 0x5f,
	0x6e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x19, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6c, 0x74, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x06, 0x52, 0x0a, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x74, 0x61,
	0x78, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x05, 0x74, 0x61,
	0x78, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x6f, 0x6d, 0x73,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x08, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x31, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x6f, 0x6d,
	0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x09, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x32, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x6f,
	0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x0a, 0x52, 0x09, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x33, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x0b, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x69, 0x6e, 0x63,
	0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x1b, 0x0a,
	0x19, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x74, 0x5f, 0x6e, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x74, 0x61, 0x78, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x31, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x32, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x33,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x65,
	0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x67, 0x61,
	0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x12, 0x2a, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0d, 0x77, 0x69, 0x74, 0x68,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x77, 0x69,
	0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xfc, 0x08, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x65, 0x67, 0x61,
	0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a,
	0x15, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x02, 0x52, 0x14, 0x69, 0x6e, 0x63, 0x6f, 0x72,
	0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x3a, 0x0a, 0x16, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x15, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x3d,
	0x0a, 0x18, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x16, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a,
	0x1c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x19, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x74, 0x4e, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74,
	0x69, 0x6c, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x06, 0x52, 0x0e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x45,
	0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x74, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x07, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c,
	0x54, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x74, 0x61, 0x78, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x05, 0x74, 0x61, 0x78, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x31, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x09, 0x52, 0x09, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x31, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x0a, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x32,
	0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x33,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x0b, 0x52, 0x09,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x33, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x0d, 0x52, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x0e, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x69, 0x6e, 0x63,
	0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x1b, 0x0a,
	0x19, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x74, 0x5f, 0x6e, 0x6f, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c,
	0x5f, 0x74, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x61, 0x78, 0x5f, 0x69, 0x64, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x31, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x32, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x33, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0x85,
	0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x0c, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x4c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x6c,
	0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x3f, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65,
	0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x6e, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x22, 0x8f, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42,
	0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x13,
	0x41, 0x64, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x65, 0x67, 0x61,
	0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3e, 0x0a,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x85, 0x01,
	0x0a, 0x14, 0x41, 0x64, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3a, 0x0a,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38,
	0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x7e, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x65,
	0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x0a, 0x09, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x16,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c,
	0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x30, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x22, 0x6b, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0x8b, 0x01,
	0x0a, 0x12, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3b,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x13,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c,
	0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x8b, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c,
	0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0x82,
	0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x38, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c,
	0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x22, 0x7e, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x38, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x0b,
	0x6c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x65,
	0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x85, 0x01,
	0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x38, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x54, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x56, 0x45,
	0x4e, 0x53, 0x49, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x55,
	0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x10, 0x40, 0x12, 0x11, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x10, 0x80, 0x01, 0x42, 0x9f, 0x01, 0x0a, 0x11,
	0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x42, 0x12, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x22, 0x64, 0x61, 0x76, 0x65, 0x6e, 0x73, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6c, 0x65,
	0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x4c, 0x58,
	0x58, 0xaa, 0x02, 0x0d, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0xca, 0x02, 0x0d, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0xe2, 0x02, 0x19, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0d,
	0x4c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_legalentities_legalentities_proto_rawDescOnce sync.Once
	file_legalentities_legalentities_proto_rawDescData = file_legalentities_legalentities_proto_rawDesc
)

func file_legalentities_legalentities_proto_rawDescGZIP() []byte {
	file_legalentities_legalentities_proto_rawDescOnce.Do(func() {
		file_legalentities_legalentities_proto_rawDescData = protoimpl.X.CompressGZIP(file_legalentities_legalentities_proto_rawDescData)
	})
	return file_legalentities_legalentities_proto_rawDescData
}

var file_legalentities_legalentities_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_legalentities_legalentities_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_legalentities_legalentities_proto_goTypes = []interface{}{
	(Type)(0),                                     // 0: legalentities.Type
	(*TypeList)(nil),                              // 1: legalentities.TypeList
	(*LegalEntity)(nil),                           // 2: legalentities.LegalEntity
	(*List)(nil),                                  // 3: legalentities.List
	(*Select)(nil),                                // 4: legalentities.Select
	(*SelectList)(nil),                            // 5: legalentities.SelectList
	(*CreateRequest)(nil),                         // 6: legalentities.CreateRequest
	(*CreateResponse)(nil),                        // 7: legalentities.CreateResponse
	(*UpdateRequest)(nil),                         // 8: legalentities.UpdateRequest
	(*UpdateResponse)(nil),                        // 9: legalentities.UpdateResponse
	(*GetRequest)(nil),                            // 10: legalentities.GetRequest
	(*GetResponse)(nil),                           // 11: legalentities.GetResponse
	(*GetListRequest)(nil),                        // 12: legalentities.GetListRequest
	(*GetListResponse)(nil),                       // 13: legalentities.GetListResponse
	(*DeleteRequest)(nil),                         // 14: legalentities.DeleteRequest
	(*DeleteResponse)(nil),                        // 15: legalentities.DeleteResponse
	(*Address)(nil),                               // 16: legalentities.Address
	(*AddressList)(nil),                           // 17: legalentities.AddressList
	(*SetAddressesRequest)(nil),                   // 18: legalentities.SetAddressesRequest
	(*SetAddressesResponse)(nil),                  // 19: legalentities.SetAddressesResponse
	(*AddAddressesRequest)(nil),                   // 20: legalentities.AddAddressesRequest
	(*AddAddressesResponse)(nil),                  // 21: legalentities.AddAddressesResponse
	(*UpdateAddressRequest)(nil),                  // 22: legalentities.UpdateAddressRequest
	(*UpdateAddressResponse)(nil),                 // 23: legalentities.UpdateAddressResponse
	(*LabelList)(nil),                             // 24: legalentities.LabelList
	(*RemoveAddressesRequest)(nil),                // 25: legalentities.RemoveAddressesRequest
	(*RemoveAddressesResponse)(nil),               // 26: legalentities.RemoveAddressesResponse
	(*Contact)(nil),                               // 27: legalentities.Contact
	(*ContactList)(nil),                           // 28: legalentities.ContactList
	(*SetContactsRequest)(nil),                    // 29: legalentities.SetContactsRequest
	(*SetContactsResponse)(nil),                   // 30: legalentities.SetContactsResponse
	(*AddContactsRequest)(nil),                    // 31: legalentities.AddContactsRequest
	(*AddContactsResponse)(nil),                   // 32: legalentities.AddContactsResponse
	(*UpdateContactRequest)(nil),                  // 33: legalentities.UpdateContactRequest
	(*UpdateContactResponse)(nil),                 // 34: legalentities.UpdateContactResponse
	(*RemoveContactsRequest)(nil),                 // 35: legalentities.RemoveContactsRequest
	(*RemoveContactsResponse)(nil),                // 36: legalentities.RemoveContactsResponse
	(*countries.Country)(nil),                     // 37: countries.Country
	(*timestamppb.Timestamp)(nil),                 // 38: google.protobuf.Timestamp
	(*uoms.UoM)(nil),                              // 39: uoms.UoM
	(common.Status)(0),                            // 40: common.Status
	(*addresses.LabeledAddressList)(nil),          // 41: addresses.LabeledAddressList
	(*contacts.LabeledContactList)(nil),           // 42: contacts.LabeledContactList
	(*countries.Select)(nil),                      // 43: countries.Select
	(*uoms.Select)(nil),                           // 44: uoms.Select
	(*common.Error)(nil),                          // 45: common.Error
	(*countries.GetListRequest)(nil),              // 46: countries.GetListRequest
	(*common.TimestampValueList)(nil),             // 47: common.TimestampValueList
	(*uoms.GetListRequest)(nil),                   // 48: uoms.GetListRequest
	(*common.StatusList)(nil),                     // 49: common.StatusList
	(*addresses.GetListRequest)(nil),              // 50: addresses.GetListRequest
	(*contacts.GetListRequest)(nil),               // 51: contacts.GetListRequest
	(*addresses.LabeledAddress)(nil),              // 52: addresses.LabeledAddress
	(*addresses.SetLabeledAddressList)(nil),       // 53: addresses.SetLabeledAddressList
	(*addresses.UpdateLabeledAddressRequest)(nil), // 54: addresses.UpdateLabeledAddressRequest
	(*contacts.LabeledContact)(nil),               // 55: contacts.LabeledContact
	(*contacts.SetLabeledContactList)(nil),        // 56: contacts.SetLabeledContactList
	(*contacts.UpdateLabeledContactRequest)(nil),  // 57: contacts.UpdateLabeledContactRequest
}
var file_legalentities_legalentities_proto_depIdxs = []int32{
	0,  // 0: legalentities.TypeList.list:type_name -> legalentities.Type
	0,  // 1: legalentities.LegalEntity.type:type_name -> legalentities.Type
	37, // 2: legalentities.LegalEntity.incorporation_country:type_name -> countries.Country
	38, // 3: legalentities.LegalEntity.valid_until:type_name -> google.protobuf.Timestamp
	39, // 4: legalentities.LegalEntity.currency1:type_name -> uoms.UoM
	39, // 5: legalentities.LegalEntity.currency2:type_name -> uoms.UoM
	39, // 6: legalentities.LegalEntity.currency3:type_name -> uoms.UoM
	40, // 7: legalentities.LegalEntity.status:type_name -> common.Status
	41, // 8: legalentities.LegalEntity.addresses:type_name -> addresses.LabeledAddressList
	42, // 9: legalentities.LegalEntity.contacts:type_name -> contacts.LabeledContactList
	2,  // 10: legalentities.List.list:type_name -> legalentities.LegalEntity
	4,  // 11: legalentities.SelectList.list:type_name -> legalentities.Select
	0,  // 12: legalentities.CreateRequest.type:type_name -> legalentities.Type
	43, // 13: legalentities.CreateRequest.incorporation_country:type_name -> countries.Select
	38, // 14: legalentities.CreateRequest.valid_until:type_name -> google.protobuf.Timestamp
	44, // 15: legalentities.CreateRequest.currency1:type_name -> uoms.Select
	44, // 16: legalentities.CreateRequest.currency2:type_name -> uoms.Select
	44, // 17: legalentities.CreateRequest.currency3:type_name -> uoms.Select
	40, // 18: legalentities.CreateRequest.status:type_name -> common.Status
	45, // 19: legalentities.CreateResponse.error:type_name -> common.Error
	2,  // 20: legalentities.CreateResponse.legal_entity:type_name -> legalentities.LegalEntity
	4,  // 21: legalentities.UpdateRequest.select:type_name -> legalentities.Select
	0,  // 22: legalentities.UpdateRequest.type:type_name -> legalentities.Type
	43, // 23: legalentities.UpdateRequest.incorporation_country:type_name -> countries.Select
	38, // 24: legalentities.UpdateRequest.valid_until:type_name -> google.protobuf.Timestamp
	44, // 25: legalentities.UpdateRequest.currency1:type_name -> uoms.Select
	44, // 26: legalentities.UpdateRequest.currency2:type_name -> uoms.Select
	44, // 27: legalentities.UpdateRequest.currency3:type_name -> uoms.Select
	40, // 28: legalentities.UpdateRequest.status:type_name -> common.Status
	45, // 29: legalentities.UpdateResponse.error:type_name -> common.Error
	2,  // 30: legalentities.UpdateResponse.legal_entity:type_name -> legalentities.LegalEntity
	4,  // 31: legalentities.GetRequest.select:type_name -> legalentities.Select
	45, // 32: legalentities.GetResponse.error:type_name -> common.Error
	2,  // 33: legalentities.GetResponse.legal_entity:type_name -> legalentities.LegalEntity
	1,  // 34: legalentities.GetListRequest.type:type_name -> legalentities.TypeList
	46, // 35: legalentities.GetListRequest.incorporation_country:type_name -> countries.GetListRequest
	47, // 36: legalentities.GetListRequest.valid_until_from:type_name -> common.TimestampValueList
	47, // 37: legalentities.GetListRequest.valid_until_to:type_name -> common.TimestampValueList
	48, // 38: legalentities.GetListRequest.currency1:type_name -> uoms.GetListRequest
	48, // 39: legalentities.GetListRequest.currency2:type_name -> uoms.GetListRequest
	48, // 40: legalentities.GetListRequest.currency3:type_name -> uoms.GetListRequest
	49, // 41: legalentities.GetListRequest.status:type_name -> common.StatusList
	50, // 42: legalentities.GetListRequest.addresses:type_name -> addresses.GetListRequest
	51, // 43: legalentities.GetListRequest.contacts:type_name -> contacts.GetListRequest
	45, // 44: legalentities.GetListResponse.error:type_name -> common.Error
	2,  // 45: legalentities.GetListResponse.legal_entity:type_name -> legalentities.LegalEntity
	4,  // 46: legalentities.DeleteRequest.select:type_name -> legalentities.Select
	45, // 47: legalentities.DeleteResponse.error:type_name -> common.Error
	2,  // 48: legalentities.DeleteResponse.legal_entity:type_name -> legalentities.LegalEntity
	52, // 49: legalentities.Address.address:type_name -> addresses.LabeledAddress
	41, // 50: legalentities.AddressList.addresses:type_name -> addresses.LabeledAddressList
	4,  // 51: legalentities.SetAddressesRequest.legal_entity:type_name -> legalentities.Select
	53, // 52: legalentities.SetAddressesRequest.addresses:type_name -> addresses.SetLabeledAddressList
	45, // 53: legalentities.SetAddressesResponse.error:type_name -> common.Error
	17, // 54: legalentities.SetAddressesResponse.addresses:type_name -> legalentities.AddressList
	4,  // 55: legalentities.AddAddressesRequest.legal_entity:type_name -> legalentities.Select
	53, // 56: legalentities.AddAddressesRequest.addresses:type_name -> addresses.SetLabeledAddressList
	45, // 57: legalentities.AddAddressesResponse.error:type_name -> common.Error
	17, // 58: legalentities.AddAddressesResponse.addresses:type_name -> legalentities.AddressList
	4,  // 59: legalentities.UpdateAddressRequest.legal_entity:type_name -> legalentities.Select
	54, // 60: legalentities.UpdateAddressRequest.address:type_name -> addresses.UpdateLabeledAddressRequest
	45, // 61: legalentities.UpdateAddressResponse.error:type_name -> common.Error
	16, // 62: legalentities.UpdateAddressResponse.address:type_name -> legalentities.Address
	4,  // 63: legalentities.RemoveAddressesRequest.legal_entity:type_name -> legalentities.Select
	24, // 64: legalentities.RemoveAddressesRequest.labels:type_name -> legalentities.LabelList
	45, // 65: legalentities.RemoveAddressesResponse.error:type_name -> common.Error
	17, // 66: legalentities.RemoveAddressesResponse.addresses:type_name -> legalentities.AddressList
	55, // 67: legalentities.Contact.contact:type_name -> contacts.LabeledContact
	42, // 68: legalentities.ContactList.contacts:type_name -> contacts.LabeledContactList
	4,  // 69: legalentities.SetContactsRequest.legal_entity:type_name -> legalentities.Select
	56, // 70: legalentities.SetContactsRequest.contacts:type_name -> contacts.SetLabeledContactList
	45, // 71: legalentities.SetContactsResponse.error:type_name -> common.Error
	28, // 72: legalentities.SetContactsResponse.contacts:type_name -> legalentities.ContactList
	4,  // 73: legalentities.AddContactsRequest.legal_entity:type_name -> legalentities.Select
	56, // 74: legalentities.AddContactsRequest.contacts:type_name -> contacts.SetLabeledContactList
	45, // 75: legalentities.AddContactsResponse.error:type_name -> common.Error
	28, // 76: legalentities.AddContactsResponse.contacts:type_name -> legalentities.ContactList
	4,  // 77: legalentities.UpdateContactRequest.legal_entity:type_name -> legalentities.Select
	57, // 78: legalentities.UpdateContactRequest.contact:type_name -> contacts.UpdateLabeledContactRequest
	45, // 79: legalentities.UpdateContactResponse.error:type_name -> common.Error
	27, // 80: legalentities.UpdateContactResponse.contact:type_name -> legalentities.Contact
	4,  // 81: legalentities.RemoveContactsRequest.legal_entity:type_name -> legalentities.Select
	24, // 82: legalentities.RemoveContactsRequest.labels:type_name -> legalentities.LabelList
	45, // 83: legalentities.RemoveContactsResponse.error:type_name -> common.Error
	28, // 84: legalentities.RemoveContactsResponse.contacts:type_name -> legalentities.ContactList
	85, // [85:85] is the sub-list for method output_type
	85, // [85:85] is the sub-list for method input_type
	85, // [85:85] is the sub-list for extension type_name
	85, // [85:85] is the sub-list for extension extendee
	0,  // [0:85] is the sub-list for field type_name
}

func init() { file_legalentities_legalentities_proto_init() }
func file_legalentities_legalentities_proto_init() {
	if File_legalentities_legalentities_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_legalentities_legalentities_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegalEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Select); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetContactsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetContactsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddContactsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddContactsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateContactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveContactsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legalentities_legalentities_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveContactsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_legalentities_legalentities_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_legalentities_legalentities_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Select_ById)(nil),
		(*Select_ByName)(nil),
	}
	file_legalentities_legalentities_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_legalentities_legalentities_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*CreateResponse_Error)(nil),
		(*CreateResponse_LegalEntity)(nil),
	}
	file_legalentities_legalentities_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_legalentities_legalentities_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*UpdateResponse_Error)(nil),
		(*UpdateResponse_LegalEntity)(nil),
	}
	file_legalentities_legalentities_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_legalentities_legalentities_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*GetResponse_Error)(nil),
		(*GetResponse_LegalEntity)(nil),
	}
	file_legalentities_legalentities_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_legalentities_legalentities_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*GetListResponse_Error)(nil),
		(*GetListResponse_LegalEntity)(nil),
	}
	file_legalentities_legalentities_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*DeleteResponse_Error)(nil),
		(*DeleteResponse_LegalEntity)(nil),
	}
	file_legalentities_legalentities_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*SetAddressesResponse_Error)(nil),
		(*SetAddressesResponse_Addresses)(nil),
	}
	file_legalentities_legalentities_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*AddAddressesResponse_Error)(nil),
		(*AddAddressesResponse_Addresses)(nil),
	}
	file_legalentities_legalentities_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*UpdateAddressResponse_Error)(nil),
		(*UpdateAddressResponse_Address)(nil),
	}
	file_legalentities_legalentities_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*RemoveAddressesResponse_Error)(nil),
		(*RemoveAddressesResponse_Addresses)(nil),
	}
	file_legalentities_legalentities_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*SetContactsResponse_Error)(nil),
		(*SetContactsResponse_Contacts)(nil),
	}
	file_legalentities_legalentities_proto_msgTypes[31].OneofWrappers = []interface{}{
		(*AddContactsResponse_Error)(nil),
		(*AddContactsResponse_Contacts)(nil),
	}
	file_legalentities_legalentities_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*UpdateContactResponse_Error)(nil),
		(*UpdateContactResponse_Contact)(nil),
	}
	file_legalentities_legalentities_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*RemoveContactsResponse_Error)(nil),
		(*RemoveContactsResponse_Contacts)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_legalentities_legalentities_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_legalentities_legalentities_proto_goTypes,
		DependencyIndexes: file_legalentities_legalentities_proto_depIdxs,
		EnumInfos:         file_legalentities_legalentities_proto_enumTypes,
		MessageInfos:      file_legalentities_legalentities_proto_msgTypes,
	}.Build()
	File_legalentities_legalentities_proto = out.File
	file_legalentities_legalentities_proto_rawDesc = nil
	file_legalentities_legalentities_proto_goTypes = nil
	file_legalentities_legalentities_proto_depIdxs = nil
}

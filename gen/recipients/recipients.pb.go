// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: recipients/recipients.proto

package recipients

import (
	common "davensi.com/core/gen/common"
	legalentities "davensi.com/core/gen/legalentities"
	orgs "davensi.com/core/gen/orgs"
	users "davensi.com/core/gen/users"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_TYPE_UNSPECIFIED      Type = 0
	Type_TYPE_DV_FIAT_ACCOUNT  Type = 1
	Type_TYPE_DV_CRYPTO_WALLET Type = 2
	Type_TYPE_DV_SUBACCOUNT    Type = 3
	Type_TYPE_DV_BOT           Type = 4
	Type_TYPE_CEX_ACCOUNT      Type = 8
	Type_TYPE_BANK_ACCOUNT     Type = 16
	Type_TYPE_DEFI_WALLET      Type = 32
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0:  "TYPE_UNSPECIFIED",
		1:  "TYPE_DV_FIAT_ACCOUNT",
		2:  "TYPE_DV_CRYPTO_WALLET",
		3:  "TYPE_DV_SUBACCOUNT",
		4:  "TYPE_DV_BOT",
		8:  "TYPE_CEX_ACCOUNT",
		16: "TYPE_BANK_ACCOUNT",
		32: "TYPE_DEFI_WALLET",
	}
	Type_value = map[string]int32{
		"TYPE_UNSPECIFIED":      0,
		"TYPE_DV_FIAT_ACCOUNT":  1,
		"TYPE_DV_CRYPTO_WALLET": 2,
		"TYPE_DV_SUBACCOUNT":    3,
		"TYPE_DV_BOT":           4,
		"TYPE_CEX_ACCOUNT":      8,
		"TYPE_BANK_ACCOUNT":     16,
		"TYPE_DEFI_WALLET":      32,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_recipients_recipients_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_recipients_recipients_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{0}
}

type TypeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []Type `protobuf:"varint,1,rep,packed,name=list,proto3,enum=recipients.Type" json:"list,omitempty"`
}

func (x *TypeList) Reset() {
	*x = TypeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeList) ProtoMessage() {}

func (x *TypeList) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeList.ProtoReflect.Descriptor instead.
func (*TypeList) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{0}
}

func (x *TypeList) GetList() []Type {
	if x != nil {
		return x.List
	}
	return nil
}

// Backed by table 'recipients'
type Recipient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                            // System Key: id is generated by the server or the database
	LegalEntity *legalentities.LegalEntity `protobuf:"bytes,2,opt,name=legal_entity,json=legalEntity,proto3,oneof" json:"legal_entity,omitempty"` // legal_entity + user + label form the Human-Readable Key (unique identifier)
	User        *users.User                `protobuf:"bytes,3,opt,name=user,proto3,oneof" json:"user,omitempty"`                                  // legal_entity + user + label form the Human-Readable Key (unique identifier)
	Label       string                     `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`                                      // legal_entity + user + label form the Human-Readable Key (unique identifier)
	Type        Type                       `protobuf:"varint,5,opt,name=type,proto3,enum=recipients.Type" json:"type,omitempty"`
	Org         *orgs.Org                  `protobuf:"bytes,6,opt,name=org,proto3,oneof" json:"org,omitempty"`
	Status      common.Status              `protobuf:"varint,7,opt,name=status,proto3,enum=common.Status" json:"status,omitempty"`
}

func (x *Recipient) Reset() {
	*x = Recipient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recipient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipient) ProtoMessage() {}

func (x *Recipient) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipient.ProtoReflect.Descriptor instead.
func (*Recipient) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{1}
}

func (x *Recipient) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Recipient) GetLegalEntity() *legalentities.LegalEntity {
	if x != nil {
		return x.LegalEntity
	}
	return nil
}

func (x *Recipient) GetUser() *users.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Recipient) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Recipient) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *Recipient) GetOrg() *orgs.Org {
	if x != nil {
		return x.Org
	}
	return nil
}

func (x *Recipient) GetStatus() common.Status {
	if x != nil {
		return x.Status
	}
	return common.Status(0)
}

type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Recipient `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{2}
}

func (x *List) GetList() []*Recipient {
	if x != nil {
		return x.List
	}
	return nil
}

type LegalEntityUserLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegalEntity *legalentities.Select `protobuf:"bytes,1,opt,name=legal_entity,json=legalEntity,proto3,oneof" json:"legal_entity,omitempty"` // At least one of legal_entity and user must be specified
	User        *users.Select         `protobuf:"bytes,2,opt,name=user,proto3,oneof" json:"user,omitempty"`                                  // At least one of legal_entity and user must be specified
	Label       string                `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *LegalEntityUserLabel) Reset() {
	*x = LegalEntityUserLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegalEntityUserLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegalEntityUserLabel) ProtoMessage() {}

func (x *LegalEntityUserLabel) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegalEntityUserLabel.ProtoReflect.Descriptor instead.
func (*LegalEntityUserLabel) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{3}
}

func (x *LegalEntityUserLabel) GetLegalEntity() *legalentities.Select {
	if x != nil {
		return x.LegalEntity
	}
	return nil
}

func (x *LegalEntityUserLabel) GetUser() *users.Select {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LegalEntityUserLabel) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type Select struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Select:
	//
	//	*Select_ById
	//	*Select_ByLegalEntityUserLabel
	Select isSelect_Select `protobuf_oneof:"select"`
}

func (x *Select) Reset() {
	*x = Select{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Select) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Select) ProtoMessage() {}

func (x *Select) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Select.ProtoReflect.Descriptor instead.
func (*Select) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{4}
}

func (m *Select) GetSelect() isSelect_Select {
	if m != nil {
		return m.Select
	}
	return nil
}

func (x *Select) GetById() string {
	if x, ok := x.GetSelect().(*Select_ById); ok {
		return x.ById
	}
	return ""
}

func (x *Select) GetByLegalEntityUserLabel() *LegalEntityUserLabel {
	if x, ok := x.GetSelect().(*Select_ByLegalEntityUserLabel); ok {
		return x.ByLegalEntityUserLabel
	}
	return nil
}

type isSelect_Select interface {
	isSelect_Select()
}

type Select_ById struct {
	ById string `protobuf:"bytes,1,opt,name=by_id,json=byId,proto3,oneof"`
}

type Select_ByLegalEntityUserLabel struct {
	ByLegalEntityUserLabel *LegalEntityUserLabel `protobuf:"bytes,2,opt,name=by_legal_entity_user_label,json=byLegalEntityUserLabel,proto3,oneof"`
}

func (*Select_ById) isSelect_Select() {}

func (*Select_ByLegalEntityUserLabel) isSelect_Select() {}

type SelectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Select `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SelectList) Reset() {
	*x = SelectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectList) ProtoMessage() {}

func (x *SelectList) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectList.ProtoReflect.Descriptor instead.
func (*SelectList) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{5}
}

func (x *SelectList) GetList() []*Select {
	if x != nil {
		return x.List
	}
	return nil
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is generated by the server or the database
	LegalEntity *legalentities.Select `protobuf:"bytes,1,opt,name=legal_entity,json=legalEntity,proto3,oneof" json:"legal_entity,omitempty"` // At least one of legal_entity and user must be specified
	User        *users.Select         `protobuf:"bytes,2,opt,name=user,proto3,oneof" json:"user,omitempty"`                                  // At least one of legal_entity and user must be specified
	Label       string                `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Type        *Type                 `protobuf:"varint,4,opt,name=type,proto3,enum=recipients.Type,oneof" json:"type,omitempty"` // Default:  STATUS_UNSPECIFIED
	Org         *orgs.Select          `protobuf:"bytes,5,opt,name=org,proto3,oneof" json:"org,omitempty"`
	Status      *common.Status        `protobuf:"varint,6,opt,name=status,proto3,enum=common.Status,oneof" json:"status,omitempty"` // Default: STATUS_UNSPECIFIED, which means Recipient needs to be activated after creation
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{6}
}

func (x *CreateRequest) GetLegalEntity() *legalentities.Select {
	if x != nil {
		return x.LegalEntity
	}
	return nil
}

func (x *CreateRequest) GetUser() *users.Select {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *CreateRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *CreateRequest) GetType() Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *CreateRequest) GetOrg() *orgs.Select {
	if x != nil {
		return x.Org
	}
	return nil
}

func (x *CreateRequest) GetStatus() common.Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return common.Status(0)
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*CreateResponse_Error
	//	*CreateResponse_Recipient
	Response isCreateResponse_Response `protobuf_oneof:"response"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{7}
}

func (m *CreateResponse) GetResponse() isCreateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CreateResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*CreateResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CreateResponse) GetRecipient() *Recipient {
	if x, ok := x.GetResponse().(*CreateResponse_Recipient); ok {
		return x.Recipient
	}
	return nil
}

type isCreateResponse_Response interface {
	isCreateResponse_Response()
}

type CreateResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateResponse_Recipient struct {
	Recipient *Recipient `protobuf:"bytes,2,opt,name=recipient,proto3,oneof"`
}

func (*CreateResponse_Error) isCreateResponse_Response() {}

func (*CreateResponse_Recipient) isCreateResponse_Response() {}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select      *Select               `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
	LegalEntity *legalentities.Select `protobuf:"bytes,2,opt,name=legal_entity,json=legalEntity,proto3,oneof" json:"legal_entity,omitempty"`
	User        *users.Select         `protobuf:"bytes,3,opt,name=user,proto3,oneof" json:"user,omitempty"`
	Label       *string               `protobuf:"bytes,4,opt,name=label,proto3,oneof" json:"label,omitempty"`
	Type        *Type                 `protobuf:"varint,5,opt,name=type,proto3,enum=recipients.Type,oneof" json:"type,omitempty"`
	Org         *orgs.Select          `protobuf:"bytes,6,opt,name=org,proto3,oneof" json:"org,omitempty"`
	Status      *common.Status        `protobuf:"varint,7,opt,name=status,proto3,enum=common.Status,oneof" json:"status,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *UpdateRequest) GetLegalEntity() *legalentities.Select {
	if x != nil {
		return x.LegalEntity
	}
	return nil
}

func (x *UpdateRequest) GetUser() *users.Select {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UpdateRequest) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *UpdateRequest) GetType() Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *UpdateRequest) GetOrg() *orgs.Select {
	if x != nil {
		return x.Org
	}
	return nil
}

func (x *UpdateRequest) GetStatus() common.Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return common.Status(0)
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*UpdateResponse_Error
	//	*UpdateResponse_Recipient
	Response isUpdateResponse_Response `protobuf_oneof:"response"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{9}
}

func (m *UpdateResponse) GetResponse() isUpdateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UpdateResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*UpdateResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *UpdateResponse) GetRecipient() *Recipient {
	if x, ok := x.GetResponse().(*UpdateResponse_Recipient); ok {
		return x.Recipient
	}
	return nil
}

type isUpdateResponse_Response interface {
	isUpdateResponse_Response()
}

type UpdateResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type UpdateResponse_Recipient struct {
	Recipient *Recipient `protobuf:"bytes,2,opt,name=recipient,proto3,oneof"`
}

func (*UpdateResponse_Error) isUpdateResponse_Response() {}

func (*UpdateResponse_Recipient) isUpdateResponse_Response() {}

// GetRequest is expected to return a single value.
type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select *Select `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{10}
}

func (x *GetRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

// An error is returned if there is more than one record found.
type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetResponse_Error
	//	*GetResponse_Recipient
	Response isGetResponse_Response `protobuf_oneof:"response"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{11}
}

func (m *GetResponse) GetResponse() isGetResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetResponse) GetRecipient() *Recipient {
	if x, ok := x.GetResponse().(*GetResponse_Recipient); ok {
		return x.Recipient
	}
	return nil
}

type isGetResponse_Response interface {
	isGetResponse_Response()
}

type GetResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetResponse_Recipient struct {
	Recipient *Recipient `protobuf:"bytes,2,opt,name=recipient,proto3,oneof"`
}

func (*GetResponse_Error) isGetResponse_Response() {}

func (*GetResponse_Recipient) isGetResponse_Response() {}

// GetList will use SQL 'LIKE' instead of '=' for string fields
type GetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegalEntity *legalentities.GetListRequest `protobuf:"bytes,1,opt,name=legal_entity,json=legalEntity,proto3,oneof" json:"legal_entity,omitempty"`
	User        *users.GetListRequest         `protobuf:"bytes,2,opt,name=user,proto3,oneof" json:"user,omitempty"`
	Label       *string                       `protobuf:"bytes,3,opt,name=label,proto3,oneof" json:"label,omitempty"`
	Type        *TypeList                     `protobuf:"bytes,4,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Org         *orgs.GetListRequest          `protobuf:"bytes,5,opt,name=org,proto3,oneof" json:"org,omitempty"`
	Status      *common.StatusList            `protobuf:"bytes,6,opt,name=status,proto3,oneof" json:"status,omitempty"`
}

func (x *GetListRequest) Reset() {
	*x = GetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRequest) ProtoMessage() {}

func (x *GetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRequest.ProtoReflect.Descriptor instead.
func (*GetListRequest) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{12}
}

func (x *GetListRequest) GetLegalEntity() *legalentities.GetListRequest {
	if x != nil {
		return x.LegalEntity
	}
	return nil
}

func (x *GetListRequest) GetUser() *users.GetListRequest {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetListRequest) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *GetListRequest) GetType() *TypeList {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *GetListRequest) GetOrg() *orgs.GetListRequest {
	if x != nil {
		return x.Org
	}
	return nil
}

func (x *GetListRequest) GetStatus() *common.StatusList {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetListResponse_Error
	//	*GetListResponse_Recipient
	Response isGetListResponse_Response `protobuf_oneof:"response"`
}

func (x *GetListResponse) Reset() {
	*x = GetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListResponse) ProtoMessage() {}

func (x *GetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListResponse.ProtoReflect.Descriptor instead.
func (*GetListResponse) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{13}
}

func (m *GetListResponse) GetResponse() isGetListResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetListResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetListResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetListResponse) GetRecipient() *Recipient {
	if x, ok := x.GetResponse().(*GetListResponse_Recipient); ok {
		return x.Recipient
	}
	return nil
}

type isGetListResponse_Response interface {
	isGetListResponse_Response()
}

type GetListResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetListResponse_Recipient struct {
	Recipient *Recipient `protobuf:"bytes,2,opt,name=recipient,proto3,oneof"`
}

func (*GetListResponse_Error) isGetListResponse_Response() {}

func (*GetListResponse_Recipient) isGetListResponse_Response() {}

// A delete request is just an update request with status set to TERMINATED.
type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select *Select `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*DeleteResponse_Error
	//	*DeleteResponse_Recipient
	Response isDeleteResponse_Response `protobuf_oneof:"response"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{15}
}

func (m *DeleteResponse) GetResponse() isDeleteResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeleteResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*DeleteResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DeleteResponse) GetRecipient() *Recipient {
	if x, ok := x.GetResponse().(*DeleteResponse_Recipient); ok {
		return x.Recipient
	}
	return nil
}

type isDeleteResponse_Response interface {
	isDeleteResponse_Response()
}

type DeleteResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeleteResponse_Recipient struct {
	Recipient *Recipient `protobuf:"bytes,2,opt,name=recipient,proto3,oneof"`
}

func (*DeleteResponse_Error) isDeleteResponse_Response() {}

func (*DeleteResponse_Recipient) isDeleteResponse_Response() {}

type UserShare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User                    *users.User            `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	ValidFrom               *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=valid_from,json=validFrom,proto3,oneof" json:"valid_from,omitempty"`
	Balance                 bool                   `protobuf:"varint,3,opt,name=balance,proto3" json:"balance,omitempty"`
	History                 bool                   `protobuf:"varint,4,opt,name=history,proto3" json:"history,omitempty"`
	HistoryFrom             *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=history_from,json=historyFrom,proto3,oneof" json:"history_from,omitempty"`
	HistoryTo               *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=history_to,json=historyTo,proto3,oneof" json:"history_to,omitempty"`
	Deposit                 bool                   `protobuf:"varint,7,opt,name=deposit,proto3" json:"deposit,omitempty"`
	DepositMinAmount        *common.Decimal        `protobuf:"bytes,8,opt,name=deposit_min_amount,json=depositMinAmount,proto3,oneof" json:"deposit_min_amount,omitempty"`
	DepositMaxAmount        *common.Decimal        `protobuf:"bytes,9,opt,name=deposit_max_amount,json=depositMaxAmount,proto3,oneof" json:"deposit_max_amount,omitempty"`
	Withdrawal              bool                   `protobuf:"varint,10,opt,name=withdrawal,proto3" json:"withdrawal,omitempty"`
	WithdrawalMaxAmount     *common.Decimal        `protobuf:"bytes,11,opt,name=withdrawal_max_amount,json=withdrawalMaxAmount,proto3,oneof" json:"withdrawal_max_amount,omitempty"`
	WithdrawalMaxPercentage *common.Decimal        `protobuf:"bytes,12,opt,name=withdrawal_max_percentage,json=withdrawalMaxPercentage,proto3,oneof" json:"withdrawal_max_percentage,omitempty"`
	Transfer                bool                   `protobuf:"varint,13,opt,name=transfer,proto3" json:"transfer,omitempty"`
	TransferMaxAmount       *common.Decimal        `protobuf:"bytes,14,opt,name=transfer_max_amount,json=transferMaxAmount,proto3,oneof" json:"transfer_max_amount,omitempty"`
	TransferMaxPercentage   *common.Decimal        `protobuf:"bytes,15,opt,name=transfer_max_percentage,json=transferMaxPercentage,proto3,oneof" json:"transfer_max_percentage,omitempty"`
	Exchange                bool                   `protobuf:"varint,16,opt,name=exchange,proto3" json:"exchange,omitempty"`
	ExchangeMaxAmount       *common.Decimal        `protobuf:"bytes,17,opt,name=exchange_max_amount,json=exchangeMaxAmount,proto3,oneof" json:"exchange_max_amount,omitempty"`
	ExchangeMaxPercentage   *common.Decimal        `protobuf:"bytes,18,opt,name=exchange_max_percentage,json=exchangeMaxPercentage,proto3,oneof" json:"exchange_max_percentage,omitempty"`
}

func (x *UserShare) Reset() {
	*x = UserShare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserShare) ProtoMessage() {}

func (x *UserShare) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserShare.ProtoReflect.Descriptor instead.
func (*UserShare) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{16}
}

func (x *UserShare) GetUser() *users.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserShare) GetValidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidFrom
	}
	return nil
}

func (x *UserShare) GetBalance() bool {
	if x != nil {
		return x.Balance
	}
	return false
}

func (x *UserShare) GetHistory() bool {
	if x != nil {
		return x.History
	}
	return false
}

func (x *UserShare) GetHistoryFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.HistoryFrom
	}
	return nil
}

func (x *UserShare) GetHistoryTo() *timestamppb.Timestamp {
	if x != nil {
		return x.HistoryTo
	}
	return nil
}

func (x *UserShare) GetDeposit() bool {
	if x != nil {
		return x.Deposit
	}
	return false
}

func (x *UserShare) GetDepositMinAmount() *common.Decimal {
	if x != nil {
		return x.DepositMinAmount
	}
	return nil
}

func (x *UserShare) GetDepositMaxAmount() *common.Decimal {
	if x != nil {
		return x.DepositMaxAmount
	}
	return nil
}

func (x *UserShare) GetWithdrawal() bool {
	if x != nil {
		return x.Withdrawal
	}
	return false
}

func (x *UserShare) GetWithdrawalMaxAmount() *common.Decimal {
	if x != nil {
		return x.WithdrawalMaxAmount
	}
	return nil
}

func (x *UserShare) GetWithdrawalMaxPercentage() *common.Decimal {
	if x != nil {
		return x.WithdrawalMaxPercentage
	}
	return nil
}

func (x *UserShare) GetTransfer() bool {
	if x != nil {
		return x.Transfer
	}
	return false
}

func (x *UserShare) GetTransferMaxAmount() *common.Decimal {
	if x != nil {
		return x.TransferMaxAmount
	}
	return nil
}

func (x *UserShare) GetTransferMaxPercentage() *common.Decimal {
	if x != nil {
		return x.TransferMaxPercentage
	}
	return nil
}

func (x *UserShare) GetExchange() bool {
	if x != nil {
		return x.Exchange
	}
	return false
}

func (x *UserShare) GetExchangeMaxAmount() *common.Decimal {
	if x != nil {
		return x.ExchangeMaxAmount
	}
	return nil
}

func (x *UserShare) GetExchangeMaxPercentage() *common.Decimal {
	if x != nil {
		return x.ExchangeMaxPercentage
	}
	return nil
}

type UserShareList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*UserShare `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserShareList) Reset() {
	*x = UserShareList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserShareList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserShareList) ProtoMessage() {}

func (x *UserShareList) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserShareList.ProtoReflect.Descriptor instead.
func (*UserShareList) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{17}
}

func (x *UserShareList) GetList() []*UserShare {
	if x != nil {
		return x.List
	}
	return nil
}

type ShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Select:
	//
	//	*ShareRequest_ById
	//	*ShareRequest_ByLegalEntityUserLabel
	Select                  isShareRequest_Select  `protobuf_oneof:"select"`
	Users                   *users.SelectList      `protobuf:"bytes,3,opt,name=users,proto3" json:"users,omitempty"`
	ValidFrom               *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=valid_from,json=validFrom,proto3,oneof" json:"valid_from,omitempty"` // Default: current timestamp
	Balance                 *bool                  `protobuf:"varint,5,opt,name=balance,proto3,oneof" json:"balance,omitempty"`                     // Default: true
	History                 *bool                  `protobuf:"varint,6,opt,name=history,proto3,oneof" json:"history,omitempty"`                     // Default: false
	HistoryFrom             *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=history_from,json=historyFrom,proto3,oneof" json:"history_from,omitempty"`
	HistoryTo               *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=history_to,json=historyTo,proto3,oneof" json:"history_to,omitempty"`
	Deposit                 *bool                  `protobuf:"varint,9,opt,name=deposit,proto3,oneof" json:"deposit,omitempty"` // Default: false
	DepositMinAmount        *common.Decimal        `protobuf:"bytes,10,opt,name=deposit_min_amount,json=depositMinAmount,proto3,oneof" json:"deposit_min_amount,omitempty"`
	DepositMaxAmount        *common.Decimal        `protobuf:"bytes,11,opt,name=deposit_max_amount,json=depositMaxAmount,proto3,oneof" json:"deposit_max_amount,omitempty"`
	Withdrawal              *bool                  `protobuf:"varint,12,opt,name=withdrawal,proto3,oneof" json:"withdrawal,omitempty"` // Default: false
	WithdrawalMaxAmount     *common.Decimal        `protobuf:"bytes,13,opt,name=withdrawal_max_amount,json=withdrawalMaxAmount,proto3,oneof" json:"withdrawal_max_amount,omitempty"`
	WithdrawalMaxPercentage *common.Decimal        `protobuf:"bytes,14,opt,name=withdrawal_max_percentage,json=withdrawalMaxPercentage,proto3,oneof" json:"withdrawal_max_percentage,omitempty"`
	Transfer                *bool                  `protobuf:"varint,15,opt,name=transfer,proto3,oneof" json:"transfer,omitempty"` // Default: false
	TransferMaxAmount       *common.Decimal        `protobuf:"bytes,16,opt,name=transfer_max_amount,json=transferMaxAmount,proto3,oneof" json:"transfer_max_amount,omitempty"`
	TransferMaxPercentage   *common.Decimal        `protobuf:"bytes,17,opt,name=transfer_max_percentage,json=transferMaxPercentage,proto3,oneof" json:"transfer_max_percentage,omitempty"`
	Exchange                *bool                  `protobuf:"varint,18,opt,name=exchange,proto3,oneof" json:"exchange,omitempty"` // Default: false
	ExchangeMaxAmount       *common.Decimal        `protobuf:"bytes,19,opt,name=exchange_max_amount,json=exchangeMaxAmount,proto3,oneof" json:"exchange_max_amount,omitempty"`
	ExchangeMaxPercentage   *common.Decimal        `protobuf:"bytes,20,opt,name=exchange_max_percentage,json=exchangeMaxPercentage,proto3,oneof" json:"exchange_max_percentage,omitempty"`
}

func (x *ShareRequest) Reset() {
	*x = ShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareRequest) ProtoMessage() {}

func (x *ShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareRequest.ProtoReflect.Descriptor instead.
func (*ShareRequest) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{18}
}

func (m *ShareRequest) GetSelect() isShareRequest_Select {
	if m != nil {
		return m.Select
	}
	return nil
}

func (x *ShareRequest) GetById() string {
	if x, ok := x.GetSelect().(*ShareRequest_ById); ok {
		return x.ById
	}
	return ""
}

func (x *ShareRequest) GetByLegalEntityUserLabel() *LegalEntityUserLabel {
	if x, ok := x.GetSelect().(*ShareRequest_ByLegalEntityUserLabel); ok {
		return x.ByLegalEntityUserLabel
	}
	return nil
}

func (x *ShareRequest) GetUsers() *users.SelectList {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ShareRequest) GetValidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidFrom
	}
	return nil
}

func (x *ShareRequest) GetBalance() bool {
	if x != nil && x.Balance != nil {
		return *x.Balance
	}
	return false
}

func (x *ShareRequest) GetHistory() bool {
	if x != nil && x.History != nil {
		return *x.History
	}
	return false
}

func (x *ShareRequest) GetHistoryFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.HistoryFrom
	}
	return nil
}

func (x *ShareRequest) GetHistoryTo() *timestamppb.Timestamp {
	if x != nil {
		return x.HistoryTo
	}
	return nil
}

func (x *ShareRequest) GetDeposit() bool {
	if x != nil && x.Deposit != nil {
		return *x.Deposit
	}
	return false
}

func (x *ShareRequest) GetDepositMinAmount() *common.Decimal {
	if x != nil {
		return x.DepositMinAmount
	}
	return nil
}

func (x *ShareRequest) GetDepositMaxAmount() *common.Decimal {
	if x != nil {
		return x.DepositMaxAmount
	}
	return nil
}

func (x *ShareRequest) GetWithdrawal() bool {
	if x != nil && x.Withdrawal != nil {
		return *x.Withdrawal
	}
	return false
}

func (x *ShareRequest) GetWithdrawalMaxAmount() *common.Decimal {
	if x != nil {
		return x.WithdrawalMaxAmount
	}
	return nil
}

func (x *ShareRequest) GetWithdrawalMaxPercentage() *common.Decimal {
	if x != nil {
		return x.WithdrawalMaxPercentage
	}
	return nil
}

func (x *ShareRequest) GetTransfer() bool {
	if x != nil && x.Transfer != nil {
		return *x.Transfer
	}
	return false
}

func (x *ShareRequest) GetTransferMaxAmount() *common.Decimal {
	if x != nil {
		return x.TransferMaxAmount
	}
	return nil
}

func (x *ShareRequest) GetTransferMaxPercentage() *common.Decimal {
	if x != nil {
		return x.TransferMaxPercentage
	}
	return nil
}

func (x *ShareRequest) GetExchange() bool {
	if x != nil && x.Exchange != nil {
		return *x.Exchange
	}
	return false
}

func (x *ShareRequest) GetExchangeMaxAmount() *common.Decimal {
	if x != nil {
		return x.ExchangeMaxAmount
	}
	return nil
}

func (x *ShareRequest) GetExchangeMaxPercentage() *common.Decimal {
	if x != nil {
		return x.ExchangeMaxPercentage
	}
	return nil
}

type isShareRequest_Select interface {
	isShareRequest_Select()
}

type ShareRequest_ById struct {
	ById string `protobuf:"bytes,1,opt,name=by_id,json=byId,proto3,oneof"`
}

type ShareRequest_ByLegalEntityUserLabel struct {
	ByLegalEntityUserLabel *LegalEntityUserLabel `protobuf:"bytes,2,opt,name=by_legal_entity_user_label,json=byLegalEntityUserLabel,proto3,oneof"`
}

func (*ShareRequest_ById) isShareRequest_Select() {}

func (*ShareRequest_ByLegalEntityUserLabel) isShareRequest_Select() {}

type ShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*ShareResponse_Error
	//	*ShareResponse_Shares
	Response isShareResponse_Response `protobuf_oneof:"response"`
}

func (x *ShareResponse) Reset() {
	*x = ShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareResponse) ProtoMessage() {}

func (x *ShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareResponse.ProtoReflect.Descriptor instead.
func (*ShareResponse) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{19}
}

func (m *ShareResponse) GetResponse() isShareResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ShareResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*ShareResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ShareResponse) GetShares() *UserShareList {
	if x, ok := x.GetResponse().(*ShareResponse_Shares); ok {
		return x.Shares
	}
	return nil
}

type isShareResponse_Response interface {
	isShareResponse_Response()
}

type ShareResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ShareResponse_Shares struct {
	Shares *UserShareList `protobuf:"bytes,2,opt,name=shares,proto3,oneof"`
}

func (*ShareResponse_Error) isShareResponse_Response() {}

func (*ShareResponse_Shares) isShareResponse_Response() {}

type UnshareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Select:
	//
	//	*UnshareRequest_ById
	//	*UnshareRequest_ByLegalEntityUserLabel
	Select isUnshareRequest_Select `protobuf_oneof:"select"`
	Users  *users.SelectList       `protobuf:"bytes,3,opt,name=users,proto3,oneof" json:"users,omitempty"` // Update status of all user-related records to 'STATUS_TERMINATED'. Unshare from all users if not specified.
}

func (x *UnshareRequest) Reset() {
	*x = UnshareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnshareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnshareRequest) ProtoMessage() {}

func (x *UnshareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnshareRequest.ProtoReflect.Descriptor instead.
func (*UnshareRequest) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{20}
}

func (m *UnshareRequest) GetSelect() isUnshareRequest_Select {
	if m != nil {
		return m.Select
	}
	return nil
}

func (x *UnshareRequest) GetById() string {
	if x, ok := x.GetSelect().(*UnshareRequest_ById); ok {
		return x.ById
	}
	return ""
}

func (x *UnshareRequest) GetByLegalEntityUserLabel() *LegalEntityUserLabel {
	if x, ok := x.GetSelect().(*UnshareRequest_ByLegalEntityUserLabel); ok {
		return x.ByLegalEntityUserLabel
	}
	return nil
}

func (x *UnshareRequest) GetUsers() *users.SelectList {
	if x != nil {
		return x.Users
	}
	return nil
}

type isUnshareRequest_Select interface {
	isUnshareRequest_Select()
}

type UnshareRequest_ById struct {
	ById string `protobuf:"bytes,1,opt,name=by_id,json=byId,proto3,oneof"`
}

type UnshareRequest_ByLegalEntityUserLabel struct {
	ByLegalEntityUserLabel *LegalEntityUserLabel `protobuf:"bytes,2,opt,name=by_legal_entity_user_label,json=byLegalEntityUserLabel,proto3,oneof"`
}

func (*UnshareRequest_ById) isUnshareRequest_Select() {}

func (*UnshareRequest_ByLegalEntityUserLabel) isUnshareRequest_Select() {}

type UnshareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*UnshareResponse_Error
	//	*UnshareResponse_Users
	Response isUnshareResponse_Response `protobuf_oneof:"response"`
}

func (x *UnshareResponse) Reset() {
	*x = UnshareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnshareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnshareResponse) ProtoMessage() {}

func (x *UnshareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnshareResponse.ProtoReflect.Descriptor instead.
func (*UnshareResponse) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{21}
}

func (m *UnshareResponse) GetResponse() isUnshareResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UnshareResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*UnshareResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *UnshareResponse) GetUsers() *users.List {
	if x, ok := x.GetResponse().(*UnshareResponse_Users); ok {
		return x.Users
	}
	return nil
}

type isUnshareResponse_Response interface {
	isUnshareResponse_Response()
}

type UnshareResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type UnshareResponse_Users struct {
	Users *users.List `protobuf:"bytes,2,opt,name=users,proto3,oneof"`
}

func (*UnshareResponse_Error) isUnshareResponse_Response() {}

func (*UnshareResponse_Users) isUnshareResponse_Response() {}

type GetShareListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Select:
	//
	//	*GetShareListRequest_ById
	//	*GetShareListRequest_ByLegalEntityUserLabel
	Select isGetShareListRequest_Select `protobuf_oneof:"select"`
}

func (x *GetShareListRequest) Reset() {
	*x = GetShareListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShareListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShareListRequest) ProtoMessage() {}

func (x *GetShareListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShareListRequest.ProtoReflect.Descriptor instead.
func (*GetShareListRequest) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{22}
}

func (m *GetShareListRequest) GetSelect() isGetShareListRequest_Select {
	if m != nil {
		return m.Select
	}
	return nil
}

func (x *GetShareListRequest) GetById() string {
	if x, ok := x.GetSelect().(*GetShareListRequest_ById); ok {
		return x.ById
	}
	return ""
}

func (x *GetShareListRequest) GetByLegalEntityUserLabel() *LegalEntityUserLabel {
	if x, ok := x.GetSelect().(*GetShareListRequest_ByLegalEntityUserLabel); ok {
		return x.ByLegalEntityUserLabel
	}
	return nil
}

type isGetShareListRequest_Select interface {
	isGetShareListRequest_Select()
}

type GetShareListRequest_ById struct {
	ById string `protobuf:"bytes,1,opt,name=by_id,json=byId,proto3,oneof"`
}

type GetShareListRequest_ByLegalEntityUserLabel struct {
	ByLegalEntityUserLabel *LegalEntityUserLabel `protobuf:"bytes,2,opt,name=by_legal_entity_user_label,json=byLegalEntityUserLabel,proto3,oneof"`
}

func (*GetShareListRequest_ById) isGetShareListRequest_Select() {}

func (*GetShareListRequest_ByLegalEntityUserLabel) isGetShareListRequest_Select() {}

type GetShareListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetShareListResponse_Error
	//	*GetShareListResponse_Shares
	Response isGetShareListResponse_Response `protobuf_oneof:"response"`
}

func (x *GetShareListResponse) Reset() {
	*x = GetShareListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipients_recipients_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShareListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShareListResponse) ProtoMessage() {}

func (x *GetShareListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipients_recipients_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShareListResponse.ProtoReflect.Descriptor instead.
func (*GetShareListResponse) Descriptor() ([]byte, []int) {
	return file_recipients_recipients_proto_rawDescGZIP(), []int{23}
}

func (m *GetShareListResponse) GetResponse() isGetShareListResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetShareListResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetShareListResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetShareListResponse) GetShares() *UserShareList {
	if x, ok := x.GetResponse().(*GetShareListResponse_Shares); ok {
		return x.Shares
	}
	return nil
}

type isGetShareListResponse_Response interface {
	isGetShareListResponse_Response()
}

type GetShareListResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetShareListResponse_Shares struct {
	Shares *UserShareList `protobuf:"bytes,2,opt,name=shares,proto3,oneof"`
}

func (*GetShareListResponse_Error) isGetShareListResponse_Response() {}

func (*GetShareListResponse_Shares) isGetShareListResponse_Response() {}

var File_recipients_recipients_proto protoreflect.FileDescriptor

var file_recipients_recipients_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6c, 0x65,
	0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x65, 0x67, 0x61,
	0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xad, 0x02, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x65, 0x67, 0x61,
	0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x48, 0x01, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x03, 0x6f, 0x72, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6f, 0x72, 0x67, 0x73, 0x2e, 0x4f, 0x72,
	0x67, 0x48, 0x02, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x6f, 0x72, 0x67, 0x22, 0x31, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x14, 0x4c, 0x65, 0x67,
	0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x00,
	0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x01, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x22, 0x89, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x12, 0x15, 0x0a, 0x05, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x62, 0x79, 0x49, 0x64, 0x12, 0x5e, 0x0a, 0x1a, 0x62, 0x79,
	0x5f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4c, 0x65, 0x67, 0x61,
	0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x48, 0x00, 0x52, 0x16, 0x62, 0x79, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x22, 0x34, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xbf, 0x02, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0c,
	0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x01, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x02, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x72, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48,
	0x03, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x04, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x6c,
	0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6f, 0x72,
	0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7a, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xfa, 0x02, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c,
	0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x48, 0x01, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x6f, 0x72, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x04,
	0x52, 0x03, 0x6f, 0x72, 0x67, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6f, 0x72, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7a, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x35,
	0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x38, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x77, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xef, 0x02, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c,
	0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6c, 0x65, 0x67, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b,
	0x6c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2e,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x01, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x03, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x72, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x04, 0x52, 0x03, 0x6f,
	0x72, 0x67, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x6c,
	0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6f, 0x72, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x35, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x3b, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x22, 0x7a, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdf, 0x09, 0x0a,
	0x09, 0x55, 0x73, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0a, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x42, 0x0a, 0x0c, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x48, 0x01, 0x52, 0x0b, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6d,
	0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0a, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x74,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x42, 0x0a,
	0x12, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x10, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x42, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x04,
	0x52, 0x10, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x12, 0x48, 0x0a, 0x15, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x05, 0x52, 0x13, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x61, 0x6c, 0x4d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x50, 0x0a, 0x19, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x6d, 0x61,
	0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x48, 0x06, 0x52, 0x17, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x44, 0x0a,
	0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x07, 0x52, 0x11, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f,
	0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x08, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x44, 0x0a,
	0x13, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x09, 0x52, 0x11, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x17, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x0a, 0x52, 0x15, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x6f,
	0x42, 0x15, 0x0a, 0x13, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x6d, 0x69, 0x6e,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x18,
	0x0a, 0x16, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x6d, 0x61,
	0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x1a,
	0x0a, 0x18, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x78, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x3a,
	0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd6, 0x0b, 0x0a, 0x0c, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x05, 0x62,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x62, 0x79,
	0x49, 0x64, 0x12, 0x5e, 0x0a, 0x1a, 0x62, 0x79, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x16, 0x62, 0x79, 0x4c, 0x65,
	0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x27, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x09, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x07, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0c, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x04, 0x52, 0x0b, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a,
	0x0a, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x05, 0x52,
	0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06,
	0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x12,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x07, 0x52, 0x10, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x4d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x42, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x08, 0x52,
	0x10, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x09, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x15, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x0a, 0x52, 0x13, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x4d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x50, 0x0a, 0x19, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x0b, 0x52, 0x17, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0c, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x48, 0x0d, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x4d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x17,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x0e,
	0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0f, 0x52, 0x08,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x13, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x10, 0x52, 0x11, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x4c, 0x0a, 0x17, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x61,
	0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x48, 0x11, 0x52, 0x15, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d,
	0x61, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x6f,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x42, 0x15, 0x0a, 0x13,
	0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f,
	0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x77, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x16,
	0x0a, 0x14, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x78, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42,
	0x16, 0x0a, 0x14, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x22, 0x77, 0x0a, 0x0d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x06, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc9, 0x01, 0x0a,
	0x0e, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x05, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x62, 0x79, 0x49, 0x64, 0x12, 0x5e, 0x0a, 0x1a, 0x62, 0x79, 0x5f, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x16,
	0x62, 0x79, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x01, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x69, 0x0a, 0x0f, 0x55, 0x6e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x05, 0x62,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x62, 0x79,
	0x49, 0x64, 0x12, 0x5e, 0x0a, 0x1a, 0x62, 0x79, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x16, 0x62, 0x79, 0x4c, 0x65,
	0x67, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x7e, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x06, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0xbd, 0x01, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x44, 0x56, 0x5f, 0x46, 0x49, 0x41, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x56,
	0x5f, 0x43, 0x52, 0x59, 0x50, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x10, 0x02,
	0x12, 0x16, 0x0a, 0x12, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x56, 0x5f, 0x53, 0x55, 0x42, 0x41,
	0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x44, 0x56, 0x5f, 0x42, 0x4f, 0x54, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x43, 0x45, 0x58, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x08, 0x12,
	0x15, 0x0a, 0x11, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x41, 0x4e, 0x4b, 0x5f, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x10, 0x10, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44,
	0x45, 0x46, 0x49, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x10, 0x20, 0x42, 0x8a, 0x01, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x42,
	0x0f, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x1f, 0x64, 0x61, 0x76, 0x65, 0x6e, 0x73, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0xa2, 0x02, 0x03, 0x52, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x52, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0xca, 0x02, 0x0a, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0xe2, 0x02, 0x16, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_recipients_recipients_proto_rawDescOnce sync.Once
	file_recipients_recipients_proto_rawDescData = file_recipients_recipients_proto_rawDesc
)

func file_recipients_recipients_proto_rawDescGZIP() []byte {
	file_recipients_recipients_proto_rawDescOnce.Do(func() {
		file_recipients_recipients_proto_rawDescData = protoimpl.X.CompressGZIP(file_recipients_recipients_proto_rawDescData)
	})
	return file_recipients_recipients_proto_rawDescData
}

var file_recipients_recipients_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_recipients_recipients_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_recipients_recipients_proto_goTypes = []interface{}{
	(Type)(0),                            // 0: recipients.Type
	(*TypeList)(nil),                     // 1: recipients.TypeList
	(*Recipient)(nil),                    // 2: recipients.Recipient
	(*List)(nil),                         // 3: recipients.List
	(*LegalEntityUserLabel)(nil),         // 4: recipients.LegalEntityUserLabel
	(*Select)(nil),                       // 5: recipients.Select
	(*SelectList)(nil),                   // 6: recipients.SelectList
	(*CreateRequest)(nil),                // 7: recipients.CreateRequest
	(*CreateResponse)(nil),               // 8: recipients.CreateResponse
	(*UpdateRequest)(nil),                // 9: recipients.UpdateRequest
	(*UpdateResponse)(nil),               // 10: recipients.UpdateResponse
	(*GetRequest)(nil),                   // 11: recipients.GetRequest
	(*GetResponse)(nil),                  // 12: recipients.GetResponse
	(*GetListRequest)(nil),               // 13: recipients.GetListRequest
	(*GetListResponse)(nil),              // 14: recipients.GetListResponse
	(*DeleteRequest)(nil),                // 15: recipients.DeleteRequest
	(*DeleteResponse)(nil),               // 16: recipients.DeleteResponse
	(*UserShare)(nil),                    // 17: recipients.UserShare
	(*UserShareList)(nil),                // 18: recipients.UserShareList
	(*ShareRequest)(nil),                 // 19: recipients.ShareRequest
	(*ShareResponse)(nil),                // 20: recipients.ShareResponse
	(*UnshareRequest)(nil),               // 21: recipients.UnshareRequest
	(*UnshareResponse)(nil),              // 22: recipients.UnshareResponse
	(*GetShareListRequest)(nil),          // 23: recipients.GetShareListRequest
	(*GetShareListResponse)(nil),         // 24: recipients.GetShareListResponse
	(*legalentities.LegalEntity)(nil),    // 25: legalentities.LegalEntity
	(*users.User)(nil),                   // 26: users.User
	(*orgs.Org)(nil),                     // 27: orgs.Org
	(common.Status)(0),                   // 28: common.Status
	(*legalentities.Select)(nil),         // 29: legalentities.Select
	(*users.Select)(nil),                 // 30: users.Select
	(*orgs.Select)(nil),                  // 31: orgs.Select
	(*common.Error)(nil),                 // 32: common.Error
	(*legalentities.GetListRequest)(nil), // 33: legalentities.GetListRequest
	(*users.GetListRequest)(nil),         // 34: users.GetListRequest
	(*orgs.GetListRequest)(nil),          // 35: orgs.GetListRequest
	(*common.StatusList)(nil),            // 36: common.StatusList
	(*timestamppb.Timestamp)(nil),        // 37: google.protobuf.Timestamp
	(*common.Decimal)(nil),               // 38: common.Decimal
	(*users.SelectList)(nil),             // 39: users.SelectList
	(*users.List)(nil),                   // 40: users.List
}
var file_recipients_recipients_proto_depIdxs = []int32{
	0,  // 0: recipients.TypeList.list:type_name -> recipients.Type
	25, // 1: recipients.Recipient.legal_entity:type_name -> legalentities.LegalEntity
	26, // 2: recipients.Recipient.user:type_name -> users.User
	0,  // 3: recipients.Recipient.type:type_name -> recipients.Type
	27, // 4: recipients.Recipient.org:type_name -> orgs.Org
	28, // 5: recipients.Recipient.status:type_name -> common.Status
	2,  // 6: recipients.List.list:type_name -> recipients.Recipient
	29, // 7: recipients.LegalEntityUserLabel.legal_entity:type_name -> legalentities.Select
	30, // 8: recipients.LegalEntityUserLabel.user:type_name -> users.Select
	4,  // 9: recipients.Select.by_legal_entity_user_label:type_name -> recipients.LegalEntityUserLabel
	5,  // 10: recipients.SelectList.list:type_name -> recipients.Select
	29, // 11: recipients.CreateRequest.legal_entity:type_name -> legalentities.Select
	30, // 12: recipients.CreateRequest.user:type_name -> users.Select
	0,  // 13: recipients.CreateRequest.type:type_name -> recipients.Type
	31, // 14: recipients.CreateRequest.org:type_name -> orgs.Select
	28, // 15: recipients.CreateRequest.status:type_name -> common.Status
	32, // 16: recipients.CreateResponse.error:type_name -> common.Error
	2,  // 17: recipients.CreateResponse.recipient:type_name -> recipients.Recipient
	5,  // 18: recipients.UpdateRequest.select:type_name -> recipients.Select
	29, // 19: recipients.UpdateRequest.legal_entity:type_name -> legalentities.Select
	30, // 20: recipients.UpdateRequest.user:type_name -> users.Select
	0,  // 21: recipients.UpdateRequest.type:type_name -> recipients.Type
	31, // 22: recipients.UpdateRequest.org:type_name -> orgs.Select
	28, // 23: recipients.UpdateRequest.status:type_name -> common.Status
	32, // 24: recipients.UpdateResponse.error:type_name -> common.Error
	2,  // 25: recipients.UpdateResponse.recipient:type_name -> recipients.Recipient
	5,  // 26: recipients.GetRequest.select:type_name -> recipients.Select
	32, // 27: recipients.GetResponse.error:type_name -> common.Error
	2,  // 28: recipients.GetResponse.recipient:type_name -> recipients.Recipient
	33, // 29: recipients.GetListRequest.legal_entity:type_name -> legalentities.GetListRequest
	34, // 30: recipients.GetListRequest.user:type_name -> users.GetListRequest
	1,  // 31: recipients.GetListRequest.type:type_name -> recipients.TypeList
	35, // 32: recipients.GetListRequest.org:type_name -> orgs.GetListRequest
	36, // 33: recipients.GetListRequest.status:type_name -> common.StatusList
	32, // 34: recipients.GetListResponse.error:type_name -> common.Error
	2,  // 35: recipients.GetListResponse.recipient:type_name -> recipients.Recipient
	5,  // 36: recipients.DeleteRequest.select:type_name -> recipients.Select
	32, // 37: recipients.DeleteResponse.error:type_name -> common.Error
	2,  // 38: recipients.DeleteResponse.recipient:type_name -> recipients.Recipient
	26, // 39: recipients.UserShare.user:type_name -> users.User
	37, // 40: recipients.UserShare.valid_from:type_name -> google.protobuf.Timestamp
	37, // 41: recipients.UserShare.history_from:type_name -> google.protobuf.Timestamp
	37, // 42: recipients.UserShare.history_to:type_name -> google.protobuf.Timestamp
	38, // 43: recipients.UserShare.deposit_min_amount:type_name -> common.Decimal
	38, // 44: recipients.UserShare.deposit_max_amount:type_name -> common.Decimal
	38, // 45: recipients.UserShare.withdrawal_max_amount:type_name -> common.Decimal
	38, // 46: recipients.UserShare.withdrawal_max_percentage:type_name -> common.Decimal
	38, // 47: recipients.UserShare.transfer_max_amount:type_name -> common.Decimal
	38, // 48: recipients.UserShare.transfer_max_percentage:type_name -> common.Decimal
	38, // 49: recipients.UserShare.exchange_max_amount:type_name -> common.Decimal
	38, // 50: recipients.UserShare.exchange_max_percentage:type_name -> common.Decimal
	17, // 51: recipients.UserShareList.list:type_name -> recipients.UserShare
	4,  // 52: recipients.ShareRequest.by_legal_entity_user_label:type_name -> recipients.LegalEntityUserLabel
	39, // 53: recipients.ShareRequest.users:type_name -> users.SelectList
	37, // 54: recipients.ShareRequest.valid_from:type_name -> google.protobuf.Timestamp
	37, // 55: recipients.ShareRequest.history_from:type_name -> google.protobuf.Timestamp
	37, // 56: recipients.ShareRequest.history_to:type_name -> google.protobuf.Timestamp
	38, // 57: recipients.ShareRequest.deposit_min_amount:type_name -> common.Decimal
	38, // 58: recipients.ShareRequest.deposit_max_amount:type_name -> common.Decimal
	38, // 59: recipients.ShareRequest.withdrawal_max_amount:type_name -> common.Decimal
	38, // 60: recipients.ShareRequest.withdrawal_max_percentage:type_name -> common.Decimal
	38, // 61: recipients.ShareRequest.transfer_max_amount:type_name -> common.Decimal
	38, // 62: recipients.ShareRequest.transfer_max_percentage:type_name -> common.Decimal
	38, // 63: recipients.ShareRequest.exchange_max_amount:type_name -> common.Decimal
	38, // 64: recipients.ShareRequest.exchange_max_percentage:type_name -> common.Decimal
	32, // 65: recipients.ShareResponse.error:type_name -> common.Error
	18, // 66: recipients.ShareResponse.shares:type_name -> recipients.UserShareList
	4,  // 67: recipients.UnshareRequest.by_legal_entity_user_label:type_name -> recipients.LegalEntityUserLabel
	39, // 68: recipients.UnshareRequest.users:type_name -> users.SelectList
	32, // 69: recipients.UnshareResponse.error:type_name -> common.Error
	40, // 70: recipients.UnshareResponse.users:type_name -> users.List
	4,  // 71: recipients.GetShareListRequest.by_legal_entity_user_label:type_name -> recipients.LegalEntityUserLabel
	32, // 72: recipients.GetShareListResponse.error:type_name -> common.Error
	18, // 73: recipients.GetShareListResponse.shares:type_name -> recipients.UserShareList
	74, // [74:74] is the sub-list for method output_type
	74, // [74:74] is the sub-list for method input_type
	74, // [74:74] is the sub-list for extension type_name
	74, // [74:74] is the sub-list for extension extendee
	0,  // [0:74] is the sub-list for field type_name
}

func init() { file_recipients_recipients_proto_init() }
func file_recipients_recipients_proto_init() {
	if File_recipients_recipients_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_recipients_recipients_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recipient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegalEntityUserLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Select); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserShare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserShareList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnshareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnshareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShareListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipients_recipients_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShareListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_recipients_recipients_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_recipients_recipients_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_recipients_recipients_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Select_ById)(nil),
		(*Select_ByLegalEntityUserLabel)(nil),
	}
	file_recipients_recipients_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_recipients_recipients_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*CreateResponse_Error)(nil),
		(*CreateResponse_Recipient)(nil),
	}
	file_recipients_recipients_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_recipients_recipients_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*UpdateResponse_Error)(nil),
		(*UpdateResponse_Recipient)(nil),
	}
	file_recipients_recipients_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*GetResponse_Error)(nil),
		(*GetResponse_Recipient)(nil),
	}
	file_recipients_recipients_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_recipients_recipients_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*GetListResponse_Error)(nil),
		(*GetListResponse_Recipient)(nil),
	}
	file_recipients_recipients_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*DeleteResponse_Error)(nil),
		(*DeleteResponse_Recipient)(nil),
	}
	file_recipients_recipients_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_recipients_recipients_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*ShareRequest_ById)(nil),
		(*ShareRequest_ByLegalEntityUserLabel)(nil),
	}
	file_recipients_recipients_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*ShareResponse_Error)(nil),
		(*ShareResponse_Shares)(nil),
	}
	file_recipients_recipients_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*UnshareRequest_ById)(nil),
		(*UnshareRequest_ByLegalEntityUserLabel)(nil),
	}
	file_recipients_recipients_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*UnshareResponse_Error)(nil),
		(*UnshareResponse_Users)(nil),
	}
	file_recipients_recipients_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*GetShareListRequest_ById)(nil),
		(*GetShareListRequest_ByLegalEntityUserLabel)(nil),
	}
	file_recipients_recipients_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*GetShareListResponse_Error)(nil),
		(*GetShareListResponse_Shares)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_recipients_recipients_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_recipients_recipients_proto_goTypes,
		DependencyIndexes: file_recipients_recipients_proto_depIdxs,
		EnumInfos:         file_recipients_recipients_proto_enumTypes,
		MessageInfos:      file_recipients_recipients_proto_msgTypes,
	}.Build()
	File_recipients_recipients_proto = out.File
	file_recipients_recipients_proto_rawDesc = nil
	file_recipients_recipients_proto_goTypes = nil
	file_recipients_recipients_proto_depIdxs = nil
}

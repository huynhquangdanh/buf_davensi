// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: tradingpairs/tradingpairs.proto

package tradingpairs

import (
	common "davensi.com/core/gen/common"
	uoms "davensi.com/core/gen/uoms"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Backed by table 'tradingpairs'
type TradingPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // System Key: id is generated by the server or the database
	Symbol           string        `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"` // Human-Readable Key (unique identifier)
	QuantityUom      *uoms.UoM     `protobuf:"bytes,3,opt,name=quantity_uom,json=quantityUom,proto3" json:"quantity_uom,omitempty"`
	QuantityDecimals uint32        `protobuf:"varint,4,opt,name=quantity_decimals,json=quantityDecimals,proto3" json:"quantity_decimals,omitempty"`
	PriceUom         *uoms.UoM     `protobuf:"bytes,5,opt,name=price_uom,json=priceUom,proto3" json:"price_uom,omitempty"`
	PriceDecimals    uint32        `protobuf:"varint,6,opt,name=price_decimals,json=priceDecimals,proto3" json:"price_decimals,omitempty"`
	VolumeDecimals   uint32        `protobuf:"varint,7,opt,name=volume_decimals,json=volumeDecimals,proto3" json:"volume_decimals,omitempty"`
	Status           common.Status `protobuf:"varint,8,opt,name=status,proto3,enum=common.Status" json:"status,omitempty"`
}

func (x *TradingPair) Reset() {
	*x = TradingPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tradingpairs_tradingpairs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradingPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradingPair) ProtoMessage() {}

func (x *TradingPair) ProtoReflect() protoreflect.Message {
	mi := &file_tradingpairs_tradingpairs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradingPair.ProtoReflect.Descriptor instead.
func (*TradingPair) Descriptor() ([]byte, []int) {
	return file_tradingpairs_tradingpairs_proto_rawDescGZIP(), []int{0}
}

func (x *TradingPair) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TradingPair) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TradingPair) GetQuantityUom() *uoms.UoM {
	if x != nil {
		return x.QuantityUom
	}
	return nil
}

func (x *TradingPair) GetQuantityDecimals() uint32 {
	if x != nil {
		return x.QuantityDecimals
	}
	return 0
}

func (x *TradingPair) GetPriceUom() *uoms.UoM {
	if x != nil {
		return x.PriceUom
	}
	return nil
}

func (x *TradingPair) GetPriceDecimals() uint32 {
	if x != nil {
		return x.PriceDecimals
	}
	return 0
}

func (x *TradingPair) GetVolumeDecimals() uint32 {
	if x != nil {
		return x.VolumeDecimals
	}
	return 0
}

func (x *TradingPair) GetStatus() common.Status {
	if x != nil {
		return x.Status
	}
	return common.Status(0)
}

type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*TradingPair `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tradingpairs_tradingpairs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_tradingpairs_tradingpairs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_tradingpairs_tradingpairs_proto_rawDescGZIP(), []int{1}
}

func (x *List) GetList() []*TradingPair {
	if x != nil {
		return x.List
	}
	return nil
}

type Select struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Select:
	//
	//	*Select_ById
	//	*Select_BySymbol
	Select isSelect_Select `protobuf_oneof:"select"`
}

func (x *Select) Reset() {
	*x = Select{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tradingpairs_tradingpairs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Select) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Select) ProtoMessage() {}

func (x *Select) ProtoReflect() protoreflect.Message {
	mi := &file_tradingpairs_tradingpairs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Select.ProtoReflect.Descriptor instead.
func (*Select) Descriptor() ([]byte, []int) {
	return file_tradingpairs_tradingpairs_proto_rawDescGZIP(), []int{2}
}

func (m *Select) GetSelect() isSelect_Select {
	if m != nil {
		return m.Select
	}
	return nil
}

func (x *Select) GetById() string {
	if x, ok := x.GetSelect().(*Select_ById); ok {
		return x.ById
	}
	return ""
}

func (x *Select) GetBySymbol() string {
	if x, ok := x.GetSelect().(*Select_BySymbol); ok {
		return x.BySymbol
	}
	return ""
}

type isSelect_Select interface {
	isSelect_Select()
}

type Select_ById struct {
	ById string `protobuf:"bytes,1,opt,name=by_id,json=byId,proto3,oneof"`
}

type Select_BySymbol struct {
	BySymbol string `protobuf:"bytes,2,opt,name=by_symbol,json=bySymbol,proto3,oneof"`
}

func (*Select_ById) isSelect_Select() {}

func (*Select_BySymbol) isSelect_Select() {}

type SelectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Select `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SelectList) Reset() {
	*x = SelectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tradingpairs_tradingpairs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectList) ProtoMessage() {}

func (x *SelectList) ProtoReflect() protoreflect.Message {
	mi := &file_tradingpairs_tradingpairs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectList.ProtoReflect.Descriptor instead.
func (*SelectList) Descriptor() ([]byte, []int) {
	return file_tradingpairs_tradingpairs_proto_rawDescGZIP(), []int{3}
}

func (x *SelectList) GetList() []*Select {
	if x != nil {
		return x.List
	}
	return nil
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is generated by the server or the database
	Symbol           string        `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	QuantityUom      *uoms.Select  `protobuf:"bytes,2,opt,name=quantity_uom,json=quantityUom,proto3" json:"quantity_uom,omitempty"`
	QuantityDecimals *uint32       `protobuf:"varint,3,opt,name=quantity_decimals,json=quantityDecimals,proto3,oneof" json:"quantity_decimals,omitempty"` // Default: displayed_decimals of related UoM
	PriceUom         *uoms.Select  `protobuf:"bytes,4,opt,name=price_uom,json=priceUom,proto3" json:"price_uom,omitempty"`
	PriceDecimals    *uint32       `protobuf:"varint,5,opt,name=price_decimals,json=priceDecimals,proto3,oneof" json:"price_decimals,omitempty"`    // Default: displayed_decimals of related UoM
	VolumeDecimals   *uint32       `protobuf:"varint,6,opt,name=volume_decimals,json=volumeDecimals,proto3,oneof" json:"volume_decimals,omitempty"` // Default: price_decimals
	Status           common.Status `protobuf:"varint,7,opt,name=status,proto3,enum=common.Status" json:"status,omitempty"`                          // Default: 0
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tradingpairs_tradingpairs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tradingpairs_tradingpairs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_tradingpairs_tradingpairs_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CreateRequest) GetQuantityUom() *uoms.Select {
	if x != nil {
		return x.QuantityUom
	}
	return nil
}

func (x *CreateRequest) GetQuantityDecimals() uint32 {
	if x != nil && x.QuantityDecimals != nil {
		return *x.QuantityDecimals
	}
	return 0
}

func (x *CreateRequest) GetPriceUom() *uoms.Select {
	if x != nil {
		return x.PriceUom
	}
	return nil
}

func (x *CreateRequest) GetPriceDecimals() uint32 {
	if x != nil && x.PriceDecimals != nil {
		return *x.PriceDecimals
	}
	return 0
}

func (x *CreateRequest) GetVolumeDecimals() uint32 {
	if x != nil && x.VolumeDecimals != nil {
		return *x.VolumeDecimals
	}
	return 0
}

func (x *CreateRequest) GetStatus() common.Status {
	if x != nil {
		return x.Status
	}
	return common.Status(0)
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*CreateResponse_Error
	//	*CreateResponse_Tradingpair
	Response isCreateResponse_Response `protobuf_oneof:"response"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tradingpairs_tradingpairs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tradingpairs_tradingpairs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_tradingpairs_tradingpairs_proto_rawDescGZIP(), []int{5}
}

func (m *CreateResponse) GetResponse() isCreateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CreateResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*CreateResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CreateResponse) GetTradingpair() *TradingPair {
	if x, ok := x.GetResponse().(*CreateResponse_Tradingpair); ok {
		return x.Tradingpair
	}
	return nil
}

type isCreateResponse_Response interface {
	isCreateResponse_Response()
}

type CreateResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateResponse_Tradingpair struct {
	Tradingpair *TradingPair `protobuf:"bytes,2,opt,name=tradingpair,proto3,oneof"`
}

func (*CreateResponse_Error) isCreateResponse_Response() {}

func (*CreateResponse_Tradingpair) isCreateResponse_Response() {}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select           *Select        `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
	Symbol           *string        `protobuf:"bytes,2,opt,name=symbol,proto3,oneof" json:"symbol,omitempty"`
	QuantityUom      *uoms.Select   `protobuf:"bytes,3,opt,name=quantity_uom,json=quantityUom,proto3,oneof" json:"quantity_uom,omitempty"`
	QuantityDecimals *uint32        `protobuf:"varint,4,opt,name=quantity_decimals,json=quantityDecimals,proto3,oneof" json:"quantity_decimals,omitempty"`
	PriceUom         *uoms.Select   `protobuf:"bytes,5,opt,name=price_uom,json=priceUom,proto3,oneof" json:"price_uom,omitempty"`
	PriceDecimals    *uint32        `protobuf:"varint,6,opt,name=price_decimals,json=priceDecimals,proto3,oneof" json:"price_decimals,omitempty"`
	VolumeDecimals   *uint32        `protobuf:"varint,7,opt,name=volume_decimals,json=volumeDecimals,proto3,oneof" json:"volume_decimals,omitempty"`
	Status           *common.Status `protobuf:"varint,8,opt,name=status,proto3,enum=common.Status,oneof" json:"status,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tradingpairs_tradingpairs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tradingpairs_tradingpairs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_tradingpairs_tradingpairs_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *UpdateRequest) GetSymbol() string {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return ""
}

func (x *UpdateRequest) GetQuantityUom() *uoms.Select {
	if x != nil {
		return x.QuantityUom
	}
	return nil
}

func (x *UpdateRequest) GetQuantityDecimals() uint32 {
	if x != nil && x.QuantityDecimals != nil {
		return *x.QuantityDecimals
	}
	return 0
}

func (x *UpdateRequest) GetPriceUom() *uoms.Select {
	if x != nil {
		return x.PriceUom
	}
	return nil
}

func (x *UpdateRequest) GetPriceDecimals() uint32 {
	if x != nil && x.PriceDecimals != nil {
		return *x.PriceDecimals
	}
	return 0
}

func (x *UpdateRequest) GetVolumeDecimals() uint32 {
	if x != nil && x.VolumeDecimals != nil {
		return *x.VolumeDecimals
	}
	return 0
}

func (x *UpdateRequest) GetStatus() common.Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return common.Status(0)
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*UpdateResponse_Error
	//	*UpdateResponse_Tradingpair
	Response isUpdateResponse_Response `protobuf_oneof:"response"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tradingpairs_tradingpairs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tradingpairs_tradingpairs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_tradingpairs_tradingpairs_proto_rawDescGZIP(), []int{7}
}

func (m *UpdateResponse) GetResponse() isUpdateResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UpdateResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*UpdateResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *UpdateResponse) GetTradingpair() *TradingPair {
	if x, ok := x.GetResponse().(*UpdateResponse_Tradingpair); ok {
		return x.Tradingpair
	}
	return nil
}

type isUpdateResponse_Response interface {
	isUpdateResponse_Response()
}

type UpdateResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type UpdateResponse_Tradingpair struct {
	Tradingpair *TradingPair `protobuf:"bytes,2,opt,name=tradingpair,proto3,oneof"`
}

func (*UpdateResponse_Error) isUpdateResponse_Response() {}

func (*UpdateResponse_Tradingpair) isUpdateResponse_Response() {}

// GetRequest is expected to return a single value.
type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select *Select `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tradingpairs_tradingpairs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tradingpairs_tradingpairs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_tradingpairs_tradingpairs_proto_rawDescGZIP(), []int{8}
}

func (x *GetRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

// An error is returned if there is more than one record found.
type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetResponse_Error
	//	*GetResponse_Tradingpair
	Response isGetResponse_Response `protobuf_oneof:"response"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tradingpairs_tradingpairs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tradingpairs_tradingpairs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_tradingpairs_tradingpairs_proto_rawDescGZIP(), []int{9}
}

func (m *GetResponse) GetResponse() isGetResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetResponse) GetTradingpair() *TradingPair {
	if x, ok := x.GetResponse().(*GetResponse_Tradingpair); ok {
		return x.Tradingpair
	}
	return nil
}

type isGetResponse_Response interface {
	isGetResponse_Response()
}

type GetResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetResponse_Tradingpair struct {
	Tradingpair *TradingPair `protobuf:"bytes,2,opt,name=tradingpair,proto3,oneof"`
}

func (*GetResponse_Error) isGetResponse_Response() {}

func (*GetResponse_Tradingpair) isGetResponse_Response() {}

// GetList will use SQL 'LIKE' instead of '=' for string fields
type GetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol           *string                 `protobuf:"bytes,1,opt,name=symbol,proto3,oneof" json:"symbol,omitempty"`
	QuantityUom      *uoms.SelectList        `protobuf:"bytes,2,opt,name=quantity_uom,json=quantityUom,proto3,oneof" json:"quantity_uom,omitempty"`
	QuantityDecimals *common.UInt32ValueList `protobuf:"bytes,3,opt,name=quantity_decimals,json=quantityDecimals,proto3,oneof" json:"quantity_decimals,omitempty"`
	PriceUom         *uoms.SelectList        `protobuf:"bytes,4,opt,name=price_uom,json=priceUom,proto3,oneof" json:"price_uom,omitempty"`
	PriceDecimals    *common.UInt32ValueList `protobuf:"bytes,5,opt,name=price_decimals,json=priceDecimals,proto3,oneof" json:"price_decimals,omitempty"`
	VolumeDecimals   *common.UInt32ValueList `protobuf:"bytes,6,opt,name=volume_decimals,json=volumeDecimals,proto3,oneof" json:"volume_decimals,omitempty"`
	Status           *common.StatusList      `protobuf:"bytes,7,opt,name=status,proto3,oneof" json:"status,omitempty"`
}

func (x *GetListRequest) Reset() {
	*x = GetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tradingpairs_tradingpairs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRequest) ProtoMessage() {}

func (x *GetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tradingpairs_tradingpairs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRequest.ProtoReflect.Descriptor instead.
func (*GetListRequest) Descriptor() ([]byte, []int) {
	return file_tradingpairs_tradingpairs_proto_rawDescGZIP(), []int{10}
}

func (x *GetListRequest) GetSymbol() string {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return ""
}

func (x *GetListRequest) GetQuantityUom() *uoms.SelectList {
	if x != nil {
		return x.QuantityUom
	}
	return nil
}

func (x *GetListRequest) GetQuantityDecimals() *common.UInt32ValueList {
	if x != nil {
		return x.QuantityDecimals
	}
	return nil
}

func (x *GetListRequest) GetPriceUom() *uoms.SelectList {
	if x != nil {
		return x.PriceUom
	}
	return nil
}

func (x *GetListRequest) GetPriceDecimals() *common.UInt32ValueList {
	if x != nil {
		return x.PriceDecimals
	}
	return nil
}

func (x *GetListRequest) GetVolumeDecimals() *common.UInt32ValueList {
	if x != nil {
		return x.VolumeDecimals
	}
	return nil
}

func (x *GetListRequest) GetStatus() *common.StatusList {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetListResponse_Error
	//	*GetListResponse_Tradingpair
	Response isGetListResponse_Response `protobuf_oneof:"response"`
}

func (x *GetListResponse) Reset() {
	*x = GetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tradingpairs_tradingpairs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListResponse) ProtoMessage() {}

func (x *GetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tradingpairs_tradingpairs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListResponse.ProtoReflect.Descriptor instead.
func (*GetListResponse) Descriptor() ([]byte, []int) {
	return file_tradingpairs_tradingpairs_proto_rawDescGZIP(), []int{11}
}

func (m *GetListResponse) GetResponse() isGetListResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetListResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*GetListResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetListResponse) GetTradingpair() *TradingPair {
	if x, ok := x.GetResponse().(*GetListResponse_Tradingpair); ok {
		return x.Tradingpair
	}
	return nil
}

type isGetListResponse_Response interface {
	isGetListResponse_Response()
}

type GetListResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetListResponse_Tradingpair struct {
	Tradingpair *TradingPair `protobuf:"bytes,2,opt,name=tradingpair,proto3,oneof"`
}

func (*GetListResponse_Error) isGetListResponse_Response() {}

func (*GetListResponse_Tradingpair) isGetListResponse_Response() {}

// A delete request is just an update request with status set to TERMINATED.
type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select *Select `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tradingpairs_tradingpairs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tradingpairs_tradingpairs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_tradingpairs_tradingpairs_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteRequest) GetSelect() *Select {
	if x != nil {
		return x.Select
	}
	return nil
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*DeleteResponse_Error
	//	*DeleteResponse_Tradingpair
	Response isDeleteResponse_Response `protobuf_oneof:"response"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tradingpairs_tradingpairs_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tradingpairs_tradingpairs_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_tradingpairs_tradingpairs_proto_rawDescGZIP(), []int{13}
}

func (m *DeleteResponse) GetResponse() isDeleteResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeleteResponse) GetError() *common.Error {
	if x, ok := x.GetResponse().(*DeleteResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DeleteResponse) GetTradingpair() *TradingPair {
	if x, ok := x.GetResponse().(*DeleteResponse_Tradingpair); ok {
		return x.Tradingpair
	}
	return nil
}

type isDeleteResponse_Response interface {
	isDeleteResponse_Response()
}

type DeleteResponse_Error struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeleteResponse_Tradingpair struct {
	Tradingpair *TradingPair `protobuf:"bytes,2,opt,name=tradingpair,proto3,oneof"`
}

func (*DeleteResponse_Error) isDeleteResponse_Response() {}

func (*DeleteResponse_Tradingpair) isDeleteResponse_Response() {}

var File_tradingpairs_tradingpairs_proto protoreflect.FileDescriptor

var file_tradingpairs_tradingpairs_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x73, 0x2f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x73, 0x1a,
	0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0f, 0x75, 0x6f, 0x6d, 0x73, 0x2f, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xb0, 0x02, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x69, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x2c, 0x0a, 0x0c, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x55, 0x6f, 0x4d, 0x52, 0x0b, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6f, 0x6d, 0x12, 0x2b, 0x0a, 0x11, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75,
	0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e,
	0x55, 0x6f, 0x4d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x55, 0x6f, 0x6d, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x26, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x35, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x06,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x15, 0x0a, 0x05, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x62, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x09, 0x62, 0x79, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x62, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x08, 0x0a, 0x06,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x36, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72,
	0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xf4,
	0x02, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x2f, 0x0a, 0x0c, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6f, 0x6d, 0x12, 0x30, 0x0a, 0x11, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x10, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x09, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x55, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01,
	0x52, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x64, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x0e, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x64, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x3d, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61,
	0x69, 0x72, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x48,
	0x00, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x42, 0x0a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xeb, 0x03, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x0c, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x75, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x01, 0x52, 0x0b, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a,
	0x11, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x10, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x2e, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x48, 0x03, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x55, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x05, 0x52, 0x0e, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x44, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x06, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75,
	0x6f, 0x6d, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x5f, 0x75, 0x6f, 0x6d, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x70, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x69, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69,
	0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x7f, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x3d, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61,
	0x69, 0x72, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x48,
	0x00, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x42, 0x0a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x95, 0x04, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x0c, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x01, 0x52, 0x0b, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6f,
	0x6d, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x11, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x02, 0x52, 0x10, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x32, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x6f, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x03, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x55, 0x6f, 0x6d,
	0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x04, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0f, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x05, 0x52, 0x0e, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x06, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6f, 0x6d, 0x42, 0x14, 0x0a, 0x12,
	0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x6f, 0x6d,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3d, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72,
	0x73, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x48, 0x00, 0x52,
	0x0b, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x3d, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x70, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69,
	0x72, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x98, 0x01, 0x0a,
	0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72,
	0x73, 0x42, 0x11, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x21, 0x64, 0x61, 0x76, 0x65, 0x6e, 0x73, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x73, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa,
	0x02, 0x0c, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x73, 0xca, 0x02,
	0x0c, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x73, 0xe2, 0x02, 0x18,
	0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x73, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x54, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x70, 0x61, 0x69, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tradingpairs_tradingpairs_proto_rawDescOnce sync.Once
	file_tradingpairs_tradingpairs_proto_rawDescData = file_tradingpairs_tradingpairs_proto_rawDesc
)

func file_tradingpairs_tradingpairs_proto_rawDescGZIP() []byte {
	file_tradingpairs_tradingpairs_proto_rawDescOnce.Do(func() {
		file_tradingpairs_tradingpairs_proto_rawDescData = protoimpl.X.CompressGZIP(file_tradingpairs_tradingpairs_proto_rawDescData)
	})
	return file_tradingpairs_tradingpairs_proto_rawDescData
}

var file_tradingpairs_tradingpairs_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_tradingpairs_tradingpairs_proto_goTypes = []interface{}{
	(*TradingPair)(nil),            // 0: tradingpairs.TradingPair
	(*List)(nil),                   // 1: tradingpairs.List
	(*Select)(nil),                 // 2: tradingpairs.Select
	(*SelectList)(nil),             // 3: tradingpairs.SelectList
	(*CreateRequest)(nil),          // 4: tradingpairs.CreateRequest
	(*CreateResponse)(nil),         // 5: tradingpairs.CreateResponse
	(*UpdateRequest)(nil),          // 6: tradingpairs.UpdateRequest
	(*UpdateResponse)(nil),         // 7: tradingpairs.UpdateResponse
	(*GetRequest)(nil),             // 8: tradingpairs.GetRequest
	(*GetResponse)(nil),            // 9: tradingpairs.GetResponse
	(*GetListRequest)(nil),         // 10: tradingpairs.GetListRequest
	(*GetListResponse)(nil),        // 11: tradingpairs.GetListResponse
	(*DeleteRequest)(nil),          // 12: tradingpairs.DeleteRequest
	(*DeleteResponse)(nil),         // 13: tradingpairs.DeleteResponse
	(*uoms.UoM)(nil),               // 14: uoms.UoM
	(common.Status)(0),             // 15: common.Status
	(*uoms.Select)(nil),            // 16: uoms.Select
	(*common.Error)(nil),           // 17: common.Error
	(*uoms.SelectList)(nil),        // 18: uoms.SelectList
	(*common.UInt32ValueList)(nil), // 19: common.UInt32ValueList
	(*common.StatusList)(nil),      // 20: common.StatusList
}
var file_tradingpairs_tradingpairs_proto_depIdxs = []int32{
	14, // 0: tradingpairs.TradingPair.quantity_uom:type_name -> uoms.UoM
	14, // 1: tradingpairs.TradingPair.price_uom:type_name -> uoms.UoM
	15, // 2: tradingpairs.TradingPair.status:type_name -> common.Status
	0,  // 3: tradingpairs.List.list:type_name -> tradingpairs.TradingPair
	2,  // 4: tradingpairs.SelectList.list:type_name -> tradingpairs.Select
	16, // 5: tradingpairs.CreateRequest.quantity_uom:type_name -> uoms.Select
	16, // 6: tradingpairs.CreateRequest.price_uom:type_name -> uoms.Select
	15, // 7: tradingpairs.CreateRequest.status:type_name -> common.Status
	17, // 8: tradingpairs.CreateResponse.error:type_name -> common.Error
	0,  // 9: tradingpairs.CreateResponse.tradingpair:type_name -> tradingpairs.TradingPair
	2,  // 10: tradingpairs.UpdateRequest.select:type_name -> tradingpairs.Select
	16, // 11: tradingpairs.UpdateRequest.quantity_uom:type_name -> uoms.Select
	16, // 12: tradingpairs.UpdateRequest.price_uom:type_name -> uoms.Select
	15, // 13: tradingpairs.UpdateRequest.status:type_name -> common.Status
	17, // 14: tradingpairs.UpdateResponse.error:type_name -> common.Error
	0,  // 15: tradingpairs.UpdateResponse.tradingpair:type_name -> tradingpairs.TradingPair
	2,  // 16: tradingpairs.GetRequest.select:type_name -> tradingpairs.Select
	17, // 17: tradingpairs.GetResponse.error:type_name -> common.Error
	0,  // 18: tradingpairs.GetResponse.tradingpair:type_name -> tradingpairs.TradingPair
	18, // 19: tradingpairs.GetListRequest.quantity_uom:type_name -> uoms.SelectList
	19, // 20: tradingpairs.GetListRequest.quantity_decimals:type_name -> common.UInt32ValueList
	18, // 21: tradingpairs.GetListRequest.price_uom:type_name -> uoms.SelectList
	19, // 22: tradingpairs.GetListRequest.price_decimals:type_name -> common.UInt32ValueList
	19, // 23: tradingpairs.GetListRequest.volume_decimals:type_name -> common.UInt32ValueList
	20, // 24: tradingpairs.GetListRequest.status:type_name -> common.StatusList
	17, // 25: tradingpairs.GetListResponse.error:type_name -> common.Error
	0,  // 26: tradingpairs.GetListResponse.tradingpair:type_name -> tradingpairs.TradingPair
	2,  // 27: tradingpairs.DeleteRequest.select:type_name -> tradingpairs.Select
	17, // 28: tradingpairs.DeleteResponse.error:type_name -> common.Error
	0,  // 29: tradingpairs.DeleteResponse.tradingpair:type_name -> tradingpairs.TradingPair
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_tradingpairs_tradingpairs_proto_init() }
func file_tradingpairs_tradingpairs_proto_init() {
	if File_tradingpairs_tradingpairs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tradingpairs_tradingpairs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradingPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tradingpairs_tradingpairs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tradingpairs_tradingpairs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Select); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tradingpairs_tradingpairs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tradingpairs_tradingpairs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tradingpairs_tradingpairs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tradingpairs_tradingpairs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tradingpairs_tradingpairs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tradingpairs_tradingpairs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tradingpairs_tradingpairs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tradingpairs_tradingpairs_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tradingpairs_tradingpairs_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tradingpairs_tradingpairs_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tradingpairs_tradingpairs_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tradingpairs_tradingpairs_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Select_ById)(nil),
		(*Select_BySymbol)(nil),
	}
	file_tradingpairs_tradingpairs_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_tradingpairs_tradingpairs_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*CreateResponse_Error)(nil),
		(*CreateResponse_Tradingpair)(nil),
	}
	file_tradingpairs_tradingpairs_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_tradingpairs_tradingpairs_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*UpdateResponse_Error)(nil),
		(*UpdateResponse_Tradingpair)(nil),
	}
	file_tradingpairs_tradingpairs_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*GetResponse_Error)(nil),
		(*GetResponse_Tradingpair)(nil),
	}
	file_tradingpairs_tradingpairs_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_tradingpairs_tradingpairs_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*GetListResponse_Error)(nil),
		(*GetListResponse_Tradingpair)(nil),
	}
	file_tradingpairs_tradingpairs_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*DeleteResponse_Error)(nil),
		(*DeleteResponse_Tradingpair)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tradingpairs_tradingpairs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tradingpairs_tradingpairs_proto_goTypes,
		DependencyIndexes: file_tradingpairs_tradingpairs_proto_depIdxs,
		MessageInfos:      file_tradingpairs_tradingpairs_proto_msgTypes,
	}.Build()
	File_tradingpairs_tradingpairs_proto = out.File
	file_tradingpairs_tradingpairs_proto_rawDesc = nil
	file_tradingpairs_tradingpairs_proto_goTypes = nil
	file_tradingpairs_tradingpairs_proto_depIdxs = nil
}

syntax = "proto3";

package addresses;

import "common/errors.proto";
import "common/statuses.proto";
import "countries/countries.proto";
import "kyc/kyc.proto";
import "google/protobuf/timestamp.proto";

// TO-DO: to be completed
enum Type {
  TYPE_UNSPECIFIED = 0;
  TYPE_RESIDENCE = 1;
  TYPE_OFFICE = 2;
  TYPE_SHOP = 3;
}

message TypeList {
  repeated Type list = 1;
}

// Backed by table 'addresses'
message Address {
  string id = 1; // System Key: id is generated by the server or the database
  Type type = 2;
  countries.Country country = 3;
  optional string building = 4;
  optional string floor = 5;
  optional string unit = 6;
  optional string street_num = 7;
  optional string street_name = 8;
  optional string district = 9;
  optional string locality = 10;
  optional string zip_code = 11;
  optional string region = 12;
  optional string state = 13;
  common.Status status = 14;
}

message List {
  repeated Address list = 1;
}

message SelectList {
  repeated string list = 1;
}

message CreateRequest {
  // id is generated by the server or the database
  optional Type type = 1; // Default: TYPE_UNSPECIFIED
  countries.Select country = 2;
  optional string building = 3;
  optional string floor = 4;
  optional string unit = 5;
  optional string street_num = 6;
  optional string street_name = 7;
  optional string district = 8;
  optional string locality = 9;
  optional string zip_code = 10;
  optional string region = 11;
  optional string state = 12;
  optional common.Status status = 13;
}

message CreateResponse {
  oneof response {
    common.Error error = 1;
    Address address = 2;
  }
}

message UpdateRequest {
  string id = 1;
  optional Type type = 2;
  optional countries.Select country = 3;
  optional string building = 4;
  optional string floor = 5;
  optional string unit = 6;
  optional string street_num = 7;
  optional string street_name = 8;
  optional string district = 9;
  optional string locality = 10;
  optional string zip_code = 11;
  optional string region = 12;
  optional string state = 13;
  optional common.Status status = 14;
}

message UpdateResponse {
  oneof response {
    common.Error error = 1;
    Address address = 2;
  }
}

// GetRequest is expected to return a single value.
message GetRequest {
  string id = 1;
}

// An error is returned if there is more than one record found.
message GetResponse {
  oneof response {
    common.Error error = 1;
    Address address = 2;
  }
}

// GetList will use SQL 'LIKE' instead of '=' for string fields
message GetListRequest {
  optional TypeList type = 1;
  optional countries.GetListRequest country = 2;
  optional string building = 3;
  optional string floor = 4;
  optional string unit = 5;
  optional string street_num = 6;
  optional string street_name = 7;
  optional string district = 8;
  optional string locality = 9;
  optional string zip_code = 10;
  optional string region = 11;
  optional string state = 12;
  optional common.StatusList status = 13;
}

message GetListResponse {
  oneof response {
    common.Error error = 1;
    Address address = 2;
  }
}

message AddressList {
  repeated Address addresses = 1;
}

message GetListArrayResponse {
  oneof response {
    common.Error error = 1;
    AddressList address = 2;
  }
}

// A delete request is just an update request with status set to TERMINATED.
message DeleteRequest {
  string id = 1;
}

message DeleteResponse {
  oneof response {
    common.Error error = 1;
    Address address = 2;
  }
}

// Labeled Address messages are used in Entities that requires Labeled Address Assignment

enum OwnershipStatus {
  OWNERSHIP_STATUS_UNSPECIFIED = 0;
  OWNERSHIP_STATUS_OWNED = 1;
  OWNERSHIP_STATUS_RENTED = 2;
  OWNERSHIP_STATUS_HOSTED = 3;
  OWNERSHIP_STATUS_OTHER = 255;
}

message LabeledAddress {
  string label = 1;
  Address address = 2;
  optional bool main_address = 3;
  optional OwnershipStatus ownership_status = 4;
  kyc.Status status = 5;
}

message LabeledAddressList {
  repeated LabeledAddress list = 1;
}

// Assign existing address or create and assign new address to Entity
message SetLabeledAddress {
  string label = 1;
  oneof select {
    string id = 2;
    CreateRequest address = 3;
  }
  optional kyc.Status status = 4;
  optional bool main_address = 5;
  optional OwnershipStatus ownership_status = 6;
}

message SetLabeledAddressList {
  repeated SetLabeledAddress list = 1;
}

message UpdateLabeledAddress {
  optional string label = 1;
  optional Type type = 2;
  optional countries.Select country = 3;
  optional string building = 4;
  optional string floor = 5;
  optional string unit = 6;
  optional string street_num = 7;
  optional string street_name = 8;
  optional string district = 9;
  optional string locality = 10;
  optional string zip_code = 11;
  optional string region = 12;
  optional string state = 13;
  optional common.Status status = 14;
}

message UpdateLabeledAddressRequest {
  string by_label = 1;
  UpdateLabeledAddress address = 2;
  optional kyc.Status status = 3;
  optional bool main_address = 4;
  optional OwnershipStatus ownership_status = 5;
}

// Unlabeled Address messages are used in Entities that requires Unlabeled Address Assignment

message UpdateAddress {
  optional Type type = 1;
  optional countries.Select country = 2;
  optional string building = 3;
  optional string floor = 4;
  optional string unit = 5;
  optional string street_num = 6;
  optional string street_name = 7;
  optional string district = 8;
  optional string locality = 9;
  optional string zip_code = 10;
  optional string region = 11;
  optional string state = 12;
  optional common.Status status = 13;
}

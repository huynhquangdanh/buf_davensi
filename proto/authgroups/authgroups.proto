syntax = "proto3";

package authgroups;

import "common/errors.proto";
import "common/statuses.proto";

// Backed by table 'authgroups'
message AuthGroup {
  string id = 1; // System Key: id is generated by the server or the database
  string name = 2; // name is the Human-Readable Key (unique identifier)
  common.Status status = 3;
}

message List {
  repeated AuthGroup list = 1;
}

message Select {
  oneof select {
    string by_id = 1;
    string by_name = 2;
  }
}

message SelectList {
  repeated Select list = 1;
}

message CreateRequest {
  string name = 1;
  optional common.Status status = 2; // Default: 0 (STATUS_UNSPECIFIED)
}

message CreateResponse {
  oneof response {
    common.Error error = 1;
    AuthGroup authgroup = 2;
  }
}

message UpdateRequest {
  Select select = 1;
  optional string name = 2;
  optional common.Status status = 3; // Default: 0 (STATUS_UNSPECIFIED)
}

message UpdateResponse {
  oneof response {
    common.Error error = 1;
    AuthGroup authgroup = 2;
  }
}

message GetRequest {
  Select select = 1;
}

message GetResponse {
  oneof response {
    common.Error error = 1;
    AuthGroup authgroup = 2;
  }
}

// GetList will use SQL 'LIKE' instead of '=' for string fields
message GetListRequest {
  optional string name = 1;
  optional common.StatusList status = 2;
}

message GetListResponse { // ListResponse is formatted for streaming
  oneof response {
    common.Error error = 1;
    AuthGroup authgroup = 2;
  }
}

// A delete request is just an update request with status set to TERMINATED.
message DeleteRequest {
  Select select = 1;
}

message DeleteResponse {
  oneof response {
    common.Error error = 1;
    AuthGroup authgroup = 2;
  }
}

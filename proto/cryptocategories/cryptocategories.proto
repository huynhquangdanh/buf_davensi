syntax = "proto3";

package cryptocategories;

import "common/errors.proto";
import "common/statuses.proto";
import "uoms/uoms.proto";
import "cryptos/cryptos.proto";

enum Type {
  TYPE_UNSPECIFIED = 0;
  TYPE_COIN = 1;
  TYPE_UTILITY_TOKEN = 2;
  TYPE_SECURITY_TOKEN = 3;
}

message TypeList {
  repeated Type list = 1;
}

// Backed by table 'cryptocategories'
message CryptoCategory {
  string id = 1; // System Key: id is generated by the server or the database
  string name = 2; // Human-Readable Key (unique identifier)
  optional string icon = 3;
  optional CryptoCategory parent = 4;
  // TO-DO: add more fields from table 'cryptocategories'
  common.Status status = 5;
  optional cryptos.List cryptos = 6;
}

message List {
  repeated CryptoCategory list = 1;
}

message Select {
  oneof select {
    string by_id = 1;
    string by_name = 2;
  }
}

message SelectList {
  repeated Select list = 1;
}

message CreateRequest {
  // id is generated by the server or the database
  string name = 1;
  optional Type type = 2; // Default: TYPE_UNSPECIFIED
  optional string icon = 3;
  optional Select parent = 4;
  optional common.Status status = 5; // Default: STATUS_UNSPECIFIED, which means CryptoCategory needs to be activated after creation
  optional uoms.SelectList cryptos = 6;
}

message CreateResponse {
  oneof response {
    common.Error error = 1;
    CryptoCategory cryptocategory = 2;
  }
}

message UpdateRequest {
  oneof select {
    string by_id = 1;
    string by_name = 2;
  }
  optional string name = 3;
  optional Type type = 4;
  optional string icon = 5;
  optional Select parent = 6;
  optional common.Status status = 7;
}

message UpdateResponse {
  oneof response {
    common.Error error = 1;
    CryptoCategory cryptocategory = 2;
  }
}

// GetRequest is expected to return a single value.
message GetRequest {
  oneof select {
    string by_id = 1;
    string by_name = 2;
  }
  optional bool with_cryptos = 3;
}

// An error is returned if there is more than one record found.
message GetResponse {
  oneof response {
    common.Error error = 1;
    CryptoCategory cryptocategory = 2;
  }
}

// GetList will use SQL 'LIKE' instead of '=' for string fields
message GetListRequest {
  optional string name = 1;
  optional TypeList type = 2;
  optional string icon = 3;
  optional SelectList parent = 4;
  optional common.StatusList status = 5;
  optional cryptos.GetListRequest cryptos = 6; // "with_cryptos" is implicit when specifying cryptos search criteria
}

message GetListResponse {
  oneof response {
    common.Error error = 1;
    CryptoCategory cryptocategory = 2;
  }
}

// A delete request is just an update request with status set to TERMINATED.
message DeleteRequest {
  oneof select {
    string by_id = 1;
    string by_name = 2;
  }
}

message DeleteResponse {
  oneof response {
    common.Error error = 1;
    CryptoCategory cryptocategory = 2;
  }
}

// The following messages manage the assignment of cryptos and cryptocategories to a country

message Crypto {
    string id = 1;
    string code = 2;
    cryptos.Crypto crypto = 3;
  }

  message CryptoList {
    string id = 1;
    string code = 2;
    cryptos.List cryptos = 3;
  }

  message SetCryptosRequest {
    oneof select {
      string by_id = 1;
      string by_code = 2;
    }
    uoms.SelectList cryptos = 3;
  }

  message SetCryptosResponse {
    oneof response {
      common.Error error = 1;
      CryptoList cryptos = 2;
    }
  }

  message AddCryptosRequest {
    oneof select {
      string by_id = 1;
      string by_code = 2;
    }
    uoms.SelectList cryptos = 3;
  }

  message AddCryptosResponse {
    oneof response {
      common.Error error = 1;
      CryptoList cryptos = 2;
    }
  }

  message UpdateCryptoRequest {
    oneof select {
      string by_id = 1;
      string by_code = 2;
    }
    cryptos.UpdateRequest cryptos = 3;
  }

  message UpdateCryptoResponse {
    oneof response {
      common.Error error = 1;
      Crypto crypto = 2;
    }
  }

  // A remove cryptos request is just a crypto update request with status set to TERMINATED in table 'cryptocategories_cryptos'
  message RemoveCryptosRequest {
    oneof select {
      string by_id = 1;
      string by_name = 2;
    }
    uoms.SelectList cryptos = 3;
  }

  message RemoveCryptosResponse {
    oneof response {
      common.Error error = 1;
      CryptoList cryptos = 2;
    }
  }

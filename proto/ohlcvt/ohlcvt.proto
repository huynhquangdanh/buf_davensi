syntax = "proto3";

package ohlcvt;

import "common/errors.proto";
import "common/numbers.proto";
import "common/statuses.proto";
import "common/timeseries.proto";
import "google/protobuf/timestamp.proto";
import "datasources/datasources.proto";
import "markets/markets.proto";

// Backed by table 'ohlcvt'
message OHLCVT {
  string id = 1; // System Key: id is generated by the server or the database
  datasources.DataSource source = 2; // source + market + type + timestamp form the Human-Readable Key (unique identifier)
  markets.Market market = 3; // source + market + type + timestamp form the Human-Readable Key (unique identifier)
  markets.PriceType price_type = 4; // source + market + type + timestamp form the Human-Readable Key (unique identifier)
  google.protobuf.Timestamp timestamp = 5; // source + market + type + timestamp form the Human-Readable Key (unique identifier)
  common.Decimal open = 6;
  common.Decimal high = 7;
  common.Decimal low = 8;
  common.Decimal close = 9;
  common.Decimal volume_in_quantity_uom = 10;
  common.Decimal volume_in_price_uom = 11;
  uint32 trades = 12;
  common.Status status = 13;
}

message List {
  repeated OHLCVT list = 1;
}

message OHLCVTKey {
  datasources.DataSource source = 1;
  markets.Market market = 2;
  markets.PriceType price_type = 3;
  google.protobuf.Timestamp timestamp = 4;
}

message Select {
  oneof select {
    string by_id = 1;
    OHLCVTKey by_ohlcvt_key = 2;
  }
}

message SelectList {
  repeated Select list = 1;
}

message CreateRequest {
  // id is generated by the server or the database
  datasources.Select source = 1;
  markets.Select market = 2;
  markets.PriceType price_type = 3;
  google.protobuf.Timestamp timestamp = 4;
  common.Decimal open = 5;
  common.Decimal high = 6;
  common.Decimal low = 7;
  common.Decimal close = 8;
  common.Decimal volume_in_quantity_uom = 9;
  common.Decimal volume_in_price_uom = 10;
  uint32 trades = 11;
  common.Status status = 12;
}

message CreateResponse {
  oneof response {
    common.Error error = 1;
    OHLCVT ohlcvt = 2;
  }
}

message UpdateRequest {
  Select select = 1;
  optional datasources.Select source = 2;
  optional markets.Select market = 3;
  optional markets.PriceType price_type = 4;
  optional google.protobuf.Timestamp timestamp = 5;
  optional common.Decimal open = 6;
  optional common.Decimal high = 7;
  optional common.Decimal low = 8;
  optional common.Decimal close = 9;
  optional common.Decimal volume_in_quantity_uom = 10;
  optional common.Decimal volume_in_price_uom = 11;
  optional uint32 trades = 12;
  optional common.Status status = 13;
}

message UpdateResponse {
  oneof response {
    common.Error error = 1;
    OHLCVT ohlcvt = 2;
  }
}

// GetRequest is expected to return a single value.
message GetRequest {
  Select select = 1;
}

// An error is returned if there is more than one record found.
message GetResponse {
  oneof response {
    common.Error error = 1;
    OHLCVT ohlcvt = 2;
  }
}

// GetList will use SQL 'LIKE' instead of '=' for string fields
message GetListRequest {
  optional datasources.GetListRequest source = 1;
  optional markets.GetListRequest market = 2;
  optional markets.PriceTypeList type = 3;
  optional common.TimestampValueList timestamp = 4;
  optional common.DecimalValueList open = 5;
  optional common.DecimalValueList high = 6;
  optional common.DecimalValueList low = 7;
  optional common.DecimalValueList close = 8;
  optional common.DecimalValueList volume_in_quantity_uom = 9;
  optional common.DecimalValueList volume_in_price_uom = 10;
  optional common.UInt32ValueList trades = 11;
  optional common.StatusList status = 12;
}

message GetListResponse { // ListResponse is formatted for streaming
  oneof response {
    common.Error error = 1;
    OHLCVT ohlcvt = 2;
  }
}

// A delete request is just an update request with status set to TERMINATED.
message DeleteRequest {
  Select select = 1;
}

message DeleteResponse {
  oneof response {
    common.Error error = 1;
    OHLCVT ohlcvt = 2;
  }
}

// Time Series

message TimeValue {
  google.protobuf.Timestamp timestamp = 1;
  common.DecimalValueList open = 2;
  common.DecimalValueList high = 3;
  common.DecimalValueList low = 4;
  common.DecimalValueList close = 5;
  common.DecimalValueList volume_in_quantity_uom = 6;
  common.DecimalValueList volume_in_price_uom = 7;
  common.UInt32ValueList trades = 8;
}

message TimeSeries {
  repeated TimeValue list = 1;
}

message GetTimeSeriesRequest {
  datasources.DataSource source = 1;
  markets.Market market = 2;
  markets.PriceType price_type = 3;
  optional common.Timescale timescale = 4; // Default: UNSPECIFIED
  common.TimestampValueList timestamp = 5;
}

message GetTimeSeriesResponse {
  datasources.Select source = 1;
  markets.Select market = 2;
  markets.PriceType price_type = 3;
  optional common.Timescale timescale = 4; // Only when UNSPECIFIED
  TimeSeries values = 5;
}

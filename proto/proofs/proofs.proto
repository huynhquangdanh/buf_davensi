syntax = "proto3";

package proofs;

import "common/errors.proto";
import "kyc/kyc.proto";
import "google/protobuf/timestamp.proto";
import "documents/documents.proto";

// Backed by table 'kyc_proofs'
message Proof {
  string id = 1; // System Key: id is generated by the server or the database
  kyc.Section section = 2;
  string record_id = 3;
  optional string document_type = 4;
  optional string name = 5;
  optional documents.Document document = 6;
  kyc.Status status = 7;
}

message List {
  repeated Proof list = 1;
}

message SelectList {
  repeated string list = 1;
}

message CreateRequest {
  // id is generated by the server or the database
  optional kyc.Section section = 1; // Default: TYPE_UNSPECIFIED
  optional string record_id = 2;
  optional string document_type = 3;
  optional string name = 4;
  optional documents.CreateRequest document = 5;
  optional kyc.Status status = 6;
}

message CreateResponse {
  oneof response {
    common.Error error = 1;
    Proof proof = 2;
  }
}

message UpdateRequest {
  string id = 1;
  optional kyc.Section section = 2;
  optional string record_id = 3;
  optional string document_type = 4;
  optional string name = 5;
  optional documents.UpdateDocument document = 6;
  optional kyc.Status status = 7;
}

message UpdateResponse {
  oneof response {
    common.Error error = 1;
    Proof proof = 2;
  }
}

// GetRequest is expected to return a single value.
message GetRequest {
  string id = 1;
}

// An error is returned if there is more than one record found.
message GetResponse {
  oneof response {
    common.Error error = 1;
    Proof proof = 2;
  }
}

// GetList will use SQL 'LIKE' instead of '=' for string fields
message GetListRequest {
  optional kyc.SectionList section = 1;
  optional string record_id = 2;
  optional string document_type = 3;
  optional string name = 4;
  optional documents.GetListRequest document = 5;
  optional kyc.StatusList status = 6;
}

message GetListResponse {
  oneof response {
    common.Error error = 1;
    Proof proof = 2;
  }
}

// A delete request is just an update request with status set to TERMINATED.
message DeleteRequest {
  string id = 1;
}

message DeleteResponse {
  oneof response {
    common.Error error = 1;
    Proof proof = 2;
  }
}

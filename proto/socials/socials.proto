syntax = "proto3";

package socials;

import "common/errors.proto";
import "kyc/kyc.proto";
import "common/numbers.proto";
import "google/protobuf/timestamp.proto";

// Backed by table 'kyc_socials'
message Social {
  string id = 1; // System Key: id is generated by the server or the database
  optional string relationship_status = 2;
  optional string religion = 3;
  optional string social_class = 4;
  optional string profession = 5;
  kyc.Status status = 6;
}

message List {
  repeated Social list = 1;
}

message SelectList {
  repeated string list = 1;
}

message CreateRequest {
  // id is generated by the server or the database
  optional string relationship_status = 1;
  optional string religion = 2;
  optional string social_class = 3;
  optional string profession = 4;
  optional kyc.Status status = 5;
}

message CreateResponse {
  oneof response {
    common.Error error = 1;
    Social social = 2;
  }
}

message UpdateRequest {
  string id = 1;
  optional string relationship_status = 2;
  optional string religion = 3;
  optional string social_class = 4;
  optional string profession = 5;
  optional kyc.Status status = 6;
}

message UpdateResponse {
  oneof response {
    common.Error error = 1;
    Social social = 2;
  }
}

// GetRequest is expected to return a single value.
message GetRequest {
  string id = 1;
}

// An error is returned if there is more than one record found.
message GetResponse {
  oneof response {
    common.Error error = 1;
    Social social = 2;
  }
}

// GetList will use SQL 'LIKE' instead of '=' for string fields
message GetListRequest {
  optional string relationship_status = 2;
  optional string religion = 3;
  optional string social_class = 4;
  optional string profession = 5;
  optional kyc.StatusList status = 6;
}

message GetListResponse {
  oneof response {
    common.Error error = 1;
    Social social = 2;
  }
}

// A delete request is just an update request with status set to TERMINATED.
message DeleteRequest {
  string id = 1;
}

message DeleteResponse {
  oneof response {
    common.Error error = 1;
    Social social = 2;
  }
}

// This is to be used in Entities that requires Social Assignment

message UpdateSocial {
  optional string relationship_status = 1;
  optional string religion = 2;
  optional string social_class = 3;
  optional string profession = 4;
  optional kyc.StatusList status = 5;
}

syntax = "proto3";

package tradingpairs;

import "common/errors.proto";
import "common/numbers.proto";
import "common/statuses.proto";
import "uoms/uoms.proto";

// Backed by table 'tradingpairs'
message TradingPair {
  string id = 1; // System Key: id is generated by the server or the database
  string symbol = 2; // Human-Readable Key (unique identifier)
  uoms.UoM quantity_uom = 3;
  uint32 quantity_decimals = 4;
  uoms.UoM price_uom = 5;
  uint32 price_decimals = 6;
  uint32 volume_decimals = 7;
  common.Status status = 8;
}

message List {
  repeated TradingPair list = 1;
}

message Select {
  oneof select {
    string by_id = 1;
    string by_symbol = 2;
  }
}

message SelectList {
  repeated Select list = 1;
}

message CreateRequest {
  // id is generated by the server or the database
  string symbol = 1;
  uoms.Select quantity_uom = 2;
  optional uint32 quantity_decimals = 3; // Default: displayed_decimals of related UoM
  uoms.Select price_uom = 4;
  optional uint32 price_decimals = 5; // Default: displayed_decimals of related UoM
  optional uint32 volume_decimals = 6; // Default: price_decimals
  common.Status status = 7; // Default: 0
}

message CreateResponse {
  oneof response {
    common.Error error = 1;
    TradingPair tradingpair = 2;
  }
}

message UpdateRequest {
  Select select = 1;
  optional string symbol = 2;
  optional uoms.Select quantity_uom = 3;
  optional uint32 quantity_decimals = 4;
  optional uoms.Select price_uom = 5;
  optional uint32 price_decimals = 6;
  optional uint32 volume_decimals = 7;
  optional common.Status status = 8;
}

message UpdateResponse {
  oneof response {
    common.Error error = 1;
    TradingPair tradingpair = 2;
  }
}

// GetRequest is expected to return a single value.
message GetRequest {
  Select select = 1;
}

// An error is returned if there is more than one record found.
message GetResponse {
  oneof response {
    common.Error error = 1;
    TradingPair tradingpair = 2;
  }
}

// GetList will use SQL 'LIKE' instead of '=' for string fields
message GetListRequest {
  optional string symbol = 1;
  optional uoms.SelectList quantity_uom = 2;
  optional common.UInt32ValueList quantity_decimals = 3;
  optional uoms.SelectList price_uom = 4;
  optional common.UInt32ValueList price_decimals = 5;
  optional common.UInt32ValueList volume_decimals = 6;
  optional common.StatusList status = 7;
}

message GetListResponse { // ListResponse is formatted for streaming
  oneof response {
    common.Error error = 1;
    TradingPair tradingpair = 2;
  }
}

// A delete request is just an update request with status set to TERMINATED.
message DeleteRequest {
  Select select = 1;
}

message DeleteResponse {
  oneof response {
    common.Error error = 1;
    TradingPair tradingpair = 2;
  }
}

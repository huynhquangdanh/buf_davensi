syntax = "proto3";

package transactions;

import "authgroups/authgroups.proto";
import "common/errors.proto";
import "common/numbers.proto";
import "common/statuses.proto";
import "datasources/datasources.proto";
import "google/protobuf/timestamp.proto";
import "ledgers/ledgers.proto";
import "legalentities/legalentities.proto";
import "orgs/orgs.proto";
import "prices/prices.proto";
import "recipients/recipients.proto";
import "uoms/uoms.proto";
import "users/users.proto";

enum Type {
  TYPE_UNSPECIFIED = 0;
  TYPE_DEPOSIT = 1;
  TYPE_DEPOSIT_AIRDOP = 2;
  TYPE_DEPOSIT_FORK = 3;
  TYPE_DEPOSIT_GIFT = 4;
  TYPE_DEPOSIT_MINING = 5;
  TYPE_DEPOSIT_STAKING_REWARD = 6;
  TYPE_DEPOSIT_INTEREST = 7;
  TYPE_DEPOSIT_LOAN = 8;
  TYPE_DEPOSIT_INCOME = 9;
  TYPE_DEPOSIT_REWARD = 10;
  TYPE_DEPOSIT_REALIZED_PROFIT = 11;
  TYPE_DEPOSIT_TAX_REFUND = 12;
  TYPE_WITHDRAWAL = 16;
  TYPE_WITHDRAWAL_FEES = 17;
  TYPE_WITHDRAWAL_GIFT = 18;
  TYPE_WITHDRAWAL_LOST = 19;
  TYPE_WITHDRAWAL_DONATION = 20;
  TYPE_WITHDRAWAL_GOODS_SERVICES = 21;
  TYPE_WITHDRAWAL_OTHER_EXPENSES = 22;
  TYPE_WITHDRAWAL_INTEREST = 23;
  TYPE_WITHDRAWAL_LOAN_FEES = 24;
  TYPE_WITHDRAWAL_LOAN_REPAYMENT = 25;
  TYPE_WITHDRAWAL_LIQUIDATION = 26;
  TYPE_WITHDRAWAL_REALIZED_LOSS = 27;
  TYPE_WITHDRAWAL_TAX = 28;
  TYPE_TRADE = 32;
  TYPE_TRADE_BUY = 33; // Buy Crypto with Fiat
  TYPE_TRADE_SELL = 34; // Sell Crypto for Fiat
  TYPE_TRADE_FIAT = 35; // Fiat to Fiat
  TYPE_TRADE_CRYPTO = 36; // Crypto to Crypto
  TYPE_TRANSFER = 64; // Internal Transfer (between 2 recipients of the same user/legalentity)
}

message TypeList {
  repeated Type list = 1;
}

// Backed by table 'transactions' + 'transactionitems' + 'transactionitems_alt'
message Transaction {
  string id = 1; // System Key: id is generated by the server or the database
  Type type = 2;
  datasources.DataSource source = 3;
  legalentities.LegalEntity legalentity = 4;
  ledgers.Ledger ledger = 5;
  google.protobuf.Timestamp posting_date = 6;
  string accounting_period = 7; // Format: YYYYMM (e.g. 202307 for July 2023)
  string accounting_document = 8;
  common.Decimal amount = 9; // Total transaction amount in Transaction Currency
  uoms.UoM currency = 10; // Transaction Currency
  optional Conversion legal_currency1 = 11;
  optional Conversion legal_currency2 = 12;
  optional Conversion legal_currency3 = 13;
  optional AltConversionList alt_conversions = 14;
  optional string reference = 15;
  optional string purpose = 16;
  users.User user = 17;
  authgroups.AuthGroup authgroup = 18;
  optional orgs.Org org = 19;
  common.Status status = 20;
  ItemList items = 21;
}

message List {
  repeated Transaction list = 1;
}

message SelectList {
  repeated string list = 1;
}

message Conversion {
  optional common.Decimal amount = 1;
  optional uoms.UoM currency = 2;
  optional common.Decimal rate = 3;
  optional prices.Price price = 4;
}

message SelectConversion {
  optional common.DecimalValueList amount = 1;
  optional uoms.GetListRequest currency = 2;
  optional common.DecimalValueList rate = 3;
  optional prices.GetListRequest price = 4;
}

message AltConversion {
  uint32 alt = 1;
  common.Decimal amount = 2;
  uoms.UoM currency = 3;
  common.Decimal rate = 4;
  prices.Price price = 5;
  common.Status status = 6;
}

message AltConversionList {
  repeated AltConversion list = 1;
}

message CreateRequest {
  // id is generated by the server or the database
  Type type = 1;
  datasources.Select source = 2;
  legalentities.Select legalentity = 3;
  ledgers.Select ledger = 4;
  optional google.protobuf.Timestamp posting_date = 5; // Default: current timestamp
  optional string accounting_period = 6; // Default: derived from posting_date
  optional string accounting_document = 7; // Default: continugous numbering per legalentity/ledger
  optional common.Decimal amount = 8; // Normally should be calculated automatically from items
  optional uoms.Select currency = 9;
  optional string reference = 10;
  optional string purpose = 11;
  users.Select user = 12;
  optional authgroups.Select authgroup = 13; // Default: derived from user_id
  optional orgs.Select org = 14;
  optional common.Status status = 15; // Default: 1
  CreateItemList items = 16;
}

message CreateResponse {
  oneof response {
    common.Error error = 1;
    Transaction transaction = 2;
  }
}

message UpdateRequest {
  string id = 1;
  optional Type type = 2;
  optional datasources.Select source = 3;
  optional legalentities.Select legalentity = 4;
  optional ledgers.Select ledger = 5;
  optional google.protobuf.Timestamp posting_date = 6;
  optional string accounting_period = 7;
  optional string accounting_document = 8;
  optional common.Decimal amount = 9;
  optional uoms.Select currency = 10;
  optional string reference = 11;
  optional string purpose = 12;
  optional users.Select user = 13;
  optional authgroups.Select authgroup = 14; // Default: derived from user
  optional orgs.Select org = 15;
  optional common.Status status = 16;
  optional UpdateItemList items = 17;
}

message UpdateResponse {
  oneof response {
    common.Error error = 1;
    Transaction transaction = 2;
  }
}

// GetRequest is expected to return a single value.
message GetRequest {
  string id = 1;
}

// An error is returned if there is more than one record found.
message GetResponse {
  oneof response {
    common.Error error = 1;
    Transaction transaction = 2;
  }
}

// GetList will use SQL 'LIKE' instead of '=' for string fields
message GetListRequest {
  optional TypeList type = 1;
  optional datasources.GetListRequest source = 2;
  optional legalentities.GetListRequest legalentity = 3;
  optional ledgers.GetListRequest ledger = 4;
  optional google.protobuf.Timestamp posting_date = 5;
  optional string accounting_period = 6;
  optional string accounting_document = 7;
  optional common.DecimalValueList amount = 8;
  optional uoms.GetListRequest currency = 9;
  optional SelectConversion legal_currency1 = 10;
  optional SelectConversion legal_currency2 = 11;
  optional SelectConversion legal_currency3 = 12;
  optional string reference = 13;
  optional string purpose = 14;
  optional users.GetListRequest user = 15;
  optional authgroups.GetListRequest authgroup = 16; // Default: derived from user
  optional orgs.GetListRequest org = 17;
  optional common.StatusList status = 18;
  optional GetItemList items = 19;
}

message GetListResponse {
  oneof response {
    common.Error error = 1;
    Transaction transaction = 2;
  }
}

// A delete request is just an update request with status set to TERMINATED.
message DeleteRequest {
  string id = 1;
}

message DeleteResponse {
  oneof response {
    common.Error error = 1;
    Transaction transaction = 2;
  }
}

// TransactionItem

enum ItemType {
  ITEM_TYPE_UNSPECIFIED = 0;
  ITEM_TYPE_DEBIT = 1;
  ITEM_TYPE_CREDIT = 2;
}
message ItemTypeList {
  repeated ItemType list = 1;
}

message TransactionItem {
  uint32 item_no = 1; // transaction_id + item_no form the Human-Readable Key
  ItemType type = 2;
  recipients.Recipient recipient = 3;
  string financial_account = 4;
  common.Decimal amount = 5; // Transaction Item amount in Transaction Currency
  uoms.UoM currency = 6; // Transaction Currency
  optional Conversion legal_currency1 = 7;
  optional Conversion legal_currency2 = 8;
  optional Conversion legal_currency3 = 9;
  optional AltConversionList alt_conversions = 10;
  optional string reference = 11;
  optional legalentities.LegalEntity legalentity_offset = 12;
  optional users.GetListRequest user_offset = 13;
  optional orgs.GetListRequest org_offset = 14;
  optional recipients.Recipient recipient_offset = 15;
  optional string transaction_id_offset = 16;
  optional uint32 item_no_offset = 17;
  common.Status status = 18;
}

message ItemList {
  repeated TransactionItem list = 1;
}

message SelectItemList {
  repeated uint32 list = 1;
}

message CreateItem {
  optional uint32 item_no = 1; // Default: transaction's highest item_no + 10
  ItemType type = 2; // Default: UNSPECIFIED
  recipients.Select recipient = 3;
  optional string financial_account = 4;
  common.Decimal amount = 5; // Transaction Item amount in Transaction Currency
  uoms.Select currency = 6; // Transaction Currency
  optional string reference = 7;
  optional legalentities.Select legalentity_offset = 8;
  optional users.Select user_offset = 9;
  optional orgs.Select org_offset = 10;
  optional recipients.Select recipient_offset = 11;
  optional string transaction_id_offset = 12;
  optional uint32 item_no_offset = 13;
  optional common.Status status = 14; // Default: 1
}

message CreateItemList {
  repeated CreateItem list = 1;
}

message UpdateItem {
  uint32 item_no = 1;
  optional ItemType type = 2;
  optional recipients.Select recipient = 3;
  optional string financial_account = 4;
  optional common.Decimal amount = 5; // Transaction Item amount in Transaction Currency
  optional uoms.Select currency = 6; // Transaction Currency
  optional string reference = 7;
  optional legalentities.Select legalentity_offset = 8;
  optional users.Select user_offset = 9;
  optional orgs.Select org_offset = 10;
  optional recipients.Select recipient_offset = 11;
  optional string transaction_id_offset = 12;
  optional uint32 item_no_offset = 13;
  optional common.Status status = 14;
}

message UpdateItemList {
  repeated UpdateItem list = 1;
}

message GetItemList {
  optional common.UInt32ValueList item_no = 1;
  optional ItemTypeList type = 2;
  optional recipients.GetListRequest recipient = 3;
  optional string financial_account = 4;
  optional common.DecimalValueList amount = 5; // Transaction Item amount in Transaction Currency
  optional uoms.GetListRequest currency = 6; // Transaction Currency
  optional SelectConversion legal_currency1 = 7;
  optional SelectConversion legal_currency2 = 8;
  optional SelectConversion legal_currency3 = 9;
  optional string reference = 10;
  optional legalentities.GetListRequest legalentity_offset = 11;
  optional users.GetListRequest user_offset = 12;
  optional orgs.GetListRequest org_offset = 13;
  optional recipients.GetListRequest recipient_offset = 14;
  optional string transaction_id_offset = 15;
  optional common.UInt32ValueList item_no_offset = 16;
  optional common.Status status = 17;
}

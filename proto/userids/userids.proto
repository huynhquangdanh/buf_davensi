syntax = "proto3";

package userids;

import "kyc/kyc.proto";
import "common/errors.proto";
import "common/numbers.proto";
import "users/users.proto";
import "google/protobuf/timestamp.proto";
import "credentials/credentials.proto";
import "liveliness/liveliness.proto";
import "physiques/physiques.proto";
import "socials/socials.proto";
import "addresses/addresses.proto";
import "contacts/contacts.proto";
import "incomes/incomes.proto";

// Backed by table 'userids'
message UserId {
  users.User user = 1; // System Key: id is generated by the server or the database
  credentials.Credentials credentials = 2;
  physiques.Physique physique = 3;
  liveliness.Liveliness liveliness = 4;
  socials.Social social = 5;
  optional addresses.LabeledAddressList addresses = 6; // backed by table 'users_addresses'
  optional contacts.LabeledContactList contacts = 7; // backed by table 'users_contacts'
  optional incomes.LabeledIncomeList incomes = 8; // backed by table 'users_incomes'
  kyc.Status status = 9;
}

message List {
  repeated UserId list = 1;
}

message CreateRequest {
  users.Select user = 1;
  optional credentials.CreateRequest credentials = 2;
  optional physiques.CreateRequest physique = 3;
  optional liveliness.CreateRequest liveliness = 4;
  optional socials.CreateRequest social = 5;
  optional kyc.Status status = 6;
}

message CreateResponse {
  oneof response {
    common.Error error = 1;
    UserId userid = 2;
  }
}

message UpdateRequest {
  users.Select user = 1;
  optional credentials.UpdateCredentials credentials = 2;
  optional physiques.UpdatePhysique physique = 3;
  optional liveliness.UpdateLiveliness liveliness = 4;
  optional socials.UpdateSocial social = 5;
  optional kyc.Status status = 6;
}

message UpdateResponse {
  oneof response {
    common.Error error = 1;
    UserId userid = 2;
  }
}

// GetRequest is expected to return a single value.
message GetRequest {
  users.Select user = 1;
}

// An error is returned if there is more than one record found.
message GetResponse {
  oneof response {
    common.Error error = 1;
    UserId userid = 2;
  }
  optional bool with_addresses = 3;
  optional bool with_contacts = 4;
  optional bool with_incomes = 5;
}

// GetList will use SQL 'LIKE' instead of '=' for string fields
message GetListRequest {
  optional users.GetListRequest user = 1;
  optional credentials.GetListRequest credentials = 2;
  optional physiques.GetListRequest physique = 3;
  optional liveliness.GetListRequest liveliness = 4;
  optional socials.GetListRequest social = 5;
  optional addresses.GetListRequest addresses = 6; // "with_addresses" is implicit when specifying address search criteria
  optional contacts.GetListRequest contacts = 7; // "with_contacts" is implicit when specifying contact search criteria
  optional incomes.GetListRequest incomes = 8; // "with_incomes" is implicit when specifying contact search criteria
  optional kyc.StatusList status = 9;
}

message GetListResponse {
  oneof response {
    common.Error error = 1;
    UserId userid = 2;
  }
}

// A delete request is just an update request with status set to TERMINATED
message DeleteRequest {
  users.Select user = 1;
}

message DeleteResponse {
  oneof response {
    common.Error error = 1;
    UserId userid = 2;
  }
}

// The following messages manage the assignment of addresses, contacts and incomes to userids

message Address {
  users.Select user = 1;
  addresses.LabeledAddress address = 3;
}

message AddressList {
  users.Select user = 1;
  string name = 2;
  addresses.LabeledAddressList addresses = 3;
}

message SetAddressesRequest {
  users.Select user = 1;
  addresses.SetLabeledAddressList addresses = 2;
}

message SetAddressesResponse {
  oneof response {
    common.Error error = 1;
    AddressList addresses = 2;
  }
}

message AddAddressesRequest {
  users.Select user = 1;
  addresses.SetLabeledAddressList addresses = 2;
}

message AddAddressesResponse {
  oneof response {
    common.Error error = 1;
    AddressList addresses = 2;
  }
}

message UpdateAddressRequest {
  users.Select user = 1;
  addresses.UpdateLabeledAddressRequest address = 2;
}

message UpdateAddressResponse {
  oneof response {
    common.Error error = 1;
    Address address = 2;
  }
}

message LabelList {
  repeated string list = 1;
}

// A remove addresses request is just an address update request with status set to TERMINATED in table 'addresses'
message RemoveAddressesRequest {
  users.Select user = 1;
  LabelList labels = 2;
}

message RemoveAddressesResponse {
  oneof response {
    common.Error error = 1;
    AddressList addresses = 2;
  }
}

message Contact {
  users.Select user = 1;
  contacts.LabeledContact contact = 2;
}

message ContactList {
  users.Select user = 1;
  contacts.LabeledContactList contacts = 2;
}

message SetContactsRequest {
  users.Select user = 1;
  contacts.SetLabeledContactList contacts = 2;
}

message SetContactsResponse {
  oneof response {
    common.Error error = 1;
    ContactList contacts = 2;
  }
}

message AddContactsRequest {
  users.Select user = 1;
  contacts.SetLabeledContactList contacts = 2;
}

message AddContactsResponse {
  oneof response {
    common.Error error = 1;
    ContactList contacts = 2;
  }
}

message UpdateContactRequest {
  users.Select user = 1;
  contacts.UpdateLabeledContactRequest contact = 2;
}

message UpdateContactResponse {
  oneof response {
    common.Error error = 1;
    Contact contact = 2;
  }
}

// A remove contacts request is just a contact update request with status set to TERMINATED in table 'contacts'
message RemoveContactsRequest {
  users.Select user = 1;
  LabelList labels = 3;
}

message RemoveContactsResponse {
  oneof response {
    common.Error error = 1;
    ContactList contacts = 2;
  }
}

message Income {
  users.Select user = 1;
  incomes.LabeledIncome income = 2;
}

message IncomeList {
  users.Select user = 1;
  incomes.LabeledIncomeList incomes = 2;
}

message SetIncomesRequest {
  users.Select user = 1;
  incomes.SetLabeledIncomeList incomes = 2;
}

message SetIncomesResponse {
  oneof response {
    common.Error error = 1;
    IncomeList incomes = 2;
  }
}

message AddIncomesRequest {
  users.Select user = 1;
  incomes.SetLabeledIncomeList incomes = 2;
}

message AddIncomesResponse {
  oneof response {
    common.Error error = 1;
    IncomeList incomes = 2;
  }
}

message UpdateIncomeRequest {
  users.Select user = 1;
  incomes.UpdateLabeledIncomeRequest income = 2;
}

message UpdateIncomeResponse {
  oneof response {
    common.Error error = 1;
    Income income = 2;
  }
}

// A remove incomes request is just a income update request with status set to TERMINATED in table 'incomes'
message RemoveIncomesRequest {
  users.Select user = 1;
  LabelList labels = 3;
}

message RemoveIncomesResponse {
  oneof response {
    common.Error error = 1;
    IncomeList incomes = 2;
  }
}
